# Default values for central-settlement.
# This is a YAML-formatted file.

# Declare global configurations
global: {}

# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: mojaloop/transaction-requests-service
  tag: v10.1.2
  pullPolicy: Always
  command: '["node", "src/index.js", "api"]'

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

readinessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 60
  periodSeconds: 15

livenessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 60
  periodSeconds: 15

sidecar:
  enabled: true
  image:
    repository: mojaloop/event-sidecar
    tag: v9.5.1
    pullPolicy: Always
    command: '["npm", "run", "start"]'
  service:
    internalPort: 4001
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 120
    periodSeconds: 15
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 90
    periodSeconds: 15
  config:
    event_log_grpc_host: localhost
    event_log_grpc_port: 50051
    event_log_filter: 'audit:*, log:info, log:warn, log:error'
    event_log_metadata_only: true
    log_level: info
    log_filter: 'error, warn, info'

## metric configuration for prometheus instrumentation
metrics:
  ## flag to enable/disable the metrics end-points
  enabled: false
  config:
    timeout: 5000
    prefix: moja_
    defaultLabels:
      serviceName: transaction-requests

config:
  central_services_host: '$release_name-centralledger-service'
  central_services_port: 80
  log_level: 'info'
  log_transport: 'file'
  
  error_handling:
    include_cause_extension: false
    truncate_extensions: true

  ## Kafka Configuration
  # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
  kafka_host: '$release_name-kafka'
  kafka_port: 9092
  kafka_partitioner: 'murmur2_random'

init:
  enabled: false

service:
  type: ClusterIP
  ports:
    api:
      name: http-api
      externalPort: 80
      internalPort: 4000

  annotations: {}

  # This allows one to point the service to an external backend.
  # This is useful for local development where one wishes to hijack
  # the communication from the service to the node layer and point
  # to a specific endpoint (IP, Port, etc).
  external:
    enabled: false
    # 10.0.2.2 is the magic IP for the host on virtualbox's network
    ip: 10.0.2.2
    ports:
      api:
        name: http-api
        externalPort: 4000

ingress:
  enabled: true
  externalPath: /
  # Used to create an Ingress record.
  hosts:
    api: transaction-request-service.local
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: '/'
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
  # Secrets must be manually created in the namespace.
  # - secretName: chart-example-tls
  #   hosts:
  #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
 #  memory: 128Mi