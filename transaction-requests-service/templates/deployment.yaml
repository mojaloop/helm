apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "transactionrequestsservice.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "transactionrequestsservice.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "transactionrequestsservice.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "transactionrequestsservice.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      {{- if .Values.global.config.affinity }}
      affinity:
        {{ toYaml .Values.global.config.affinity | indent 8 }}
        {{- end }}
        {{- if .Values.global.config.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.global.config.nodeSelector | indent 8 }}
        {{- end }}
        {{- if .Values.global.config.tolerations }}
      tolerations:
        {{ toYaml .Values.global.config.tolerations | indent 8 }}
        {{- end }}
        {{- if .Values.init.enabled }}
      initContainers: {
      }
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range $port := .Values.service.ports }}
            - name: {{ $port.name }}
              containerPort: {{ $port.internalPort }}
              {{- end }}
              {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.ports.api.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.ports.api.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.log_level }}
            - name: CSL_LOG_TRANSPORT
              value: {{ .Values.config.log_transport }}
          volumeMounts:
            - name: {{ template "transactionrequestsservice.fullname" . }}-config-volume
              mountPath: /opt/transaction-requests-service/config
      volumes:
        - name: {{ template "transactionrequestsservice.fullname" . }}-config-volume
          configMap:
            name: {{ template "transactionrequestsservice.fullname" . }}-config
            items:
              - key: default.json
                path: default.json