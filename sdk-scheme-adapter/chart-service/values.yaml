# Default values for scheme-adapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# replicaCount: 1


# image:
#   repository: mojaloop/sdk-scheme-adapter
#   tag: v19.0.1
#   pullPolicy: IfNotPresent

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# livenessProbe:
#   enabled: true
#   initialDelaySeconds: 10
#   periodSeconds: 60
#   timeoutSeconds: 5
#   successThreshold: 1
#   failureThreshold: 3
# readinessProbe:
#   enabled: true
#   initialDelaySeconds: 3
#   periodSeconds: 60
#   timeoutSeconds: 5
#   successThreshold: 1
#   failureThreshold: 3

# ## TO REMOVE
# # ingress:
# #   enabled: false
# #   ingressPathRewriteRegex: (/|$)(.*)
# #   annotations:
# #       nginx.ingress.kubernetes.io/rewrite-target: /$2
# #   hosts:
# #     - host: chart-example.local
# #       paths: []

# #   tls: []
# #   outboundIngressEnabled: false

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# nodeSelector: {}

# tolerations: []

# affinity: {}

# @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  # This can be overridden by defining the kafka element.
  kafka:
    host: kafka
    port: 9092
  redis:
    host: redis
    port: 6379
  # This can be overridden by defining the adminApiSvc element.
  adminApiSvc: {}
    # host: admin-api-svc
    # port: 80

kafka:
  host: kafka
  port: 9092

redis:
  host: redis
  port: 6379
  
env:
  ## API-SVC general config
  CACHE_URL: redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}
  INBOUND_LISTEN_PORT: 4000
  OUTBOUND_LISTEN_PORT: 4001
  ENABLE_TEST_FEATURES: true
  TEST_LISTEN_PORT: 4002
  INBOUND_MUTUAL_TLS_ENABLED: false
  OUTBOUND_MUTUAL_TLS_ENABLED: false
  JWS_SIGN: false
  OAUTH_TOKEN_ENDPOINT: test
  OAUTH_CLIENT_KEY: test
  OAUTH_CLIENT_SECRET: test
  WS_PORT: 4005
  METRICS_SERVER_LISTEN_PORT: 4004
  MULTIPLE_PARTIES_RESPONSE: false
  AUTO_ACCEPT_PARTY: true
  AUTO_ACCEPT_QUOTES: true
  LOG_INDENT: 0
  OAUTH_REFRESH_SECONDS: 3600
  PM4ML_ENABLED: false
  ### These configs are only applicable if PM4ML_ENABLED=true
  MGMT_API_WS_URL: localhost
  MGMT_API_WS_PORT: 4005
  ### Default Mojaloop Switch endpoints
  PEER_ENDPOINT: 'overridden-below'
  ### Set each Mojaloop Switch endpoint service individually
  ALS_ENDPOINT: '{{ .Release.Name }}-account-lookup-service'
  QUOTES_ENDPOINT: '{{ .Release.Name }}-quoting-service'
  BULK_QUOTES_ENDPOINT: '{{ .Release.Name }}-quoting-service'
  TRANSACTION_REQUESTS_ENDPOINT: '{{ .Release.Name }}-transaction-requests-service'
  TRANSFERS_ENDPOINT: '{{ .Release.Name }}-api-adapter-servic'
  BULK_TRANSFERS_ENDPOINT: '{{ .Release.Name }}-bulk-api-adapter-service'
  ### Backend Service
  BACKEND_ENDPOINT: 'does-not-exist'
  ## API-SVC kafka config
  BACKEND_EVENT_CONSUMER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  BACKEND_EVENT_PRODUCER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  FSPIOP_EVENT_CONSUMER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  FSPIOP_EVENT_PRODUCER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  BACKEND_EVENT_CONSUMER_GROUP_ID: payer-domain_events_consumer_api_svc_backend_group
  FSPIOP_EVENT_CONSUMER_GROUP_ID: payer-domain_events_consumer_api_svc_fspiop_group
  BACKEND_EVENT_CONSUMER_TOPICS: payer-topic-sdk-outbound-domain-events
  BACKEND_EVENT_PRODUCER_TOPIC: payer-topic-sdk-outbound-domain-events
  FSPIOP_EVENT_CONSUMER_TOPICS: payer-topic-sdk-outbound-domain-events
  FSPIOP_EVENT_PRODUCER_TOPIC: payer-topic-sdk-outbound-domain-events
  ## outbound-command-event-handler
  # LOG_LEVEL: info
  API_SERVER_ENABLED: true
  API_SERVER_PORT: 8000
  REDIS_CONNECTION_URL: redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}
  COMMAND_EVENT_CONSUMER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  DOMAIN_EVENT_PRODUCER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  MAX_ITEMS_PER_BATCH: 1000
  COMMAND_EVENT_CONSUMER_GROUP_ID: payer-command_events_consumer_group
  COMMAND_EVENT_CONSUMER_TOPICS: payer-topic-sdk-outbound-command-events
  DOMAIN_EVENT_PRODUCER_TOPIC: payer-topic-sdk-outbound-domain-events
  ## outbound-domain-event-handler
  # LOG_LEVEL: info
  # REDIS_CONNECTION_URL: redis://{{ .Values.redis.host }}:{{ .Values.redis.port }}
  DOMAIN_EVENT_CONSUMER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  COMMAND_EVENT_PRODUCER_BROKER_LIST: "{{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
  DOMAIN_EVENT_CONSUMER_GROUP_ID: payer-domain_events_consumer_group
  DOMAIN_EVENT_CONSUMER_TOPICS: payer-topic-sdk-outbound-domain-events
  COMMAND_EVENT_PRODUCER_TOPIC: payer-topic-sdk-outbound-command-events

podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##

nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `main.affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `main.affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `main.affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for %%MAIN_CONTAINER_NAME%% pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `main.podAntiAffinityPreset`, and `main.nodeAffinityPreset` will be ignored when it's set
##

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% pods' Security Context
## @param podSecurityContext.fsGroup Set %%MAIN_CONTAINER_NAME%% pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled %%MAIN_CONTAINER_NAME%% containers' Security Context
## @param containerSecurityContext.runAsUser Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsUser
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001

image:
  registry: docker.io
  repository: mojaloop/sdk-scheme-adapter
  tag: v20.0.0-bulk-snapshot.16
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

replicaCount: 1
command: 
  - yarn
  - start

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command: 
    - yarn
    - start
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - --inspect=0.0.0.0:{{ .Values.diagnosticMode.debug.port }}
  
  ## @param diagnosticMode.debug config to override all debug information
  ##
  debug:
    internalPort: 9229
    port: 9229

## @param initContainers Add additional init containers to the %%MAIN_CONTAINER_NAME%% pod(s)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
# initContainers: []
initContainers: |
  - name: wait-for-kafka
    image: solsson/kafka:2.8.1
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT}; 
        do
          echo --------------------;
          echo Waiting for Kafka...;
          sleep 2; 
        done;
        echo ====================; 
        echo Kafka ok!;
    env:
      - name: KAFKA_HOST
        value: {{ .Values.kafka.host | quote }}
      - name: KAFKA_PORT
        value: {{ .Values.kafka.port | quote }}
  - name: wait-for-redis
    image: redis:7.0.5
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - until redis-cli -h ${REDIS_HOST} -p ${REDIS_PORT} ping; 
        do
          echo --------------------;
          echo Waiting for Redis...;
          sleep 2; 
        done;
        echo ====================; 
        echo Redis ok!;
    env:
      - name: REDIS_HOST
        value: {{ .Values.redis.host | quote }}
      - name: REDIS_PORT
        value: {{ .Values.redis.port | quote }}

readinessProbe: |
  httpGet:
    path: /
    port: {{ .Values.env.OUTBOUND_LISTEN_PORT }}
  initialDelaySeconds: 15
  periodSeconds: 15
livenessProbe: |
  httpGet:
    path: /
    port: {{ .Values.env.OUTBOUND_LISTEN_PORT }}
  initialDelaySeconds: 15
  periodSeconds: 15

## metric configuration for prometheus instrumentation
metrics:
  ## flag to enable/disable the metrics end-points
  enabled: true
  config:
    timeout: 5000
    port: "{{ .Values.env.METRICS_SERVER_LISTEN_PORT }}"
    prefix: moja_
    defaultLabels:
      serviceName: ml-service

service:
  ## Not used by the SDK-Scheme-Adapter
  # internalPort: 3000
  ## @param service.type %%MAIN_CONTAINER_NAME%% service type
  ##
  type: ClusterIP
  ## @param service.port %%MAIN_CONTAINER_NAME%% service HTTP port
  ##
  port: 80
  ## @param service.httpsPort %%MAIN_CONTAINER_NAME%% service HTTPS port
  ##
  httpsPort: 443
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## @param service.nodePorts.https Node port for HTTPS
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http:
    https:
  ## @param service.clusterIP %%MAIN_CONTAINER_NAME%% service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP:
  ## @param service.loadBalancerIP %%MAIN_CONTAINER_NAME%% service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP:
  ## @param service.loadBalancerSourceRanges %%MAIN_CONTAINER_NAME%% service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy %%MAIN_CONTAINER_NAME%% service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for %%MAIN_CONTAINER_NAME%% service
  ##
  annotations: {}

ingress:
  ## @param ingress.enabled Enable ingress record generation for %%MAIN_CONTAINER_NAME%%
  ##
  enabled: true
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion:
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: sdk-scheme-adapter.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional custom annotations for the ingress record
  ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
  ##
  certManager: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: transfer-api-svc.local
  ##     path: /
  ##
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  # extraPaths: []
  extraPaths:
  - path: /inbound/
    pathType: ImplementationSpecific
    backend:
      service:
        name: '{{ include "common.names.fullname" . }}'
        port:
          name: inboundapi
      # serviceName: '{{ include "common.names.fullname" . }}'
      # servicePort: inboundapi
  - path: /outbound/
    pathType: ImplementationSpecific
    backend:
      service:
        name: '{{ include "common.names.fullname" . }}'
        port:
          name: outboundapi
      # serviceName: '{{ include "common.names.fullname" . }}'
      # servicePort: outboundapi
  - path: /sdktest/
    pathType: ImplementationSpecific
    backend:
      service:
        name: '{{ include "common.names.fullname" . }}'
        port:
          name: testapi
      ## This is required for 
      # serviceName: '{{ include "common.names.fullname" . }}'
      # servicePort: testapi
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - transfer-api-svc.local
  ##   secretName: transfer-api-svc.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: transfer-api-svc.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  className: "nginx"

## RBAC configuration
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: false

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: false
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
