# This is a YAML-formatted file.

sdk-scheme-adapter:
  enabled: true

  ## Local re-usable configs
  config:
    simName: &CONFIG_SIM2_NAME ttksim2
    database: &CONFIG_SIM2_DB 2

  sdk-scheme-adapter-api-svc:
    enabled: true
    nameOverride: 'ttksim2-sdk-api-svc'

    redis:
      database: *CONFIG_SIM2_DB # This is a number between 0 to 15

    config:
      simName: *CONFIG_SIM2_NAME

    ingress:
      ## @param ingress.enabled Enable ingress record generation for %%MAIN_CONTAINER_NAME%%
      ##
      enabled: true
      ## @param ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion:
      ## @param ingress.hostname Default host for the ingress record
      ##
      hostname: ttksim2-sdk-scheme-adapter.local
      ## @param ingress.path Default path for the ingress record
      ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
      ##
      path: /
      ## @param ingress.annotations Additional custom annotations for the ingress record
      ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
      ##
      annotations: {}
      ## Example annotations for ingress class and rewrite-targets
      ## https://kubernetes.github.io/ingress-nginx/examples/rewrite/
      # nginx.ingress.kubernetes.io/rewrite-target: '/'
      # nginx.ingress.kubernetes.io/rewrite-target: '/$2'
      ## https://kubernetes.github.io/ingress-nginx/user-guide/multiple-ingress/
      # kubernetes.io/ingress.class: nginx
      ## https://kubernetes.github.io/ingress-nginx/user-guide/tls/#automated-certificate-management-with-kube-lego
      # kubernetes.io/tls-acme: "true""

      ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
      ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
      ## You can:
      ##   - Use the `ingress.secrets` parameter to create this TLS secret
      ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
      ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
      ##
      tls: false
      ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
      ##
      certManager: false
      ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false
      ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
      ## e.g:
      ## extraHosts:
      ##   - name: transfer-api-svc.local
      ##     path: /
      ##
      ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
      ## e.g:
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      # extraPaths: []
      extraPaths:
      - path: /inbound/
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ include "common.names.fullname" . }}'
            port:
              name: inboundapi
          # serviceName: '{{ include "common.names.fullname" . }}'
          # servicePort: inboundapi
      - path: /outbound/
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ include "common.names.fullname" . }}'
            port:
              name: outboundapi
          # serviceName: '{{ include "common.names.fullname" . }}'
          # servicePort: outboundapi
      - path: /sdktest/
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ include "common.names.fullname" . }}'
            port:
              name: testapi
          ## This is required for
          # serviceName: '{{ include "common.names.fullname" . }}'
          # servicePort: testapi
      ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## e.g:
      ## extraTls:
      ## - hosts:
      ##     - transfer-api-svc.local
      ##   secretName: transfer-api-svc.local-tls
      ##
      extraTls: []
      ## @param ingress.secrets Custom TLS certificates as secrets
      ## NOTE: 'key' and 'certificate' are expected in PEM format
      ## NOTE: 'name' should line up with a 'secretName' set further up
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ## e.g:
      ## secrets:
      ##   - name: transfer-api-svc.local-tls
      ##     key: |-
      ##       -----BEGIN RSA PRIVATE KEY-----
      ##       ...
      ##       -----END RSA PRIVATE KEY-----
      ##     certificate: |-
      ##       -----BEGIN CERTIFICATE-----
      ##       ...
      ##       -----END CERTIFICATE-----
      ##
      secrets: []
      className: "nginx"

    env:
      DFSP_ID: '{{ .Values.config.simName }}'
      BACKEND_EVENT_CONSUMER_GROUP_ID: '{{ .Values.config.simName }}-domain_events_consumer_api_svc_backend_group'
      FSPIOP_EVENT_CONSUMER_GROUP_ID: '{{ .Values.config.simName }}-domain_events_consumer_api_svc_fspiop_group'
      BACKEND_EVENT_CONSUMER_TOPICS: '{{ .Values.config.simName }}-topic-sdk-outbound-domain-events'
      BACKEND_EVENT_PRODUCER_TOPIC: '{{ .Values.config.simName }}-topic-sdk-outbound-domain-events'
      FSPIOP_EVENT_CONSUMER_TOPICS: '{{ .Values.config.simName }}-topic-sdk-outbound-domain-events'
      FSPIOP_EVENT_PRODUCER_TOPIC: '{{ .Values.config.simName }}-topic-sdk-outbound-domain-events'
      BACKEND_ENDPOINT: '{{ .Release.Name }}-{{ .Values.config.simName }}-ttk-backend:4040'

  sdk-scheme-adapter-dom-evt-handler:
    enabled: true

    redis:
      database: *CONFIG_SIM2_DB # This is a number between 0 to 15

    config:
      simName: *CONFIG_SIM2_NAME

    nameOverride: 'ttksim2-sdk-dom-evt-handler'

    env:
      DOMAIN_EVENT_CONSUMER_GROUP_ID: '{{ .Values.config.simName }}-domain_events_consumer_group'
      DOMAIN_EVENT_CONSUMER_TOPICS: '{{ .Values.config.simName }}-topic-sdk-outbound-domain-events'
      COMMAND_EVENT_PRODUCER_TOPIC: '{{ .Values.config.simName }}-topic-sdk-outbound-command-events'

  sdk-scheme-adapter-cmd-evt-handler:
    enabled: true
    nameOverride: 'ttksim2-sdk-cmd-evt-handler'

    redis:
      database: *CONFIG_SIM2_DB # This is a number between 0 to 15

    config:
      simName: *CONFIG_SIM2_NAME

    env:
      COMMAND_EVENT_CONSUMER_GROUP_ID: '{{ .Values.config.simName }}-command_events_consumer_group'
      COMMAND_EVENT_CONSUMER_TOPICS: '{{ .Values.config.simName }}-topic-sdk-outbound-command-events'
      DOMAIN_EVENT_PRODUCER_TOPIC: '{{ .Values.config.simName }}-topic-sdk-outbound-domain-events'

ml-testing-toolkit:
  enabled: true

  ml-testing-toolkit-backend:
    enabled: true
    nameOverride: 'ttksim2-ttk-backend'

    config_files:
      user_config.json:
        CALLBACK_ENDPOINT: 'http://$release_name-ttksim2-sdk-api-svc:4001'
      system_config.json: {
        "API_DEFINITIONS": [
          {
            "type": "mojaloop_simulator_inbound",
            "version": "1.4",
            "folderPath": "mojaloop_simulator_sim_1.4",
            "asynchronous": true
          },
          {
            "type": "scheme_adapter_outbound",
            "version": "1.0",
            "folderPath": "mojaloop_sdk_outbound_scheme_adapter_1.0",
            "hostnames": [],
            "prefix": "/sdk-out",
            "asynchronous": true
          }
        ]
      }
      rules_response__default.json: 'https://github.com/mojaloop/sdk-scheme-adapter/raw/v23.0.1/test/func/config/ttk-ttksim2/spec_files/rules_response/default.json'
      api_definitions__mojaloop_simulator_sim_1.4__api_spec.yaml: 'https://github.com/mojaloop/sdk-scheme-adapter/raw/v23.0.1/test/func/config/ttk-ttksim2/spec_files/api_definitions/mojaloop_simulator_sim_1.4/api_spec.yaml'
      api_definitions__mojaloop_simulator_sim_1.4__response_map.json: 'https://github.com/mojaloop/sdk-scheme-adapter/raw/v23.0.1/test/func/config/ttk-ttksim2/spec_files/api_definitions/mojaloop_simulator_sim_1.4/response_map.json'
      api_definitions__mojaloop_sdk_outbound_scheme_adapter_1.0__api_spec.yaml: 'https://github.com/mojaloop/sdk-scheme-adapter/raw/v23.0.1/test/func/config/ttk-ttksim2/spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml'
      api_definitions__mojaloop_sdk_outbound_scheme_adapter_1.0__callback_map.json: 'https://github.com/mojaloop/sdk-scheme-adapter/raw/v23.0.1/test/func/config/ttk-ttksim2/spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json'

  ## @param initContainers Add additional init containers to the %%MAIN_CONTAINER_NAME%% pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: [] # We want to disable init-containers as there is no need

  #   ingress:
  #     enabled: true
  #     hosts:
  #       specApi:
  #         host: ml-testing-toolkit-specapi.local
  #       adminApi:
  #         host: ml-testing-toolkit.local
  #   extraEnvironments:
  #     ml-default-environment.json: {
  #       "inputValues": {
  #         "VAR1": "VALUE1"
  #       }
  #     }

  ml-testing-toolkit-frontend:
    enabled: true
    nameOverride: 'ttksim2-ttk-frontend'
  #   ingress:
  #     enabled: true
  #     hosts:
  #       ui:
  #         host: ml-testing-toolkit.local
  #   config:
  #     API_BASE_URL: http://ml-testing-toolkit.local
