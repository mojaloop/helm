# Default values for central.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

centralhub:
  enabled: true
  replicaCount: 1
  image:
    repository: mojaloop/central-hub
    tag: latest
    pullPolicy: IfNotPresent

  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 45
    periodSeconds: 15
  
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 45
    periodSeconds: 15
    
  config:
    default_json: '
      {
        "PORT": "$service_port",
        "HOSTNAME": "http://$ingress_host",
        "API_URL": "http://$centralledger_host:$centralledger_api_port",
        "ADMIN_API_URL": "http://$centralledger_host:$centralledger_admin_port"
      }
  '

  service:
    name: http-api-and-web
    type: ClusterIP
    externalPort: 4001
    internalPort: 4001

    annotations: {}

    # This allows one to point the service to an external backend. 
    # This is useful for local development where one wishes to hijack 
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        api: 
          name: http-api-and-web
          externalPort: 4001


  ingress:
    enabled: true
    # Used to create an Ingress record.
    hosts:
      - central-hub.local
    
    externalPath: /
    
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  centralledger:
    enabled: true
    nameOverride: centralledger
    replicaCount: 1
    containers:
      api:
        image:
          repository: mojaloop/central-ledger
          tag: latest
          pullPolicy: IfNotPresent
          command: '["node", "src/api/index.js"]'
        service:
          ports:
            api:
              name: http-api
              externalPort: 3000
              internalPort: 3000
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15

      admin:
        image:
          repository: mojaloop/central-ledger
          tag: latest
          pullPolicy: IfNotPresent
          command: '["node", "src/admin/index.js"]'
        service:
          ports:
            api:
              name: http-api-admin
              externalPort: 3001
              internalPort: 3001
        readinessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 120
          periodSeconds: 15  
        livenessProbe:
          enabled: true
          httpGet:
            path: /health
          initialDelaySeconds: 90
          periodSeconds: 15


    config:
      default_json: '
        {
          "PORT": $service_api_port,
          "ADMIN_PORT": $service_admin_port,
          "HOSTNAME": "$ingress_host",
          "ENABLE_TOKEN_AUTH": false,
          "ENABLE_BASIC_AUTH": false,
          "LEDGER_ACCOUNT_NAME": "LedgerName",
          "LEDGER_ACCOUNT_PASSWORD": "LedgerPassword",
          "AMOUNT": {
              "PRECISION": 10,
              "SCALE": 2
          },
          "SIDECAR": {
              "DISABLED": false,
              "HOST": "$forensicloggingsidecar_host",
              "PORT": $forensicloggingsidecar_port,
              "CONNECT_TIMEOUT": 45000,
              "RECONNECT_INTERVAL": 5000
          }
        }
    '

    init:
      enabled: true
      image:
        name: wait-for-postgres
        repository: bowerswilkins/awaitpostgres
        tag: latest
        pullPolicy: IfNotPresent

    service:
      type: ClusterIP
      
      annotations: {}

      # This allows one to point the service to an external backend. 
      # This is useful for local development where one wishes to hijack 
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          api: 
            name: http-api
            externalPort: 3000
          admin: 
            name: http-api-admin
            externalPort: 3001

    ingress:
      enabled: true
      externalPath:
        api: /
        admin: /admin/
      # Used to create an Ingress record.
      hosts:
        api: central-ledger.local
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: '/'
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    forensicloggingsidecar:
      enabled: true
      nameOverride: "forensicloggingsidecar-ledger"
      replicaCount: 1
      image:
        repository: mojaloop/forensic-logging-sidecar
        tag: latest
        pullPolicy: IfNotPresent

      service:
        name: http-api-and-ws
        type: ClusterIP
        externalPort: 5678
        internalPort: 5678

        annotations: {}

        # This allows one to point the service to an external backend. 
        # This is useful for local development where one wishes to hijack 
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api: 
              name: http-api-and-ws
              externalPort: 5678

      readinessProbe:
        enabled: true
        initialDelaySeconds: 90
        periodSeconds: 15

      livenessProbe:
        enabled: true
        initialDelaySeconds: 90
        periodSeconds: 15
        
      ingress:
        enabled: false
        # Used to create an Ingress record.
        hosts:
          api: forensic-logging-sidecar.local
        
        externalPath: /

        annotations:
          # kubernetes.io/ingress.class: nginx
          
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

      config:
        default_json: '
          {
            "PORT": $servicePort,
            "SERVICE": "$serviceName",
            "BATCH_SIZE": 64,
            "BATCH_TIME_INTERVAL": 300000,
            "KMS": {
              "URL": "ws://$kmsHost:$kmsPort/sidecar",
              "PING_INTERVAL": 30000,
              "REQUEST_TIMEOUT": 90000,
              "CONNECT_TIMEOUT": 60000,
              "RECONNECT_INTERVAL": 10000
            }
          }
      '
      
      centralkms:
        enabled: true
        nameOverride: "centralkms"
        replicaCount: 1
        image:
          repository: mojaloop/central-kms
          tag: latest
          pullPolicy: IfNotPresent

        service:
          name: http-api-and-tcp-websocket
          type: ClusterIP
          externalPort: 8080
          internalPort: 8080

          annotations: {}
          
          # This allows one to point the service to an external backend. 
          # This is useful for local development where one wishes to hijack 
          # the communication from the service to the node layer and point
          # to a specific endpoint (IP, Port, etc).
          external:
            enabled: false
            # 10.0.2.2 is the magic IP for the host on virtualbox's network
            ip: 10.0.2.2
            ports:
              api: 
                name: http-api-and-tcp-websocket
                externalPort: 8080

        readinessProbe:
          enabled: true
          httpGet:
            path: /sidecars
          initialDelaySeconds: 45
          periodSeconds: 15

        livenessProbe:
          enabled: true
          httpGet:
            path: /sidecars
          initialDelaySeconds: 45
          periodSeconds: 15
          
        ingress:
          enabled: true
          # Used to create an Ingress record.
          hosts:
            - central-kms.local
          externalPath: /
          
          annotations:
            # kubernetes.io/ingress.class: nginx
          
          tls:
            # Secrets must be manually created in the namespace.
            # - secretName: chart-example-tls
            #   hosts:
            #     - chart-example.local

        resources: {}
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #  cpu: 100m
          #  memory: 128Mi
          # requests:
          #  cpu: 100m
          #  memory: 128Mi

        postgresql:
          enabled: true 
          nameOverride: "centralkms-postgresql"
          ## Create a database user
          postgresUser: kms
          ## Default: random 10 character string
          postgresPassword: xD873IyaQB

          service:
            type: ClusterIP
            port: 5432
            externalIPs: []

      postgresql:
        enabled: true
        nameOverride: "forensicloggingsidecar-ledger-postgresql"
        ## Create a database user
        postgresUser: sidecar
        ## Default: random 10 character string
        postgresPassword: Wqt0KlkKvL

        service:
          type: ClusterIP
          port: 5432
          externalIPs: []

    postgresql:
      enabled: true 
      nameOverride: "centralledger-postgresql"
      ## Create a database user
      postgresUser: central_ledger
      ## Default: random 10 character string
      postgresPassword: oyMxgZChuu

      service:
        type: ClusterIP
        port: 5432
        externalIPs: []

centraldirectory:
  enabled: true
  replicaCount: 1
  image:
    repository: mojaloop/central-directory
    tag: latest
    pullPolicy: IfNotPresent

  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  config:
    default_json: '
      {
        "PORT": $service_port,
        "HOSTNAME": "http://$ingress_host",
        "END_USER_REGISTRY_URL": "http://$centralenduserregistry_host:$centralenduserregistry_port",
        "SCHEME_ID": "001",
        "DEFAULT_DFSP": "",
        "ENABLE_TOKEN_AUTH": false,
        "PATHFINDER": {
          "PARTNER_ID": 10305,
          "SERVICE": "E2U+mm",
          "CACHE_TIME": 300000,
          "REGEX": {
            "PATTERN": "^.*$",
            "REPLACE": "mm:#{identifier}@leveloneproject.org"
          },
          "QUERY": {
            "ADDRESS": "$pathfinder_host",
            "PORT": 15353,
            "TIMEOUT": 15000
          },
          "PROVISIONING": {
            "ADDRESS": "http://$pathfinder_host:$pathfinder_provisioning_port/nrs-pi/services/SIPIX/SendRequest"
          }
        }
      }
  '

  init:
    enabled: true

  service:
    type: ClusterIP
    ports:
      api:
        name: http-api
        externalPort: 3000
        internalPort: 3000

    annotations: {}

    # This allows one to point the service to an external backend. 
    # This is useful for local development where one wishes to hijack 
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        api: 
          name: http-api
          externalPort: 3000

  ingress:
    enabled: false
    externalPath: /
    # Used to create an Ingress record.
    hosts:
      api: central-directory.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  centralenduserregistry:
    enabled: true
    nameOverride: "centralenduserregistry"
    replicaCount: 1
    image:
      repository: mojaloop/central-end-user-registry
      tag: latest
      pullPolicy: IfNotPresent

    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 45
      periodSeconds: 15

    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 45
      periodSeconds: 15

    config:
      default_json: '
        {
          "PORT": $service_port,
          "HOSTNAME": "http://$ingress_host"
        }
    '

    init:
      enabled: true

    service:
      type: ClusterIP
      ports:
        api:
          name: http-api
          externalPort: 3001
          internalPort: 3001

      annotations: {}

      # This allows one to point the service to an external backend. 
      # This is useful for local development where one wishes to hijack 
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          provisioning: 
            name: http-api
            externalPort: 3001

    ingress:
      enabled: false
      externalPath: /
      # Used to create an Ingress record.
      hosts:
        api: central-end-user-registry.local
      annotations:
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    postgresql:
      enabled: true 
      nameOverride: "centralenduserregistry-postgresql"
      ## postgres image repository
      image: "postgres"
      ## postgres image version
      ## ref: https://hub.docker.com/r/library/postgres/tags/
      ##
      imageTag: "9.6.2"

      ## Specify a imagePullPolicy
      ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      # imagePullPolicy:

      ## Create a database user
      ## Default: postgres
      postgresUser: end_user_registry
      ## Default: random 10 character string
      postgresPassword: yGnTC07WQ6

      service:
        type: ClusterIP
        port: 5432
        externalIPs: []

  mockpathfinder:
    enabled: true
    nameOverride: "mockpathfinder"
    replicaCount: 1
    image:
      repository: mojaloop/mock-pathfinder
      tag: latest
      pullPolicy: IfNotPresent

    config:
      default_json: '
      {
        "QUERY": {
          "PORT": $query_port,
          "DEFAULT_RECORD": {
            "order": 10,
            "preference": 50,
            "flags": "u",
            "service": "E2U+pstn:tel",
            "regexp": "!^(.*)$!tel:\\1;q_stat=102!",
            "replacement": "",
            "ttl": 900
          }
        },
        "PROVISIONING": {
          "PORT": $provisioning_port,
          "PATH": "/nrs-pi/services/SIPIX/SendRequest",
          "WSDL_FILE": "./sipix-2.0.0.wsdl",
          "DEFAULT_CUSTOMER_ID": 1234
        }
      }
    '

    service:
      type: ClusterIP
      ports:
        provisioning:
          name: tcp-prov
          externalPort: 8080
          internalPort: 8080
        query:
          name: tcp-query
          externalPort: 15353
          internalPort: 15353

      annotations: {}

      # This allows one to point the service to an external backend. 
      # This is useful for local development where one wishes to hijack 
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          provisioning: 
            name: tcp-prov
            externalPort: 8080
          query: 
            name: tcp-query
            externalPort: 15353


    ingress:
      enabled: false
      # Used to create an Ingress record.
      hosts:
        api: mock-pathfinder.local
      annotations:
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    postgresql:
      enabled: true 
      nameOverride: "mockpathfinder-postgresql"
      ## Create a database user
      postgresUser: mock-pathfinder
      ## Default: random 10 character string
      postgresPassword: IypvXbJ1Zb

      service:
        type: ClusterIP
        port: 5432
        externalIPs: []

  postgresql:
    enabled: true 
    nameOverride: "centraldirectory-postgresql"
    ## Default: postgres
    postgresUser: central-directory
    ## Default: random 10 character string
    postgresPassword: gR5hARbsfa

    service:
      type: ClusterIP
      port: 5432
      externalIPs: []
