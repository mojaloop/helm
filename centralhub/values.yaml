# Default values for central-kms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: mojaloop/central-hub
  tag: latest
  pullPolicy: IfNotPresent

livenessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 60
  periodSeconds: 10
  
config:
  default_json: '
    {
      "PORT": "$service_port",
      "HOSTNAME": "http://$ingress_host",
      "API_URL": "http://$centralledger_host:$centralledger_api_port",
      "ADMIN_API_URL": "http://$centralledger_host:$centralledger_admin_port"
    }
'

service:
  name: http-api-and-tcp-websocket
  type: ClusterIP
  externalPort: 4001
  internalPort: 4001

centralledger:
  enabled: true
  nameOverride: centralledger

ingress:
  enabled: true
  # Used to create an Ingress record.
  hosts:
    - central-hub.local
  
  externalPath: /
  
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

centralledger:
  enabled: true
  nameOverride: centralledger
  replicaCount: 1
  containers:
    api:
      image:
        repository: mojaloop/central-ledger
        tag: latest
        pullPolicy: IfNotPresent
        command: '["node", "src/api/index.js"]'
      service:
        type: ClusterIP
        ports:
          api:
            name: http-api
            externalPort: 3000
            internalPort: 3000
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 15
        periodSeconds: 5  
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 15
        periodSeconds: 5

    admin:
      image:
        repository: mojaloop/central-ledger
        tag: latest
        pullPolicy: IfNotPresent
        command: '["node", "src/admin/index.js"]'
      service:
        type: ClusterIP
        ports:
          api:
            name: http-api-admin
            externalPort: 3001
            internalPort: 3001
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 15
        periodSeconds: 5  
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 15
        periodSeconds: 10


  config:
    default_json: '
      {
        "PORT": $service_api_port,
        "ADMIN_PORT": $service_admin_port,
        "HOSTNAME": "$ingress_host",
        "ENABLE_TOKEN_AUTH": false,
        "ENABLE_BASIC_AUTH": false,
        "LEDGER_ACCOUNT_NAME": "LedgerName",
        "LEDGER_ACCOUNT_PASSWORD": "LedgerPassword",
        "AMOUNT": {
            "PRECISION": 10,
            "SCALE": 2
        },
        "SIDECAR": {
            "DISABLED": false,
            "HOST": "$forensicloggingsidecar_host",
            "PORT": $forensicloggingsidecar_port,
            "CONNECT_TIMEOUT": 45000,
            "RECONNECT_INTERVAL": 5000
        }
      }
  '

  init:
    enabled: true
    image:
      name: wait-for-postgres
      repository: bowerswilkins/awaitpostgres
      tag: latest
      pullPolicy: IfNotPresent

  service:
    type: ClusterIP
  #   ports:
  #     api:
  #       name: http-api
  #       externalPort: 3000
  #       internalPort: 3000
    # - name: provisioning
    #   externalPort: 8080
    #   internalPort: 8080
    # - name: query
    #   externalPort: 15353
    #   internalPort: 15353

  ingress:
    enabled: true
    externalPath:
      api: /
      admin: /admin/
    # Used to create an Ingress record.
    hosts:
      api: central-ledger.local
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: '/'
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  centraldirectory:
    enabled: true
    nameOverride: "centraldirectory"
    # service:
    #   type: ClusterIP
    #   ports:
    #     api:
    #       name: http-api
    #       externalPort: 3001
    #       internalPort: 3001

  forensicloggingsidecar:
    enabled: true
    nameOverride: "forensicloggingsidecar-ledger"
    replicaCount: 1
    image:
      repository: mojaloop/forensic-logging-sidecar
      tag: latest
      pullPolicy: IfNotPresent

    service:
      name: http-api-and-ws
      type: ClusterIP
      externalPort: 5678
      internalPort: 5678

    readinessProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 5

    livenessProbe:
      enabled: true
      initialDelaySeconds: 15
      periodSeconds: 5
      
    ingress:
      enabled: false
      # Used to create an Ingress record.
      hosts:
        api: forensic-logging-sidecar.local
      
      externalPath: /

      annotations:
        # kubernetes.io/ingress.class: nginx
        
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    centralkms:
      enabled: true
      nameOverride: "centralkms"
      replicaCount: 1
      image:
        repository: mojaloop/central-kms
        tag: latest
        pullPolicy: IfNotPresent

      service:
        name: http-api-and-tcp-websocket
        type: ClusterIP
        externalPort: 8080
        internalPort: 8080

      readinessProbe:
        enabled: true
        httpGet:
          path: /sidecars
        initialDelaySeconds: 15
        periodSeconds: 5

      livenessProbe:
        enabled: true
        httpGet:
          path: /sidecars
        initialDelaySeconds: 15
        periodSeconds: 5
        
      ingress:
        enabled: true
        # Used to create an Ingress record.
        hosts:
          - central-kms.local
        externalPath: /
        
        annotations:
          # kubernetes.io/ingress.class: nginx
        
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

      postgresql:
        enabled: true 
        nameOverride: "centralkms-postgresql"
        ## Create a database user
        postgresUser: kms
        ## Default: random 10 character string
        postgresPassword: xD873IyaQB

    postgresql:
      enabled: true
      nameOverride: "forensicloggingsidecar-ledger-postgresql"
      ## Create a database user
      postgresUser: sidecar
      ## Default: random 10 character string
      postgresPassword: Wqt0KlkKvL

  postgresql:
    enabled: true 
    nameOverride: "centralledger-postgresql"
    ## Create a database user
    postgresUser: central_ledger
    ## Default: random 10 character string
    postgresPassword: oyMxgZChuu
