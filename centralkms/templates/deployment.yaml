{{- $dbHost := printf "%s-%s" .Release.Name .Values.postgresql.nameOverride -}}
apiVersion: {{ template "centralkms.apiVersion.Deployment" . }}
kind: Deployment
metadata:
  name: {{ template "centralkms.fullname" . }}
  labels:
    app: {{ template "centralkms.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "centralkms.fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
{{- if .Values.global.config.affinity }}
      affinity:
{{ toYaml .Values.global.config.affinity | indent 8 }}
{{- end }}
{{- if .Values.global.config.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.config.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.global.config.tolerations }}
      tolerations:
{{ toYaml .Values.global.config.tolerations | indent 8 }}
{{- end }}
      initContainers:
        - name: wait-for-postgres
          image: bowerswilkins/awaitpostgres
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: "POSTGRES_URL"
            value: "postgresql://{{ .Values.postgresql.postgresUser }}:{{ .Values.postgresql.postgresPassword }}@{{ $dbHost }}:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.postgresDatabase }}?sslmode=disable"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "centralkms.fullname" . }}
                  key: db.username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "centralkms.fullname" . }}
                  key: db.password
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ template "centralkms.fullname" . }}
                  key: db.host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "centralkms.fullname" . }}
                  key: db.port
