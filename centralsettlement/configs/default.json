{{- $kafkaHost := ( .Values.config.kafka_host | replace "$release_name" .Release.Name ) -}}
{{- $dbDeployHost := (.Values.config.db_host | replace "$release_name" .Release.Name) }}
{
    "PORT": {{ .Values.service.ports.api.internalPort }},
    "HOSTNAME": "http://central-settlements.local",
    "ERROR_HANDLING": {
      "includeCauseExtension": {{ .Values.config.error_handling.include_cause_extension }},
      "truncateExtensions": {{ .Values.config.error_handling.truncate_extensions }}
    },
    "DATABASE": {
      "DIALECT": "{{ .Values.config.db_driver }}",
      "HOST": "{{ $dbDeployHost }}",
      "PORT": {{ .Values.config.db_port }},
      "USER": "{{ .Values.config.db_user }}",
      "PASSWORD": "{{ .Values.config.db_password }}",
      "SCHEMA": "{{ .Values.config.db_database }}",
      "POOL_MIN_SIZE": {{ .Values.config.db_connection_pool_min }},
      "POOL_MAX_SIZE": {{ .Values.config.db_connection_pool_max }},
      "ACQUIRE_TIMEOUT_MILLIS": {{ .Values.config.db_acquire_timeout_millis }},
      "CREATE_TIMEOUT_MILLIS": {{ .Values.config.db_create_timeout_millis }},
      "DESTROY_TIMEOUT_MILLIS": {{ .Values.config.db_destroy_timeout_millis }},
      "IDLE_TIMEOUT_MILLIS": {{ .Values.config.db_idle_timeout_millis }},
      "REAP_INTERVAL_MILLIS": {{ .Values.config.db_reap_interval_millis }},
      "CREATE_RETRY_INTERVAL_MILLIS": {{ .Values.config.db_create_retry_interval_millis }},
      "DEBUG": {{ .Values.config.db_debug }}
    },
    "WINDOW_AGGREGATION": {
      "RETRY_COUNT": 3,
      "RETRY_INTERVAL": 3000
    },
    "TRANSFER_VALIDITY_SECONDS": "432000",
    "HUB_PARTICIPANT": {
        "ID": {{ .Values.config.hub_participant.id }},
        "NAME": "{{ .Values.config.hub_participant.name }}"
    },
    "HANDLERS": {
      "DISABLED": false,
      "API": {
        "DISABLED": false
      }
    },
    "KAFKA": {
        "TOPIC_TEMPLATES": {
          "GENERAL_TOPIC_TEMPLATE": {
            "TEMPLATE": "topic-{{"{{"}}functionality{{"}}"}}-{{"{{"}}action{{"}}"}}",
            "REGEX": "topic-(.*)-(.*)"
          }
        },
        "CONSUMER": {
          "SETTLEMENTWINDOW": {
            "CLOSE": {
              "config": {
                "options": {
                  "mode": 2,
"batchSize": 1,
"pollFrequency": 10,
"recursiveTimeout": 100,
"messageCharset": "utf8",
"messageAsJSON": true,
"sync": true,
"consumeTimeout": 1000
},
"rdkafkaConf": {
"client.id": "cs-con-setlementwindow-close",
"group.id": "cs-group-setlementwindow-close",
"metadata.broker.list": "{{ (default .Values.config.kafka_host $kafkaHost) }}:{{ .Values.config.kafka_port }}",
"socket.keepalive.enable": true
},
"topicConf": {
"auto.offset.reset": "earliest"
}
}
}
}
},
        "PRODUCER": {
          "NOTIFICATION": {
            "EVENT": {
              "config": {
                "options": {
                  "messageCharset": "utf8"
                },
                "rdkafkaConf": {
                  "metadata.broker.list": "{{ (default .Values.config.kafka_host $kafkaHost) }}:{{ .Values.config.kafka_port }}",
                  "client.id": "cs-prod-notification-event",
                  "event_cb": true,
                  "compression.codec": "none",
                  "retry.backoff.ms": 100,
                  "message.send.max.retries": 2,
                  "socket.keepalive.enable": true,
                  "queue.buffering.max.messages": 10000000,
                  "batch.num.messages": 100,
                  "dr_cb": false,
                  "socket.blocking.max.ms": 1,
                  "queue.buffering.max.ms": 1,
                  "broker.version.fallback": "0.10.1.0",
                  "api.version.request": true
                },
                "topicConf": {
                    "request.required.acks": "all"
                }
              }
            }
          },
          "SETTLEMENTWINDOW": {
"CLOSE": {
"config": {
"options": {
"messageCharset": "utf8"
},
"rdkafkaConf": {
"metadata.broker.list": "{{ (default .Values.config.kafka_host $kafkaHost) }}:{{ .Values.config.kafka_port }}",
"client.id": "cs-prod-setlementwindow-close",
"event_cb": true,
"dr_cb": true,
"socket.keepalive.enable": true,
"queue.buffering.max.messages": 10000000
},
"topicConf": {
"request.required.acks": "all"
}
}
}
}
        }
  }
}
