{{- $dbHost := ( .Values.config.db_host | replace "$release_name" .Release.Name ) -}}
apiVersion: {{ template "centralsettlement.apiVersion.Deployment" . }}
kind: Deployment
metadata:
  name: {{ template "centralsettlement.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "centralsettlement.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "centralsettlement.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "centralsettlement.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      {{- if .Values.init.enabled }}
      initContainers:
        {{- if eq .Values.config.db_type "mysql"}}
        - name: {{ .Values.init.mysql.name }}
          image: {{ .Values.init.mysql.repository }}:{{ .Values.init.mysql.tag }}
          imagePullPolicy: {{ .Values.init.mysql.pullPolicy }}
          command:
            - sh
            - "-c"
            - {{ (.Values.init.mysql.command | replace "$db_user" (print .Values.config.db_user) | replace "$db_password" (print .Values.config.db_password) | replace "$db_host" $dbHost | replace "$db_database" (print .Values.config.db_database) | replace "$db_port" (print .Values.config.db_port) )| quote }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $port := .Values.service.ports }}
            - name: {{ $port.name }}
              containerPort: {{ $port.internalPort }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.ports.api.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.ports.api.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          env: 
            - name: LOG_LEVEL
              value: {{ .Values.config.log_level }}
            - name: CSL_LOG_TRANSPORT
              value: {{ .Values.config.log_transport}}
          volumeMounts:
          - name: {{ template "centralsettlement.fullname" . }}-config-volume
            mountPath: /opt/central-settlement/config
      volumes:
        - name: {{ template "centralsettlement.fullname" . }}-config-volume
          configMap:
            name: {{ template "centralsettlement.fullname" . }}-config
            items:
            - key: default.json
              path: default.json
#            - key: knexfile.js
#              path: knexfile.js
