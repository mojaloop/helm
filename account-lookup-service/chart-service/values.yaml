
# Default values for account-lookup-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
containers:
  api:
    image:
      repository: mojaloop/account-lookup-service
      tag: v11.0.1
      pullPolicy: IfNotPresent
      command: '["node", "src/index.js", "server", "--api"]'
    service:
      ports:
        api:
          name: http-api
          port: 4002
  admin:
    image:
      repository: mojaloop/account-lookup-service
      tag: v11.0.1
      pullPolicy: IfNotPresent
      command: '["node", "src/index.js", "server", "--admin"]'
    service:
      ports:
        api:
          name: http-admin
          port: 4001

nameOverride: ""
fullnameOverride: ""

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

readinessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 60
  periodSeconds: 15

livenessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 60
  periodSeconds: 15

sidecar:
  enabled: true
  image:
    repository: mojaloop/event-sidecar
    tag: v9.5.1
    pullPolicy: Always
    command: '["npm", "run", "start"]'
  service:
    internalPort: 4003
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 120
    periodSeconds: 15
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 90
    periodSeconds: 15
  config:
    event_log_grpc_host: localhost
    event_log_grpc_port: 50051
    event_log_filter: 'audit:*, log:info, log:warn, log:error'
    event_log_metadata_only: true
    log_level: info
    log_filter: 'error, warn, info'

## metric configuration for prometheus instrumentation
metrics:
  ## flag to enable/disable the metrics end-points
  enabled: true
  config:
    timeout: 5000
    prefix: moja_
    defaultLabels:
      serviceName: account-lookup-service

config:
  ## Central-Ledger config
  central_services_host: '$release_name-centralledger-service'
  central_services_port: 80
  # Log config
  log_level: info
  log_transport: file

  error_handling:
    include_cause_extension: false
    truncate_extensions: true

  ## Kafka Configuration
  # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
  kafka_host: '$release_name-kafka'
  kafka_port: 9092
  kafka_partitioner: 'murmur2_random'

  end_point_cache:
    expiresIn: 180000
    generateTimeout: 30000

  ## DB Configuration
  # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
  db_type: 'mysql'
  # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
  db_driver: 'mysql'
  db_host: '$release_name-account-lookup-service-mysql'
  db_port: 3306
  db_user: account_lookup
  db_password: OdonPianoX
  db_database: account_lookup
  db_connection_pool_min: 10
  db_connection_pool_max: 30
  db_acquire_timeout_millis: 30000
  db_create_timeout_millis: 30000
  db_destroy_timeout_millis: 5000
  db_idle_timeout_millis: 30000
  db_reap_interval_millis: 1000
  db_create_retry_interval_millis: 200
  db_debug: false

  display_routes: true
  run_migrations: false

  endpointSecurity:
    jwsSign: false
    fspiopSourceSigningName: switch
    jwsSigningKey:
      # To generate this key:
      # Private:
      # ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS256.key
      # Public:
      # openssl rsa -in jwtRS256.key -pubout -outform PEM -out jwtRS256.key.pub
      # Should look like:
      # -----BEGIN RSA PRIVATE KEY-----
      # MIIJKQIBAAKCAgEAxfqaZivMPd4MpdBHu0jVMf3MSuSdkSMHn+sNJdDQfl+x4R5R
      # ..
      # ..
      # mBynFpdjO0D3PnLKjnBDn1vFAfANOwVpGXCw5mn+484A/SIXYebWruFd03g4
      # -----END RSA PRIVATE KEY-----

init:
  enabled: true
  mysql:
    enabled: true
    name: wait-for-mysql
    repository: mysql
    tag: latest
    pullPolicy: Always
    command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - account-lookup-service.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
