{{- $centralServicesHost := ( .Values.config.central_services_host | replace "$release_name" .Release.Name ) -}}
{
  "ADMIN_PORT":  4001,
  "API_PORT":  {{ .Values.service.internalPort }},
  "PROTOCOL_VERSIONS": {{ .Values.config.protocol_versions | toPrettyJson }},
  "DATABASE": {
    "DIALECT": "{{ .Values.config.db_driver }}",
    "HOST": {{ .Values.config.db_host | quote }},
    "PORT": {{ .Values.config.db_port }},
    "USER": "{{ .Values.config.db_user }}",
    "PASSWORD": "{{ .Values.config.db_password }}",
    "DATABASE": "{{ .Values.config.db_database }}",
    "POOL_MIN_SIZE": {{ .Values.config.db_connection_pool_min }},
    "POOL_MAX_SIZE": {{ .Values.config.db_connection_pool_max }},
    "ACQUIRE_TIMEOUT_MILLIS": {{ .Values.config.db_acquire_timeout_millis }},
    "CREATE_TIMEOUT_MILLIS": {{ .Values.config.db_create_timeout_millis }},
    "DESTROY_TIMEOUT_MILLIS": {{ .Values.config.db_destroy_timeout_millis }},
    "IDLE_TIMEOUT_MILLIS": {{ .Values.config.db_idle_timeout_millis }},
    "REAP_INTERVAL_MILLIS": {{ .Values.config.db_reap_interval_millis }},
    "CREATE_RETRY_INTERVAL_MILLIS": {{ .Values.config.db_create_retry_interval_millis }},
    "DEBUG": {{ .Values.config.db_debug }}
  },
  "DISPLAY_ROUTES": {{ .Values.config.display_routes }},
  "RUN_MIGRATIONS": {{ .Values.config.run_migrations }},
  "PARTICIPANT_CACHE_CONFIG": {
    "expiresIn": 10,
    "generateTimeout": 30000,
    "getDecoratedValue": true
  },
  "CENTRAL_SHARED_ENDPOINT_CACHE_CONFIG": {
    "expiresIn": {{ .Values.config.central_shared_end_point_cache.expiresIn }},
    "generateTimeout": {{ .Values.config.central_shared_end_point_cache.generateTimeout }},
    "getDecoratedValue": {{ .Values.config.central_shared_end_point_cache.getDecoratedValue }}
  },
  "CENTRAL_SHARED_PARTICIPANT_CACHE_CONFIG": {
    "expiresIn": {{ .Values.config.central_shared_participant_cache.expiresIn }},
    "generateTimeout": {{ .Values.config.central_shared_participant_cache.generateTimeout }},
    "getDecoratedValue": {{ .Values.config.central_shared_participant_cache.getDecoratedValue }}
  },
  "GENERAL_CACHE_CONFIG": {
    "CACHE_ENABLED": {{ .Values.config.general_cache.enabled }},
    "MAX_BYTE_SIZE": {{ .Values.config.general_cache.maxByteSize }},
    "EXPIRES_IN_MS": {{ .Values.config.general_cache.expiresIn }}
  },
  "SWITCH_ENDPOINT": "http://{{ (default .Values.config.central_services_host $centralServicesHost) }}:{{ .Values.config.central_services_port }}",
  "ERROR_HANDLING": {
    "includeCauseExtension": {{ .Values.config.error_handling.include_cause_extension }},
    "truncateExtensions": {{ .Values.config.error_handling.truncate_extensions }}
  },
  "INSTRUMENTATION": {
    "METRICS": {
      "DISABLED": {{ not .Values.metrics.enabled }},
      "labels": {
        "fspId": "*"
      },
      "config": {
        "timeout": {{ .Values.metrics.config.timeout }},
        "prefix": {{ .Values.metrics.config.prefix | quote }},
        "defaultLabels": {
        {{- range $key, $value := .Values.metrics.config.defaultLabels }}
          {{ $key  | quote }}: {{ $value | quote }}
        {{- end }}
        }
      }
    }
  },
  "ENDPOINT_SECURITY": {
    "JWS": {
      "JWS_SIGN": {{ .Values.config.endpointSecurity.jwsSign }},
      "FSPIOP_SOURCE_TO_SIGN": {{ .Values.config.endpointSecurity.fspiopSourceSigningName | quote }},
      "JWS_SIGNING_KEY_PATH": "secrets/jwsSigningKey.key"
    }
  },
  "API_DOCUMENTATION_ENDPOINTS": true,
  "FEATURE_ENABLE_EXTENDED_PARTY_ID_TYPE": {{ .Values.config.featureEnableExtendedPartyIdType }}
}
