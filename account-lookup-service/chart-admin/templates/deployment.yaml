{{- $dbHost := ( .Values.config.db_host | replace "$release_name" .Release.Name ) -}}
apiVersion: {{ template "account-lookup-service-admin.apiVersion.Deployment" . }}
kind: Deployment
metadata:
  name: {{ include "account-lookup-service-admin.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "account-lookup-service-admin.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "account-lookup-service-admin.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "account-lookup-service-admin.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    spec:
      {{- if .Values.init.enabled }}
      initContainers:
        {{- if and (eq .Values.config.db_type "mysql") (eq .Values.init.mysql.enabled true) }}
        - name: {{ .Values.init.mysql.name }}
          image: {{ .Values.init.mysql.repository }}:{{ .Values.init.mysql.tag }}
          imagePullPolicy: {{ .Values.init.mysql.pullPolicy }}
          command:
            - sh
            - "-c"
            - {{ (.Values.init.mysql.command | replace "$db_user" (print .Values.config.db_user) | replace "$db_password" (print .Values.config.db_password) | replace "$db_host" $dbHost | replace "$db_database" (print .Values.config.db_database) | replace "$db_port" (print .Values.config.db_port) )| quote }}
        {{- end }}
        {{- if .Values.init.migration.enabled }}
        - name: {{ .Values.init.migration.name }}
          image: {{ .Values.containers.admin.image.repository }}:{{ .Values.containers.admin.image.tag }}
          imagePullPolicy: {{ .Values.containers.admin.image.pullPolicy }}
          command:
            - sh
            - "-c"
            - {{ .Values.init.migration.command }}
          volumeMounts:
            - name: {{ template "account-lookup-service-admin.fullname" . }}-config-volume
              mountPath: /opt/account-lookup-service/config
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.containers.admin.image.repository }}:{{ .Values.containers.admin.image.tag }}
          imagePullPolicy: {{ .Values.containers.admin.image.pullPolicy }}
          command: {{ .Values.containers.admin.image.command }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.log_level }}
            - name: CSL_LOG_TRANSPORT
              value: {{ .Values.config.log_transport}}
            - name: EVENT_SDK_LOG_FILTER
              value: {{ .Values.config.event_log_filter | quote }}
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: {{ .Values.config.event_log_metadata_only | quote }}
            {{- if .Values.sidecar.enabled }}
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: {{ .Values.sidecar.config.event_log_grpc_host | quote }}
            - name: EVENT_SDK_SERVER_PORT
              value: {{ .Values.sidecar.config.event_log_grpc_port | quote }}
            {{- end }}
            - name: EVENT_SDK_VENDOR_PREFIX
              value: {{ .Values.config.event_trace_vendor | quote }}
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: {{ .Values.config.event_trace_state_enabled | quote }}
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: {{ .Values.config.event_async_override | quote }}
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: {{ .Values.config.event_traceid_per_vendor | quote }}
          ports:
            - name: {{ .Values.containers.admin.service.ports.api.name }}
              containerPort: {{ .Values.containers.admin.service.ports.api.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.containers.admin.service.ports.api.name }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.containers.admin.service.ports.api.name }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: {{ template "account-lookup-service-admin.fullname" . }}-config-volume
            mountPath: /opt/account-lookup-service/config
      {{- if .Values.sidecar.enabled }}
        - name: {{ .Chart.Name }}-sidecar
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.sidecar.image.pullPolicy }}
          {{- if .Values.sidecar.image.imagePullSecrets }}
          imagePullSecrets:
          {{ toYaml .Values.sidecar.image.imagePullSecrets | indent 10 }}
          {{- end }}
          command: {{ .Values.sidecar.image.command }}
          ports:
            - containerPort: {{ .Values.sidecar.service.internalPort }}
          {{- if .Values.sidecar.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.sidecar.readinessProbe.httpGet.path }}
              port: {{ .Values.sidecar.service.internalPort }}
            initialDelaySeconds: {{ .Values.sidecar.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sidecar.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.sidecar.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.sidecar.livenessProbe.httpGet.path }}
              port: {{ .Values.sidecar.service.internalPort }}
            initialDelaySeconds: {{ .Values.sidecar.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.sidecar.livenessProbe.periodSeconds }}
          {{- end }}
          volumeMounts:
            - name: {{ template "account-lookup-service-admin.fullname" . }}-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: {{ .Values.sidecar.config.log_level | quote }}
            - name: LOG_FILTER
              value: {{ .Values.sidecar.config.log_filter | quote }}
            - name: EVENT_SDK_LOG_FILTER
              value: {{ .Values.sidecar.config.event_log_filter | quote }}
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: {{ .Values.sidecar.config.event_log_metadata_only | quote }}
        {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ template "account-lookup-service-admin.fullname" . }}-config-volume
          configMap:
            name: {{ template "account-lookup-service-admin.fullname" . }}-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        {{- if .Values.sidecar.enabled }}
        - name: {{ template "account-lookup-service-admin.fullname" . }}-sidecar-volume
          configMap:
            name: {{ template "account-lookup-service-admin.fullname" . }}-sidecar
            items:
            - key: default.json
              path: default.json
        {{- end }}
