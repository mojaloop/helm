
account-lookup-service:
  enabled: true
  # Default values for account-lookup-service.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1
  containers:
    api:
      image:
        repository: mojaloop/account-lookup-service
        tag: v8.3.0
        pullPolicy: Always
        command: '["node", "src/index.js", "server", "--api"]'
      service:
        ports:
          api:
            name: http-api
            port: 4002
    admin:
      image:
        repository: mojaloop/account-lookup-service
        tag: v8.3.0
        pullPolicy: Always
        command: '["node", "src/index.js", "server", "--admin"]'
      service:
        ports:
          api:
            name: http-admin
            port: 4001

  nameOverride: ""
  fullnameOverride: ""


  ## metric configuration for prometheus instrumentation
  metrics:
    ## flag to enable/disable the metrics end-points
    enabled: true
    config:
      timeout: 5000
      prefix: moja_
      defaultLabels:
        serviceName: account-lookup-service

  config:
    ## Central-Ledger config
    central_services_host: '$release_name-centralledger-service'
    central_services_port: 80

    end_point_cache:
      expiresIn: 180000
      generateTimeout: 30000

    ## DB Configuration
    # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
    db_type: 'mysql'
    # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
    db_driver: 'mysql'
    db_host: '$release_name-account-lookup-mysql'
    db_port: 3306
    db_user: account_lookup
    db_password: OdonPianoX
    db_database: account_lookup
    db_acquire_timeout_millis: 30000
    db_create_timeout_millis: 30000
    db_destroy_timeout_millis: 5000
    db_idle_timeout_millis: 30000
    db_reap_interval_millis: 1000
    db_create_retry_interval_millis: 200
    db_debug: false

    display_routes: true
    run_migrations: false
    log_level: 'info'

  init:
    enabled: true
    mysql:
      enabled: true
      name: wait-for-mysql
      repository: mysql
      tag: latest
      pullPolicy: Always
      command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - account-lookup-service.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

account-lookup-service-admin:
  enabled: true

  # Default values for account-lookup-service.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1
  containers:
    api:
      image:
        repository: mojaloop/account-lookup-service
        tag: v8.3.0
        pullPolicy: IfNotPresent
        command: '["node", "src/index.js", "server", "--api"]'
      service:
        ports:
          api:
            name: http-api
            port: 4002
    admin:
      image:
        repository: mojaloop/account-lookup-service
        tag: v8.3.0
        pullPolicy: IfNotPresent
        command: '["node", "src/index.js", "server", "--admin"]'
      service:
        ports:
          api:
            name: http-admin
            port: 4001

  nameOverride: ""
  fullnameOverride: ""


  ## metric configuration for prometheus instrumentation
  metrics:
    ## flag to enable/disable the metrics end-points
    enabled: true
    config:
      timeout: 5000
      prefix: moja_
      defaultLabels:
        serviceName: account-lookup-service-admin

  config:
    ## Central-Ledger config
    central_services_host: '$release_name-centralledger-service'
    central_services_port: 80

    end_point_cache:
      expiresIn: 180000
      generateTimeout: 30000

    ## DB Configuration
    # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
    db_type: 'mysql'
    # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
    db_driver: 'mysql'
    db_host: '$release_name-account-lookup-mysql'
    db_port: 3306
    db_user: account_lookup
    db_password: OdonPianoX
    db_database: account_lookup
    db_connection_pool_min: 10
    db_connection_pool_max: 30
    db_acquire_timeout_millis: 30000
    db_create_timeout_millis: 30000
    db_destroy_timeout_millis: 5000
    db_idle_timeout_millis: 30000
    db_reap_interval_millis: 1000
    db_create_retry_interval_millis: 200
    db_debug: false

    display_routes: true
    run_migrations: false
    log_level: 'info'

  init:
    enabled: true
    mysql:
      name: wait-for-mysql
      repository: mysql
      tag: latest
      pullPolicy: Always
      command: "until mysql -h $db_host -P $db_port -u $db_user --password=$db_password $db_database -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
    migration:
      enabled: true
      name: run-migration
      command: npm run migrate

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - account-lookup-service-admin.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

als-oracle-pathfinder:
  enabled: false
  # Declare variables to be passed into your templates.
  replicaCount: 1
  image:
    repository: mojaloop/als-oracle-pathfinder
    tag: v8.3.0
    command: '["node", "src/index.js"]'
    pullPolicy: Always
    imagePullSecrets:
      name: dock-casa-secret

  readinessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  livenessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  config:
    ## DB Configuration
    # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
    db_type: 'mysql'
    # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
    db_driver: 'mysql'
    db_host: '$release_name-centralledger-mysql'
    db_port: '3306'
    db_user: 'central_ledger'
    db_password: 'oyMxgZChuu'
    db_database:
      central_ledger: 'central_ledger'
      account_lookup: 'account_lookup'
    log_level: 'info'

    pathfinder:
      host: '156.154.59.224'
      port: 7007
      queryTimeoutMs: 10000
      tls:
        # rejectUnauthorized should be true in production
        rejectUnauthorized: false
        # The following paths are all relative to this directory containing the values file
        client_cert_path: '/opt/als-oracle-pathfinder/secrets/client_cert.pem'
        client_key_path: '/opt/als-oracle-pathfinder/secrets/client_key.pem'
        root_cert_path: '/opt/als-oracle-pathfinder/secrets/pathfinder_cert.pem'
        # Intermediate cert is optional, but will likely be required for mutual auth if
        # rejectUnauthorized is true, as Neustar's certificate doesn't seem to have been signed by any
        # certs in the Mozilla bundle, which is used by Node as default.
        intermediate_cert_path: '/opt/als-oracle-pathfinder/secrets/pathfinder_intermediate_cert.pem'

  init:
    enabled: true
    mysql:
      name: wait-for-mysql
      repository: mysql
      tag: latest
      pullPolicy: Always
      command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

  service:
    type: ClusterIP
    ports:
      api:
        name: http-api
        externalPort: 80
        internalPort: 3000

    annotations: {}

    # This allows one to point the service to an external backend.
    # This is useful for local development where one wishes to hijack
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        provisioning:
          name: http-api
          externalPort: 3000

  ingress:
    enabled: true
    externalPath: /
    # Used to create an Ingress record.
    hosts:
      api: als-oracle-pathfinder.local
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: '/'
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

mysql:
  enabled: true
  nameOverride: "account-lookup-mysql"
  # Default values for Percona XtraDB Cluster

  ## percona image and version
  ## ref: https://hub.docker.com/r/percona/percona-xtradb-cluster/tags/
  image:
    repository: "percona/percona-xtradb-cluster"
    tag: "5.7.19"
    pullPolicy: Always

  # Desired number of members of xtradb cluster
  replicas: 1

  ## Specify password for root user
  ##
  # mysqlRootPassword: not-a-secure-password

  ## Specify password for xtradb backup user
  ##
  # xtraBackupPassword: replicate-my-data

  ## Uncomment to create a database user
  ##
  mysqlUser: account_lookup
  mysqlPassword: OdonPianoX

  ## Allow unauthenticated access, uncomment to enable
  ##
  # mysqlAllowEmptyPassword: true

  ## Uncomment to Create a database
  ##
  mysqlDatabase: account_lookup

  ## hosts to allow root user access from
  # set to "127.0.0.1" to deny remote root.
  allowRootFrom: "%"

  ## Persist data to a persitent volume
  persistence:
    enabled: false
    ## percona data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Pod annotations
  ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Tolerations labels for pod assignment
  ## Allow the scheduling on tainted nodes (requires Kubernetes >= 1.6)
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  # resources:
  #  requests:
  #    memory: 256Mi
  #    cpu: 100m

  ## Configure the following values below if required
  #   performance_schema=ON
  #   max_connections=999
  #   max_user_connections=999
  #   thread_cache_size=999
  configFiles:
    node.cnf: |+
      [mysqld]
      datadir=/var/lib/mysql
      default_storage_engine=InnoDB
      binlog_format=ROW
      innodb_flush_log_at_trx_commit  = 0
      innodb_flush_method             = O_DIRECT
      innodb_file_per_table           = 1
      innodb_autoinc_lock_mode=2
      bind_address = 0.0.0.0
      wsrep_slave_threads=2
      wsrep_cluster_address=gcomm://
      wsrep_provider=/usr/lib/galera3/libgalera_smm.so
      wsrep_cluster_name=galera
      wsrep_sst_method=xtrabackup-v2
      pxc_strict_mode=DISABLED
      max_connections=999
      max_user_connections=994
      thread_cache_size=999
  ## When set to true will create sidecar for `prom/mysqld-exporter`
  ## metrics exporting
  metricsExporter:
    enabled: true
    tag: v0.11.0

  ## When set to true will create sidecar to tail mysql log
  logTail: true

  service:
    type: ClusterIP
    port: 3306
    externalIPs: []
