{{- if .Values.enabled -}}
{{- $serviceFullName := include "ml-testing-toolkit-backend.fullname" . -}}
{{- $MONGODB_COMMAND := ("until printf \".\" && nc -z -w 2 $mongodb_host $mongodb_port; do sleep 2; done;" | replace "$mongodb_host" (.Values.config.mongodb.host) | replace "$mongodb_port" (print .Values.config.mongodb.port) | replace "$release_name" (.Release.Name) ) -}}

apiVersion: {{ template "ml-testing-toolkit-backend.apiVersion.StatefulSet" . }}
kind: StatefulSet
metadata:
  name: {{ template "ml-testing-toolkit-backend.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "ml-testing-toolkit-backend.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # Common annotations
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ml-testing-toolkit-backend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ template "ml-testing-toolkit-backend.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        # Custom Pod annotations
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "ml-testing-toolkit-backend.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.Version }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        # Custom Pod Labels
        {{- if .Values.podLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      initContainers:
        {{- if .Values.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.image.pullSecrets }}
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" $) | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          command: {{ .Values.commandPersistence }}
          {{- else }}
          command: {{ .Values.command }}
          {{- end }}
          env:
            - name: REPORTING_DB_CONNECTION_PASSWORD
            {{- if .Values.config.mongodb.secret }}
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.config.mongodb.secret.name }}'
                  key: '{{ .Values.config.mongodb.secret.key }}'
            {{- else }}
              value: {{ .Values.config.mongodb.password }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.service.ports.specApi.port }}
            - containerPort: {{ .Values.service.ports.adminApi.port }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.ports.adminApi.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.ports.adminApi.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
            - name: ttk-data
              mountPath: /opt/ttk-data
          {{- end }}
          {{- range $k, $v := .Values.extraEnvironments }}
            - name: {{ $serviceFullName }}-volume-extra-environments
              mountPath: /opt/app/examples/environments/{{ $k }}
              subPath: {{ $k }}
          {{- end }}
            - name: {{ $serviceFullName }}-volume-config-default
              mountPath: /opt/default_config
      volumes:
      {{- if .Values.persistence.enabled }}
        - name: ttk-data
          emptyDir: {}  
      {{- end }}
        - name: {{ template "ml-testing-toolkit-backend.fullname" . }}-volume-config-default
          configMap:
            name: {{ template "ml-testing-toolkit-backend.fullname" . }}-config-default
            items:
              {{- range $k, $v := .Values.config_files }}
              - key: {{ $k }}
                path: {{ $k }}
              {{- end }}
        - name: {{ template "ml-testing-toolkit-backend.fullname" . }}-volume-extra-environments
          configMap:
            name: {{ template "ml-testing-toolkit-backend.fullname" . }}-config-extra-environments
            items:
              {{- range $k, $v := .Values.extraEnvironments }}
              - key: {{ $k }}
                path: {{ $k }}
              {{- end }}

  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: ttk-data
    spec:
      accessModes: [{{ .Values.persistence.accessMode | quote }}]
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- end -}}
{{- end -}}