# Default values for ml-api-adapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
enabled: true

dependencies:
  keycloak:
    enabled: false
    host: "$release_name-keycloak-http"
    port: "7080"
    paths:
      issuer: /auth/realms/testingtoolkit/protocol/openid-connect/token
      tokenIss: /auth/realms/testingtoolkit
    embeddedCertificate: -----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDda1T6cyWogfG/xlUb3+gWZI0jsnlSGbf3PF89NCgS+n6HUJ0A2Ezmu/n9Gfkm8Rjyst914Vq9ebsueXHIc+Ad76+q3MASF1hRUTfnvH/v6rDguPvI6Jb/M9jGn5b2hglcg3B9Y7Tgv70bcV7oCweP68CPbIrTWjR9gyjmSHfYhwIDAQAB\n-----END PUBLIC KEY-----
  # dependencies.adminApiAuthentication is used when keycloak is disabled
  adminApiAuthentication:
    host: "localhost"
    port: "5050"
    paths:
      issuer: /api/oauth2/token
      tokenIss: /api/oauth2/token
    embeddedCertificate: password
  mongodb:
    enabled: false
    host: "$release_name-ttk-mongodb"
    port: "27017"
  connectionManagerBackend:
    enabled: false
    host: "$release_name-connection-manager-backend"
    port: "5061"

replicaCount: 1
image:
  repository: mojaloop/ml-testing-toolkit
  tag: v12.4.2
  commandPersistence: '["sh", "-c", "cd /opt/mojaloop-testing-toolkit; if [ -d /opt/ttk-data ]; then if [ ! -d /opt/ttk-data/spec_files ]; then if [ -f /opt/default_config/user_config.json ]; then cp /opt/default_config/user_config.json spec_files; fi; if [ -f /opt/default_config/system_config.json ]; then cp /opt/default_config/system_config.json spec_files; fi; cp -pR spec_files /opt/ttk-data/spec_files; fi; mv spec_files spec_files_default; ln -s /opt/ttk-data/spec_files spec_files; else if [ -f /opt/default_config/user_config.json ]; then cp /opt/default_config/user_config.json spec_files; fi; if [ -f /opt/default_config/system_config.json ]; then cp /opt/default_config/system_config.json spec_files; fi; fi; npm run start;"]'
  command: '["sh", "-c", "cd /opt/mojaloop-testing-toolkit; if [ -f /opt/default_config/user_config.json ]; then cp /opt/default_config/user_config.json spec_files; fi; if [ -f /opt/default_config/system_config.json ]; then cp /opt/default_config/system_config.json spec_files; fi; npm run start;"]'

  # command: '["npm", "run", "start"]'
## Optionally specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
##
#  imagePullSecrets:
#    - name: myregistrykey
  pullPolicy: IfNotPresent

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

readinessProbe:
  enabled: false
  httpGet:
    path: /health
  initialDelaySeconds: 120
  periodSeconds: 15
livenessProbe:
  enabled: false
  httpGet:
    path: /health
  initialDelaySeconds: 90
  periodSeconds: 15

## $snake_case values are dynamic
config:
  user_config.json: {
    "VERSION": 1,
    "CALLBACK_ENDPOINT": "http://localhost:4000",
    "CALLBACK_RESOURCE_ENDPOINTS": {
      "enabled": true,
      "endpoints": [
        {
          "method": "put",
          "path": "/parties/{Type}/{ID}",
          "endpoint": "http://moja-account-lookup-service.demo"
        },
        {
          "method": "put",
          "path": "/quotes/{ID}",
          "endpoint": "http://moja-quoting-service.demo"
        },
        {
          "method": "put",
          "path": "/transfers/{ID}",
          "endpoint": "http://moja-ml-api-adapter-service.demo"
        }
      ]
    },
    "HUB_ONLY_MODE": false,
    "ENDPOINTS_DFSP_WISE": {
      "dfsps": {
        "userdfsp": {
          "defaultEndpoint": "http://scheme-adapter:4000",
          "endpoints": []
        },
        "userdfsp2": {
          "defaultEndpoint": "http://scheme-adapter2:4000",
          "endpoints": []
        }
      }
    },
    "SEND_CALLBACK_ENABLE": true,
    "FSPID": "testingtoolkitdfsp",
    "DEFAULT_USER_FSPID": "userdfsp",
    "TRANSFERS_VALIDATION_WITH_PREVIOUS_QUOTES": true,
    "TRANSFERS_VALIDATION_ILP_PACKET": true,
    "TRANSFERS_VALIDATION_CONDITION": true,
    "ILP_SECRET": "secret",
    "VERSIONING_SUPPORT_ENABLE": true,
    "VALIDATE_INBOUND_JWS": false,
    "VALIDATE_INBOUND_PUT_PARTIES_JWS": false,
    "JWS_SIGN": false,
    "JWS_SIGN_PUT_PARTIES": false,
    "INBOUND_MUTUAL_TLS_ENABLED": false,
    "OUTBOUND_MUTUAL_TLS_ENABLED": false,
    "CLIENT_MUTUAL_TLS_ENABLED": false,
    "ADVANCED_FEATURES_ENABLED": true,
    "CALLBACK_TIMEOUT": 20000,
    "DEFAULT_REQUEST_TIMEOUT": 5000,
    "SCRIPT_TIMEOUT": 5000,
    "LOG_SERVER_UI_URL": "http://log-server-url.demo",
    "UI_CONFIGURATION": {
      "MOBILE_SIMULATOR": {
        "HUB_CONSOLE_ENABLED": true
      }
    },
    "CLIENT_TLS_CREDS": [
      {
        "HOST": "testfsp1",
        "CERT": "-----BEGIN CERTIFICATE-----\nMIIFATCCAumgAwIBAgIUEcEtqgcXBoTykvaD6PprzY8kxpYwDQYJKoZIhvcNAQEL\nBQAwfzERMA8GA1UEChMITW9kdXNCb3gxHDAaBgNVBAsTE0luZnJhc3RydWN0dXJl\nIFRlYW0xTDBKBgNVBAMTQ3Rlc3Rmc3AxLnFhLnByZS5teWFubWFycGF5LXByZS5p\nby5pbnRlcm5hbCB0ZXN0ZnNwMSBJbnRlcm1lZGlhdGUgQ0EwHhcNMjEwMjIyMTkw\nMTEyWhcNMjMwMjIzMDY0MDA2WjBdMREwDwYDVQQKEwhNb2R1c0JveDEcMBoGA1UE\nCxMTSW5mcmFzdHJ1Y3R1cmUgVGVhbTEqMCgGA1UEAxMhdGVzdGZzcDEucWEucHJl\nLm15YW5tYXJwYXktcHJlLmlvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEApndEBbmdlfrpnidagKb2D32bEL+iGYxLEicdQVs24018zNPdbrIYtXyDjgjA\nq718HH5XQW2FSz6cA1CbQ6jLuY88EZRUiCSJ4rCkENWw+mpVLyOd+mcYU4JwOQNC\nP+W8GGcW/haifkXtHEDUO4pIxnXWC6DftvxZ3TH5PxtWO8aJcsoj94oBTPOhnGi0\nC356XyseYl7o7hdxZu3DvY3Wyh/k5pDDHOCjQYxl9wjtW+BVWMCFxRaCu4f/3LVj\nca9BccwZ8O4Rdhu6lhJEUCUgTqdx3vXRB1xzwHT0W7gariy4RVbvwE35AaCliyEr\n4O5WlCvAMOct7POYDAwNuoeb7wIDAQABo4GWMIGTMA4GA1UdDwEB/wQEAwIDqDAT\nBgNVHSUEDDAKBggrBgEFBQcDAjAdBgNVHQ4EFgQU2alVxVOOplYXiLAYCDaII4E0\n/WgwHwYDVR0jBBgwFoAUCFvcCetcirxZPE3N6qMdOo5H7Z4wLAYDVR0RBCUwI4Ih\ndGVzdGZzcDEucWEucHJlLm15YW5tYXJwYXktcHJlLmlvMA0GCSqGSIb3DQEBCwUA\nA4ICAQBkX5LItY0calp7NT21O8z+iufVNV8onEch4J7HJjEVwtCB4UVl7LrWJ3cw\n9KLt7nj85/AUuuhtNPJO9DW/x+0xRyW94Ef5MYHP3nheFWTag8riYl/1SXljOssS\nHCpTvRhirnfGeqBGO1OBwCbkYNIEZI95eMerVoPFm0PfGBb4DJ6mUdfc3qzeOP7K\nOlE5VMhwH2PYv1TS7Hpj1k/1dxpdvyOs7EKVvWD+OokLhJaHgU8NWVetTUtsXSN/\nTv06ZN8JGTN/Udm7POVyEaol8Jw2FRGGKcwOBKbqroNs6POqTofqZeL4SFAkzzQL\nvOAhbQIB6GSznG1Gg1G9IjGVCMXUhpNK2PD8RR1ovzi0MZlRkITGRPhBYQf5xMFl\nZeq0mGFQR3VYDdlwT0O37C8fpaYvpdupeYdxcB623PNz1VkO1MbsXnOoHY8kcFGa\nMh4IARCeR/MwXNWHpGrd6J5Mzmhk0Vy8GyBbqcROUpNR/XTZYRTyfTEq5+amJyLi\n67OB9FP5cS7oQhj7gsaQCTJlxbh/CjmQdKmIimWSEZkDePK5eExNPafBk47tx4KA\nFmh9pIqRyheROesa/zTDGYySNcVd14dl703pyZQNO4b5rap0SZoyGDTfI+7OqAHM\nAz0kWYyZps2nqPZgbwDFigIy2TESvoXahCCtNUoCy9sawa3Diw==\n-----END CERTIFICATE-----",
        "KEY": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEApndEBbmdlfrpnidagKb2D32bEL+iGYxLEicdQVs24018zNPd\nbrIYtXyDjgjAq718HH5XQW2FSz6cA1CbQ6jLuY88EZRUiCSJ4rCkENWw+mpVLyOd\n+mcYU4JwOQNCP+W8GGcW/haifkXtHEDUO4pIxnXWC6DftvxZ3TH5PxtWO8aJcsoj\n94oBTPOhnGi0C356XyseYl7o7hdxZu3DvY3Wyh/k5pDDHOCjQYxl9wjtW+BVWMCF\nxRaCu4f/3LVjca9BccwZ8O4Rdhu6lhJEUCUgTqdx3vXRB1xzwHT0W7gariy4RVbv\nwE35AaCliyEr4O5WlCvAMOct7POYDAwNuoeb7wIDAQABAoIBAB4YIawHSn36xpFY\n+/uWM5XJV2dHvb5wpoG5oIhYPSwKri05gCaq+9yTjhT3cB2cO/vKu2uQqTBZOUtA\nH1G0CmCZjHqBHmcec+8PkBmbCEu9PXkwLzc9vCAczL0B4dA7cC3ZNUbqQKYjbiJV\ndgjtjwqR8whXJRqntHdQuYa3InfbufcHNHhSXJwE9MqVRpsv/BfY9wjhQfGBHUnT\nCz41xj1bu8Uy4+/1sRF/l9fYDm5E6WbgzvI49/fM7hA+8fQqoRkFLlEzzBhWb93Q\n2qVo2Y5RhVpffdyxPYX7b9RI7UmUZYp2sLl5GYj5ZzTzsffwUdPl2pZlRkYJGvUo\nortpToECgYEA17NVIZgeQ5VcSsZKGJlzPkcdPoWCk7RY5DugxTaNwSE/uO25B/Ax\nBPE6ZC9LbfXyfTQXaam2VtpSzvNJ7p7j30qkEK0Z+I2pGAVohZg4enkHaIQkYtIP\naZZ/wce5R8VZq6EpToprTm3cG6T+nNVOzqRjUqgnUZyY8nWy2CD5OucCgYEAxZEb\nOKjo9Iwrod2uOZlQDAsnTvgqZySW/lORrnfEWmOEiJpRvjlxMfNPNlc2iMTBQShq\naPZi48g17btU8ACs2NOH/FXuxooDe+0gJDj48WP9/bBzOAOJqhKZ+g9l/Cr978yJ\nAHNh/w8foUUkqAfxmXoTImw7LdSaPIc7ewAlPbkCgYAcGq6d6O8QiTZ0O6/N0riU\nRbnGuqiPzDDE1AwXhgskPcvKsZapNR998FxWT185nZERxSbDyqwKVvnxIvvgDm3M\nWzJTReqbWwHMMnAy7+lz868GbCk9gvclH8nXmslGU61iUmZKaHigyGmkZHQURSq2\ne+7BB03QMWIwPSunQ2yVwwKBgQCbPrzvNvtnPsYCeZmwNSLLc/A9g5B+YCguTSjK\nud4XUOASH4FgQu8J2zFBeCKoMkPRmZqURBfM+cQ2vN+vgDhSYVYYGMZ6SHUYamq5\nS/OCa5poQMEpIM6KT/eioXr4PigwyL5XFlPJAu9N4HE/gI5+lYh3oiiWiNtx+Knq\nq2CYMQKBgQCv+QTGDrSc3SUaWT+JMoFdfzvJyyqQOUvgRbSGAp5GryYqI9dozx70\nlT2IdoAZ0DHrJhNs13Pr7ngXwqS6pKlZU8NSX2ch7h5ZwIsYJESzKwXF/frLMQSy\nTPV3d0hb7UaW3wqOx2Dbj8vJJdvUo3UUkOcmgesqGg3nf3t51I6k0A==\n-----END RSA PRIVATE KEY-----"
      }
    ],
    "GITHUB_CONFIG": {
      "TEST_CASES_REPO_OWNER": "mojaloop",
      "TEST_CASES_REPO_NAME": "testing-toolkit-test-cases",
      "TEST_CASES_REPO_DEFAULT_RELEASE_TAG": "latest",
      "TEST_CASES_REPO_BASE_PATH": "collections/hub",
      "TEST_CASES_REPO_HUB_GP_PATH": "collections/hub/golden_path",
      "TEST_CASES_REPO_HUB_PROVISIONING_PATH": "collections/hub/provisioning"
    },
    "DEFAULT_ENVIRONMENT_FILE_NAME": "hub-k8s-environment.json"
  }
  system_config.json: {
    "API_PORT": 5000,
    "HOSTING_ENABLED": false,
    "CONFIG_VERSIONS": {
      "response": 1,
      "callback": 1,
      "validation": 1,
      "forward": 1,
      "userSettings": 1
    },
    "DB": {
      "URI": "mongodb://ttk:ttk@$mongodb_host:$mongodb_port/ttk"
    },
    "OAUTH": {
      "AUTH_ENABLED": false,
      "APP_OAUTH_CLIENT_KEY": "ttk",
      "APP_OAUTH_CLIENT_SECRET": "23b898a5-63d2-4055-bbe1-54efcda37e7d",
      "MTA_ROLE": "Application/MTA",
      "PTA_ROLE": "Application/PTA",
      "EVERYONE_ROLE": "Internal/everyone",
      "P12_PASS_PHRASE": "SOME_S3C4R3_P@SS",
      "OAUTH2_TOKEN_ISS": "http://$auth_host:$auth_port$auth_token_iss_path",
      "OAUTH2_ISSUER": "http://$auth_host:$auth_port$auth_issuer_path",
      "JWT_COOKIE_NAME": "TTK-API_ACCESS_TOKEN",
      "EMBEDDED_CERTIFICATE": "$auth_embedded_certificate"
    },
    "KEYCLOAK": {
      "ENABLED": false,
      "API_URL": "http://$auth_host:$auth_port",
      "REALM": "testingtoolkit",
      "USERNAME": "hub",
      "PASSWORD": "hub"
    },
    "SERVER_LOGS": {
      "ENABLED": false,
      "RESULTS_PAGE_SIZE": 50,
      "ADAPTER": {
        "TYPE": "ELASTICSEARCH",
        "INDEX": "moja*",
        "API_URL": "http://elastic-search.demo/"
      }
    },
    "CONNECTION_MANAGER": {
      "API_URL": "http://$connection_manager_host:$connection_manager_port",
      "AUTH_ENABLED": false,
      "HUB_USERNAME": "hub",
      "HUB_PASSWORD": "hub"
    },
    "HTTP_CLIENT": {
      "KEEP_ALIVE": false,
      "MAX_SOCKETS": 50,
      "UNUSED_AGENTS_EXPIRY_MS": 1800000,
      "UNUSED_AGENTS_CHECK_TIMER_MS": 300000
    },    
    "API_DEFINITIONS": [
      {
        "type": "fspiop",
        "version": "1.0",
        "folderPath": "fspiop_1.0",
        "asynchronous": true
      },
      {
        "type": "fspiop",
        "version": "1.1",
        "folderPath": "fspiop_1.1",
        "asynchronous": true
      },
      {
        "type": "settlements",
        "version": "1.0",
        "folderPath": "settlements_1.0"
      },
      {
        "type": "central_admin",
        "version": "9.3",
        "folderPath": "central_admin_9.3"
      },
      {
        "type": "als_admin",
        "version": "1.1",
        "folderPath": "als_admin_1.1"
      },
      {
        "type": "mojaloop_simulator",
        "version": "0.1",
        "folderPath": "mojaloop_simulator_0.1"
      }
    ]
  }

extraEnvironments: {}

service:
  type: ClusterIP
  ports:
    specApi:
      name: "spec-api"
      externalPort: 5000
      internalPort: 5000
    adminApi:
      name: "admin-api"
      externalPort: 5050
      internalPort: 5050

ingress:
  enabled: true
  # Used to create an Ingress record.
  hosts:
    specApi:
      host: testing-toolkit-specapi.local
      port: 5000
      paths: ['/']
    adminApi:
      host: testing-toolkit.local
      port: 5050
      paths: ['/api/', '/socket.io/']

  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    ## https://kubernetes.github.io/ingress-nginx/examples/rewrite/
    # nginx.ingress.kubernetes.io/rewrite-target: '/'
    # nginx.ingress.kubernetes.io/rewrite-target: '/$2'
    ## https://kubernetes.github.io/ingress-nginx/user-guide/multiple-ingress/
    # kubernetes.io/ingress.class: nginx
    ## https://kubernetes.github.io/ingress-nginx/user-guide/tls/#automated-certificate-management-with-kube-lego
    # kubernetes.io/tls-acme: "true"
  tls: []
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

## Persist data to a persistent volume
persistence:
  enabled: false
  ## percona data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi

  
