{{- $kafkaHost := ( .Values.config.kafka_host | replace "$release_name" .Release.Name ) -}}
{{- $centralServicesHost := printf "%s-%s" .Release.Name .Values.config.central_services_host -}}
{
    "PORT": {{ .Values.service.externalPort }},
    "ENDPOINT_SOURCE_URL": "http://{{ $centralServicesHost }}:{{ .Values.config.central_services_port }}/participants/{{"{{"}}fsp{{"}}"}}/endpoints",
    "ENDPOINT_CACHE_CONFIG": {
        "expiresIn": 180000,
        "generateTimeout": 30000
    },
    "HOSTNAME": "{{ .Values.ingress.hosts.api }}",
    "AMOUNT": {
        "PRECISION": 10,
        "SCALE": 2
    },
    "HANDLERS": {
        "DISABLED": true,
        "API": {
            "DISABLED": false
        }
    },
    "KAFKA": {
        "TOPIC_TEMPLATES": {
            "PARTICIPANT_TOPIC_TEMPLATE": {
                "TEMPLATE": "topic-{{"{{"}}participantName{{"}}"}}-{{"{{"}}functionality{{"}}"}}-{{"{{"}}action{{"}}"}}",
                "REGEX": "topic-(.*)-(.*)-(.*)"
            },
            "NOTIFICATION_TOPIC_TEMPLATE": {
                "TEMPLATE": "topic-notification-event",
                "REGEX": "topic-notification-event"
            },
            "FULFIL_TOPIC_TEMPLATE": {
                "TEMPLATE": "topic-transfer-fulfil",
                "REGEX": "topic-transfer-fulfil"
            }
        },
        "CONSUMER": {
            "NOTIFICATION": {
                "EVENT": {
                    "config": {
                        "options": {
                            "mode": 2,
                            "batchSize": 1,
                            "recursiveTimeout": 100,
                            "messageCharset": "utf8",
                            "messageAsJSON": true,
                            "sync": true,
                            "consumeTimeout": 1000
                        },
                        "rdkafkaConf": {
                            "client.id": "ml-con-notification-event",
                            "group.id": "kafka-ml-api-adapter",
                            "metadata.broker.list": "{{ $kafkaHost }}:{{ .Values.config.kafka_port }}",
                            "socket.blocking.max.ms": 1,
                            "fetch.wait.max.ms": 1,
                            "fetch.error.backoff.ms": 1,
                            "queue.buffering.max.ms": 1,
                            "broker.version.fallback": "0.10.1.0",
                            "api.version.request": true,
                            "enable.auto.commit": false,
                            "auto.commit.interval.ms": 200,
                            "socket.keepalive.enable": true,
                            "socket.max.fails": 1
                        },
                        "topicConf": {
                            "auto.offset.reset": "earliest"
                        }
                    }
                }
            }
        },
        "PRODUCER": {
            "TRANSFER": {
                "PREPARE": {
                    "config": {
                        "options": {
                            "messageCharset": "utf8"
                        },
                        "rdkafkaConf": {
                            "metadata.broker.list": "{{ $kafkaHost }}:{{ .Values.config.kafka_port }}",
                            "client.id": "ml-prod-transfer-prepare",
                            "event_cb": true,
                            "compression.codec": "none",
                            "retry.backoff.ms": 100,
                            "message.send.max.retries": 2,
                            "socket.keepalive.enable": true,
                            "socket.max.fails": 0,
                            "queue.buffering.max.messages": 10000000,
                            "queue.buffering.max.ms": 50,
                            "batch.num.messages": 100,
                            "api.version.request": true,
                            "dr_cb": true
                        }
                    }
                },
                "FULFIL": {
                    "config": {
                        "options": {
                            "messageCharset": "utf8"
                        },
                        "rdkafkaConf": {
                            "metadata.broker.list": "{{ $kafkaHost }}:{{ .Values.config.kafka_port }}",
                            "client.id": "ml-prod-transfer-fulfil",
                            "event_cb": true,
                            "compression.codec": "none",
                            "retry.backoff.ms": 100,
                            "message.send.max.retries": 2,
                            "socket.keepalive.enable": true,
                            "socket.max.fails": 0,
                            "queue.buffering.max.messages": 10000000,
                            "queue.buffering.max.ms": 50,
                            "batch.num.messages": 100,
                            "api.version.request": true,
                            "dr_cb": true
                        }
                    }
                }
            }
        }
    }
}