# Default values for ml-api-adapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repository: mojaloop/ml-api-adapter
  tag: v10.5.0
  command: '["node", "src/handlers/index.js", "handler", "--notification"]'
## Optionally specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
##
#  imagePullSecrets:
#    - name: myregistrykey
  pullPolicy: Always

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

sidecar:
  enabled: true
  image:
    repository: mojaloop/event-sidecar
    tag: v9.5.1
    pullPolicy: Always
    command: '["npm", "run", "start"]'
  service:
    internalPort: 4001
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 120
    periodSeconds: 15
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 90
    periodSeconds: 15
  config:
    event_log_grpc_host: localhost
    event_log_grpc_port: 50051
    event_log_filter: 'audit:*, log:info, log:warn, log:error'
    event_log_metadata_only: true
    log_level: info
    log_filter: 'error, warn, info'

init:
  enabled: true
  image:
    name: wait-for-kafka
    repository: solsson/kafka
    tag: latest
    pullPolicy: Always
    command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
    env: {}
    ## Env example
    # env:
    #   envItem1:
    #     name: hello
    #     value: world
    #

readinessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 120
  periodSeconds: 15
livenessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 90
  periodSeconds: 15

## metric configuration for prometheus instrumentation
metrics:
  ## flag to enable/disable the metrics end-points
  enabled: true
  config:
    timeout: 5000
    prefix: moja_
    defaultLabels:
      serviceName: ml-handler-notification

config:
  # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
  kafka_host: '$release_name-kafka'
  kafka_port: 9092
  kafka_partitioner: 'murmur2_random'
  central_services_host: '$release_name-centralledger-service'
  central_services_port: 80
  security:
    callback:
      rejectUnauthorized: true
  max_callback_time_lag_dilation_milliseconds: 100
  max_fulfil_timeout_duration_seconds: 240

  ## Endpoint Cache Configuration
  endpoint_cache_expiresInMs: 180000
  endpoint_cache_generateTimeoutMs: 30000

  ## Send callback confirmation to PayeeFSP in addition to the Mojaloop v1.0 Spec Callback to PayerFSP
  send_transfer_confirmation_to_payee: false

  ## Log Configuration
  log_level: info
  log_filter: 'error, warn, info'
  log_transport: file

  ## Health Check endpoint
  central_services_health_endpoint_param: '/health'

  ## Tracing Configuration
  event_trace_vendor: mojaloop
  event_log_filter: 'audit:*, log:warn, log:error'
  # If set to true, only the metadata object from the event will be printed.
  event_log_metadata_only: false
  event_trace_state_enabled: true
  # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
  # Any combination of: `log,audit,trace`
  event_async_override: 'log,trace'
  event_traceid_per_vendor: false

  # Parameters for JWS signing requests generated by ml-api-adapter
  endpointSecurity:
    jwsSign: false
    fspiopSourceSigningName: 'switch'
    jwsSigningKey:
      # To generate this key:
      # Private:
      # ssh-keygen -t rsa -b 4096 -m PEM -f jwtRS256.key
      # Public:
      # openssl rsa -in jwtRS256.key -pubout -outform PEM -out jwtRS256.key.pub
      # Should look like:
      # -----BEGIN RSA PRIVATE KEY-----
      # MIIJKQIBAAKCAgEAxfqaZivMPd4MpdBHu0jVMf3MSuSdkSMHn+sNJdDQfl+x4R5R
      # ..
      # ..
      # mBynFpdjO0D3PnLKjnBDn1vFAfANOwVpGXCw5mn+484A/SIXYebWruFd03g4
      # -----END RSA PRIVATE KEY-----

  ## Error handling Configuration
  error_handling:
    include_cause_extension: false
    truncate_extensions: true

service:
  type: ClusterIP
  externalPort: 80
  internalPort: 3000

ingress:
  enabled: true
  externalPath: /
  # Used to create an Ingress record.
  hosts:
    api: ml-api-adapter-notification.local

  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: '/'
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

