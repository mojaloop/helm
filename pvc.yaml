apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      meta.helm.sh/release-name: backend
      meta.helm.sh/release-namespace: moja1
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-5-119.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2025-01-28T19:12:46Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cl-mongodb
      app.kubernetes.io/version: 7.0.5
      helm.sh/chart: cl-mongodb-14.8.3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
      manager: helm
      operation: Update
      time: "2025-01-28T19:12:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2025-01-28T19:12:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
        f:spec:
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-28T19:12:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-01-28T19:12:50Z"
    name: cl-mongodb
    namespace: moja1
    resourceVersion: "198106119"
    uid: da237b97-cde5-4278-a0db-7f96188bb6d7
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 25Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-da237b97-cde5-4278-a0db-7f96188bb6d7
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 25Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-5-127.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2023-06-30T12:38:15Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: backend
      app.kubernetes.io/name: kafka
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2023-06-30T12:38:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-06-30T12:38:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-06-30T12:38:19Z"
    name: data-kafka-0
    namespace: moja1
    resourceVersion: "3365713"
    uid: 125999a3-45f4-49a5-b1aa-360ff82a4186
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 25Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-125999a3-45f4-49a5-b1aa-360ff82a4186
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 25Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-6-128.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2023-06-30T12:38:15Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: backend
      app.kubernetes.io/name: mysql
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2023-06-30T12:38:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-06-30T12:38:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-06-30T12:38:19Z"
    name: data-mysqldb-0
    namespace: moja1
    resourceVersion: "3365708"
    uid: 45221a11-db28-4277-9858-7edf0226f213
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 25Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-45221a11-db28-4277-9858-7edf0226f213
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 25Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-6-233.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2023-06-30T12:38:15Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: zookeeper
      app.kubernetes.io/instance: backend
      app.kubernetes.io/name: zookeeper
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2023-06-30T12:38:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-06-30T12:38:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-06-30T12:38:19Z"
    name: data-zookeeper-0
    namespace: moja1
    resourceVersion: "3365696"
    uid: ae03a0a2-df85-470d-b21c-ff6615106e59
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 12Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-ae03a0a2-df85-470d-b21c-ff6615106e59
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 12Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-5-119.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2023-06-30T12:38:15Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: backend
      app.kubernetes.io/name: auth-svc-redis
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2023-06-30T12:38:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-06-30T12:38:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-06-30T12:38:19Z"
    name: redis-data-auth-svc-redis-master-0
    namespace: moja1
    resourceVersion: "3365705"
    uid: 6ceeeec0-7a00-4ace-a6ea-7568d2e98981
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 25Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-6ceeeec0-7a00-4ace-a6ea-7568d2e98981
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 25Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-6-233.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2023-06-30T12:38:15Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: backend
      app.kubernetes.io/name: ttksims-redis
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2023-06-30T12:38:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-06-30T12:38:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-06-30T12:38:19Z"
    name: redis-data-ttksims-redis-master-0
    namespace: moja1
    resourceVersion: "3365689"
    uid: f227344f-ef7b-449f-b150-af1e643bcf37
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 25Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-f227344f-ef7b-449f-b150-af1e643bcf37
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 25Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      meta.helm.sh/release-name: backend
      meta.helm.sh/release-namespace: moja1
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
      volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
      volume.kubernetes.io/selected-node: ip-10-1-5-119.eu-west-2.compute.internal
      volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    creationTimestamp: "2025-01-28T19:12:46Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ttk-mongodb
      app.kubernetes.io/version: 7.0.5
      helm.sh/chart: ttk-mongodb-14.8.3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:accessModes: {}
          f:resources:
            f:requests:
              .: {}
              f:storage: {}
          f:storageClassName: {}
          f:volumeMode: {}
      manager: helm
      operation: Update
      time: "2025-01-28T19:12:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:volume.kubernetes.io/selected-node: {}
      manager: kube-scheduler
      operation: Update
      time: "2025-01-28T19:12:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:pv.kubernetes.io/bind-completed: {}
            f:pv.kubernetes.io/bound-by-controller: {}
            f:volume.beta.kubernetes.io/storage-provisioner: {}
            f:volume.kubernetes.io/storage-provisioner: {}
        f:spec:
          f:volumeName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-28T19:12:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:phase: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-01-28T19:12:50Z"
    name: ttk-mongodb
    namespace: moja1
    resourceVersion: "198106115"
    uid: b3465190-315c-4780-ba88-a1b9aefd5460
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 25Gi
    storageClassName: gp3
    volumeMode: Filesystem
    volumeName: pvc-b3465190-315c-4780-ba88-a1b9aefd5460
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 25Gi
    phase: Bound
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
