# Default values for central-kms.
# This is a YAML-formatted file.

# Declare global configurations
global: {}

# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: mojaloop/email-notifier
  tag: v9.5.0
  pullPolicy: Always

## Pod scheduling preferences.
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

## Set toleration for scheduler
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

init:
  enabled: true
  kafka:
    name: wait-for-kafka
    repository: solsson/kafka
    tag: latest
    pullPolicy: Always
    command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
    env: {}
    ## Env example
    # env:
    #   envItem1:
    #     name: hello
    #     value: world

service:
  name: email-notifier
  type: ClusterIP
  externalPort: 80
  internalPort: 3081

  annotations: {}

  # This allows one to point the service to an external backend. 
  # This is useful for local development where one wishes to hijack 
  # the communication from the service to the node layer and point
  # to a specific endpoint (IP, Port, etc).
  external:
    enabled: false
    # 10.0.2.2 is the magic IP for the host on virtualbox's network
    ip: 10.0.2.2
    ports:
      api: 
        name: email-notifier
        externalPort: 3081

readinessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 30
  periodSeconds: 15

livenessProbe:
  enabled: true
  httpGet:
    path: /health
  initialDelaySeconds: 30
  periodSeconds: 15

ingress:
  enabled: true
  # Used to create an Ingress record.
  hosts:
    api: email-notifier.local
  
  externalPath: /
  
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

config:
  ## Kafka Configuration
  # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
  kafka_host: '$release_name-kafka'
  kafka_port: 9092
  email:
    host: 'smtp.gmail.com'
    port: 587
    # secure_connection: false
    user: 'user@gmail.com'
    pass: 'pass'
    ciphers: 'SSLv3'
  PORT: 3081
  hub_participant:
    name: hub
  log_level: info
  log_transport: file

