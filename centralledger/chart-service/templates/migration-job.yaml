apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "centralledger-service.fullname" . }}-migration
  labels:
    batch.kubernetes.io/job-name: {{ template "centralledger-service.fullname" . }}-migration
    job-name: {{ template "centralledger-service.fullname" . }}-migration
  annotations:
{{- with .Values.migration.annotations }}
    {{ toYaml .| indent 4 | trim }}
{{- end }}
spec:
  backoffLimit: {{ .Values.migration.backoffLimit }}
  template:
    metadata:
      labels:
        batch.kubernetes.io/job-name: {{ template "centralledger-service.fullname" . }}-migration
        job-name: {{ template "centralledger-service.fullname" . }}-migration
    spec:
      restartPolicy: {{ .Values.migration.restartPolicy }}
      initContainers:
        {{- include "mojaloop-common.waitForMysqlInitContainer" . | nindent 8 }}
      containers:
        - name: run-migration
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - npm run migrate
          env:
            - name: CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS
              value: 'true'
            - name: CLEDG_DATABASE__PASSWORD
              {{- if .Values.config.db_secret }}
              valueFrom:
                  secretKeyRef:
                    name: '{{ .Values.config.db_secret.name }}'
                    key: '{{ .Values.config.db_secret.key }}'
              {{- else }}
              value: {{ .Values.config.db_password }}
              {{- end }}
            {{- if .Values.config.db_ssl_enabled }}
            - name: CLEDG_DATABASE__ADDITIONAL_CONNECTION_OPTIONS__ssl__rejectUnauthorized
              value: {{ .Values.config.db_ssl_verify | quote}}
            {{- if .Values.config.db_ssl_ca_secret }}
            - name: CLEDG_DATABASE__ADDITIONAL_CONNECTION_OPTIONS__ssl__ca
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.config.db_ssl_ca_secret.name }}'
                  key: '{{ .Values.config.db_ssl_ca_secret.key }}'
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: '{{ template "centralledger-service.fullname" . }}-config-volume'
              mountPath: /opt/app/config
{{- range $fileName, $fileContents := .Values.configOverride }}
            - name: config-override-volume
              mountPath: /opt/app/{{ $fileName }}
              subPath: {{ $fileName | replace "/" "-" }}
{{- end }}
      volumes:
{{- if .Values.configOverride }}
        - name: config-override-volume
          configMap:
            name: {{ template "centralledger-service.fullname" . }}-config-override
{{- end }}
        - name: {{ template "centralledger-service.fullname" . }}-config-volume
          configMap:
            name: {{ template "centralledger-service.fullname" . }}-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
