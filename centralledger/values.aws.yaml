# Default values for central-ledger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
containers:
  api:
    image:
      repository: mojaloop/central-ledger
      tag: latest
      pullPolicy: IfNotPresent
      command: '["node", "src/api/index.js"]'
    service:
      ports:
        api:
          name: http-api
          externalPort: 3000
          internalPort: 3000
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 120
      periodSeconds: 15
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 90
      periodSeconds: 15

  admin:
    image:
      repository: mojaloop/central-ledger
      tag: latest
      pullPolicy: IfNotPresent
      command: '["node", "src/admin/index.js"]'
    service:
      ports:
        api:
          name: http-api-admin
          externalPort: 3001
          internalPort: 3001
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 120
      periodSeconds: 15
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 90
      periodSeconds: 15


config:
  default_json: '
    {
      "PORT": $service_api_port,
      "ADMIN_PORT": $service_admin_port,
      "HOSTNAME": "$ingress_host",
      "ENABLE_TOKEN_AUTH": false,
      "ENABLE_BASIC_AUTH": false,
      "LEDGER_ACCOUNT_NAME": "LedgerName",
      "LEDGER_ACCOUNT_PASSWORD": "LedgerPassword",
      "AMOUNT": {
          "PRECISION": 10,
          "SCALE": 2
      },
      "SIDECAR": {
          "DISABLED": false,
          "HOST": "$forensicloggingsidecar_host",
          "PORT": $forensicloggingsidecar_port,
          "CONNECT_TIMEOUT": 45000,
          "RECONNECT_INTERVAL": 5000
      }
    }
'

init:
  enabled: true
  image:
    name: wait-for-postgres
    repository: bowerswilkins/awaitpostgres
    tag: latest
    pullPolicy: IfNotPresent

service:
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
  # This allows one to point the service to an external backend. 
  # This is useful for local development where one wishes to hijack 
  # the communication from the service to the node layer and point
  # to a specific endpoint (IP, Port, etc).
  external:
    enabled: false
    # 10.0.2.2 is the magic IP for the host on virtualbox's network
    ip: 10.0.2.2
    ports:
      api: 
        name: http-api
        externalPort: 3000
      admin: 
        name: http-api-admin
        externalPort: 3001

ingress:
  enabled: true
  externalPath:
    api: /
    admin: /admin/
  # Used to create an Ingress record.
  hosts:
    api: central-ledger.local
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: '/'
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

forensicloggingsidecar:
  enabled: true
  nameOverride: "forensicloggingsidecar-ledger"
  replicaCount: 1
  image:
    repository: mojaloop/forensic-logging-sidecar
    tag: latest
    pullPolicy: IfNotPresent

  service:
    name: http-api-and-ws
    type: LoadBalancer
    externalPort: 5678
    internalPort: 5678

    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

    # This allows one to point the service to an external backend. 
    # This is useful for local development where one wishes to hijack 
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        api: 
          name: http-api-and-ws
          externalPort: 5678

  readinessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 15

  livenessProbe:
    enabled: true
    initialDelaySeconds: 90
    periodSeconds: 15
    
  ingress:
    enabled: false
    # Used to create an Ingress record.
    hosts:
      api: forensic-logging-sidecar.local
    
    externalPath: /

    annotations:
      # kubernetes.io/ingress.class: nginx
      
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  config:
    default_json: '
      {
        "PORT": $servicePort,
        "SERVICE": "$serviceName",
        "BATCH_SIZE": 64,
        "BATCH_TIME_INTERVAL": 300000,
        "KMS": {
          "URL": "ws://$kmsHost:$kmsPort/sidecar",
          "PING_INTERVAL": 30000,
          "REQUEST_TIMEOUT": 90000,
          "CONNECT_TIMEOUT": 60000,
          "RECONNECT_INTERVAL": 10000
        }
      }
  '

  centralkms:
    enabled: true
    nameOverride: "centralkms"
    replicaCount: 1
    image:
      repository: mojaloop/central-kms
      tag: latest
      pullPolicy: IfNotPresent

    service:
      name: http-api-and-tcp-websocket
      type: LoadBalancer
      externalPort: 8080
      internalPort: 8080

      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
        
      # This allows one to point the service to an external backend. 
      # This is useful for local development where one wishes to hijack 
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          api: 
            name: http-api-and-tcp-websocket
            externalPort: 8080

    readinessProbe:
      enabled: true
      httpGet:
        path: /sidecars
      initialDelaySeconds: 30
      periodSeconds: 15

    livenessProbe:
      enabled: true
      httpGet:
        path: /sidecars
      initialDelaySeconds: 30
      periodSeconds: 15
      
    ingress:
      enabled: true
      # Used to create an Ingress record.
      hosts:
        - central-kms.local
      externalPath: /
      
      annotations:
        # kubernetes.io/ingress.class: nginx
      
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    postgresql:
      enabled: true 
      nameOverride: "centralkms-postgresql"
      ## Create a database user
      postgresUser: kms
      ## Default: random 10 character string
      postgresPassword: xD873IyaQB

      service:
        type: LoadBalancer
        port: 5432
        externalIPs: []

  postgresql:
    enabled: true
    nameOverride: "forensicloggingsidecar-ledger-postgresql"
    ## Create a database user
    postgresUser: sidecar
    ## Default: random 10 character string
    postgresPassword: Wqt0KlkKvL
    
    service:
      type: LoadBalancer
      port: 5432
      externalIPs: []
      
postgresql:
  enabled: true 
  nameOverride: "centralledger-postgresql"
  ## postgres image repository
  image: "postgres"
  ## postgres image version
  ## ref: https://hub.docker.com/r/library/postgres/tags/
  ##
  imageTag: "9.6.2"

  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  ## Create a database user
  ## Default: postgres
  postgresUser: central_ledger
  ## Default: random 10 character string
  postgresPassword: oyMxgZChuu

  ## Create a database
  ## Default: the postgres user
  postgresDatabase: central_ledger

  ## Specify initdb arguments, e.g. --data-checksums
  ## ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
  ## ref: https://www.postgresql.org/docs/current/static/app-initdb.html
  # postgresInitdbArgs:

  ## Persist data to a persitent volume
  persistence:
    enabled: false

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    subPath: "postgresql-db"
  
    service:
      type: LoadBalancer
      port: 5432
      externalIPs: []
      
  metrics:
    enabled: false
    image: wrouesnel/postgres_exporter
    imageTag: v0.1.1
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      ## Define additional custom metrics
      ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
      # customMetrics:
      #   pg_database:
      #     query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
      #     metrics:
      #       - name:
      #           usage: "LABEL"
      #           description: "Name of the database"
      #       - size_bytes:
      #           usage: "GAUGE"
      #           description: "Size of the database in bytes"

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m

  service:
    type: LoadBalancer
    port: 5432
    externalIPs: []
