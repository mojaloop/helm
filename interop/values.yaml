# Default values for interop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

interop-account-lookup:
  replicaCount: 1

  image:
    repository: mojaloop/interop-account-lookup
    tag: latest
    pullPolicy: IfNotPresent

  config:
    MAX_JVM_MEMORY: '256'
    proxy_host: 'localhost'
    account_lookup_service_host: 'interop-account-lookup'
    account_lookup_service_port: '8089'
    metrics_reporter_kafka_broker: 'ec2-35-164-199-6.us-west-2.compute.amazonaws.com:9092'
    metrics_reporter_environment: 'local'

  init:
    enabled: true
    image:
      name: wait-for-postgres
      repository: bowerswilkins/awaitpostgres
      tag: latest
      pullPolicy: IfNotPresent

  service:
    name: interop-account-lookup
    type: ClusterIP
    externalPort: 8091
    internalPort: 80

  ingress:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - interop-account-lookup
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  postgresql:
    enabled: true
    nameOverride: "interop-account-lookup-postgresql"
    ## postgres image repository
    image: "postgres"
    ## postgres image version
    ## ref: https://hub.docker.com/r/library/postgres/tags/
    ##
    imageTag: "9.6.2"

    ## Specify a imagePullPolicy
    ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    # imagePullPolicy:

    ## Create a database user
    ## Default: postgres
    postgresUser: mojaloop
    ## Default: random 10 character string
    postgresPassword: mojaloop

    ## Create a database
    ## Default: the postgres user
    postgresDatabase: mojaloop

    ## Specify initdb arguments, e.g. --data-checksums
    ## ref: https://github.com/docker-library/docs/blob/master/postgres/content.md#postgres_initdb_args
    ## ref: https://www.postgresql.org/docs/current/static/app-initdb.html
    # postgresInitdbArgs:

    ## Persist data to a persitent volume
    persistence:
      enabled: false

      ## A manually managed Persistent Volume and Claim
      ## Requires persistence.enabled: true
      ## If defined, PVC must be created manually before volume will be bound
      # existingClaim:

      ## database data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi
      subPath: "postgresql-db"

    metrics:
      enabled: false
      image: wrouesnel/postgres_exporter
      imageTag: v0.1.1
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        ## Define additional custom metrics
        ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file
        # customMetrics:
        #   pg_database:
        #     query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
        #     metrics:
        #       - name:
        #           usage: "LABEL"
        #           description: "Name of the database"
        #       - size_bytes:
        #           usage: "GAUGE"
        #           description: "Size of the database in bytes"

    ## Configure resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources:
      requests:
        memory: 256Mi
        cpu: 100m

    service:
      type: ClusterIP
      port: 5432
      externalIPs: []

interop-switch:
  replicaCount: 1
  image:
    repository: mojaloop/interop-switch
    tag: latest
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  ##
  #  imagePullSecrets:
  #    - name: myregistrykey
    pullPolicy: IfNotPresent

  config:
    MAX_JVM_MEMORY: '256'
    proxy_host: 'localhost'
    account_lookup_service_host: 'interop-account-lookup'
    account_lookup_service_port: '8089'
    central_services_host: 'central-ledger.local'
    central_ledger_host: 'central-ledger.local'
    central_ledger_port: '3002'
    metrics_reporter_kafka_broker: 'ec2-35-164-199-6.us-west-2.compute.amazonaws.com:9092'
    metrics_reporter_environment: 'local'

  service:
    name: interop-switch
    type: ClusterIP
    externalPort: 8090
    internalPort: 80

  ingress:
    enabled: true
    # Used to create an Ingress record.
    hosts:
      - interop-switch.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local