apiVersion: {{ template "apiVersion.Deployment" . }}
kind: Deployment
metadata:
  name: {{ include "auth-svc.name" . }}
  labels:
    {{- include "auth-svc.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "auth-svc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "auth-svc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: auth-svc
          image: {{ index .Values "auth-svc" "image"  }}
          command: {{ .Values.image.command }}

          # command: [ "tail", "-f", "/dev/null" ]
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.ports.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.ports.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          volumeMounts:
            - name: auth-svc-config-volume
              mountPath: /opt/auth-service/config/production.json
              subPath: production.json
          env:
          {{- range $envItem := index .Values "auth-svc" "env" }}
            - name: {{ $envItem.name }}
              value: {{ $envItem.value }}
          {{- end }}
      volumes:
        - name: auth-svc-config-volume
          configMap:
            name: auth-svc-config
            items:
              {{- range $k, $v := index .Values "auth-svc" "config" }}
              - key: {{ $k }}
                path: {{ $k }}
              {{- end }}