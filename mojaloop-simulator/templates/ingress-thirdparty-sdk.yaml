{{- range $name, $customConfig := .Values.simulators }}
{{- $config := merge $customConfig $.Values.defaults }}
{{- $fullName := printf "%s%s" (include "mojaloop-simulator.prefix" $) $name -}}
{{- if $config.config.thirdpartysdk.enabled }}
apiVersion: {{ include "common.capabilities.ingress.apiVersion" $ }}
kind: Ingress
metadata:
  name: {{ $fullName }}-thirdparty-sdk-ingress
  labels:
    app.kubernetes.io/name: sim-{{ $fullName }}-thirdparty-sdk-ingress
    {{- include "mojaloop-simulator.common-labels" $ | nindent 4 }}
{{- with $config.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  {{- if and $.Values.ingress.className (semverCompare ">=1.22-0" $.Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ default "nginx" $.Values.ingress.className }}
  {{- end }}
  rules:
  {{- if $config.ingress.enabled -}}
    {{ $hosts := default (list nil) $config.ingress.hosts }}
    {{- range $host := $hosts }}
      - host: {{ $host }}
        http:
          paths:
          - path: /sim/{{ $name }}/thirdpartysdk/outbound{{ $.Values.ingress.ingressPathRewriteRegex }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ default "ImplementationSpecific" $config.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (printf "%s-%s" $fullName "thirdparty-sdk") "servicePort" "outbound" "context" $) | nindent 14 }}
          - path: /sim/{{ $name }}/thirdpartysdk/inbound{{ $.Values.ingress.ingressPathRewriteRegex }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ default "ImplementationSpecific" $config.ingress.pathType }}
            {{- end }}
            backend: {{- include "common.ingress.backend" (dict "serviceName" (printf "%s-%s" $fullName "thirdparty-sdk") "servicePort" "inbound" "context" $) | nindent 14 }}
    {{- end }}
  {{- end }}
---
{{- end }}
{{- end }}
