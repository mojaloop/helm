# Default values for central.
# This is a YAML-formatted file.
# Declare global configurations
global:
  config:
    ## Pod scheduling preferences.
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}

    ## Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    nodeSelector: {}

    ## Set toleration for scheduler
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

# Declare variables to be passed into your templates.

central:

  centralledger:
    enabled: true
    nameOverride: centralledger
    # Default values for central-ledger.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    centralledger-service:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/api/index.js"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: false
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        migration:
          enabled: true
          name: run-migration
          command: npm run migrate
          config:
            run_data_migration: true

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    centralledger-handler-transfer-prepare:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--prepare"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: true
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-prepare.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    centralledger-handler-admin-transfer:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--admin"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: false
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: false

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-admin-transfer.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    centralledger-handler-transfer-position:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--position"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: true
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-position.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    centralledger-handler-transfer-get:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--get"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: false
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: false

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-get.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    centralledger-handler-transfer-fulfil:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--fulfil"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: true
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-fulfil.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    centralledger-handler-timeout:
      # Default values for central-ledger.
      # This is a YAML-formatted file.

      # Declare variables to be passed into your templates.
      enabled: true
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--timeout"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      sidecar:
        enabled: true
        image:
          repository: mojaloop/event-sidecar
          tag: v8.7.3
          pullPolicy: Always
        readinessProbe:
          enabled: true
          initialDelaySeconds: 120
          periodSeconds: 15
        livenessProbe:
          enabled: true
          initialDelaySeconds: 90
          periodSeconds: 15
        config:
          log_level: info

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: false

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        log_level: info
        log_transport: file

        # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
        # Any combination of: `log,audit,trace`
        event_async_override: ''

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: true
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-timeout.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
          # Secrets must be manually created in the namespace.
          # - secretName: chart-example-tls
          #   hosts:
          #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
        #  memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

    mysql:
      enabled: true
      nameOverride: "centralledger-mysql"
      # Default values for Percona XtraDB Cluster

      ## percona image and version
      ## ref: https://hub.docker.com/r/percona/percona-xtradb-cluster/tags/
      image:
        repository: "percona/percona-xtradb-cluster"
        tag: "5.7.19"
        pullPolicy: Always

      # Desired number of members of xtradb cluster
      replicas: 1

      ## Specify password for root user
      ##
      # mysqlRootPassword: not-a-secure-password

      ## Specify password for xtradb backup user
      ##
      # xtraBackupPassword: replicate-my-data

      ## Uncomment to create a database user
      ##
      mysqlUser: central_ledger
      mysqlPassword: oyMxgZChuu

      ## Allow unauthenticated access, uncomment to enable
      ##
      # mysqlAllowEmptyPassword: true

      ## Uncomment to Create a database
      ##
      mysqlDatabase: central_ledger

      ## hosts to allow root user access from
      # set to "127.0.0.1" to deny remote root.
      allowRootFrom: "%"

      ## Persist data to a persitent volume
      persistence:
        enabled: false
        ## percona data Persistent Volume Storage Class
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        # storageClass: "-"
        accessMode: ReadWriteOnce
        size: 8Gi

      ## Node labels for pod assignment
      ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
      ##
      nodeSelector: {}

      ## Pod annotations
      ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      podAnnotations: {}

      ## Tolerations labels for pod assignment
      ## Allow the scheduling on tainted nodes (requires Kubernetes >= 1.6)
      ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      ##
      tolerations: []

      ## Configure resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      # resources:
      #  requests:
      #    memory: 256Mi
      #    cpu: 100m

      ## Configure the following values below if required
      #   performance_schema=ON
      #   max_connections=999
      #   max_user_connections=999
      #   thread_cache_size=999
      configFiles:
        node.cnf: |+
          [mysqld]
          datadir=/var/lib/mysql
          default_storage_engine=InnoDB
          binlog_format=ROW
          innodb_flush_log_at_trx_commit  = 0
          innodb_flush_method             = O_DIRECT
          innodb_file_per_table           = 1
          innodb_autoinc_lock_mode=2
          bind_address = 0.0.0.0
          wsrep_slave_threads=2
          wsrep_cluster_address=gcomm://
          wsrep_provider=/usr/lib/galera3/libgalera_smm.so
          wsrep_cluster_name=galera
          wsrep_sst_method=xtrabackup-v2
          pxc_strict_mode=DISABLED
      ## When set to true will create sidecar for `prom/mysqld-exporter`
      ## metrics exporting
      metricsExporter:
        enabled: true

      ## When set to true will create sidecar to tail mysql log
      logTail: true

      service:
        type: ClusterIP
        port: 3306
        externalIPs: []

    kafka:
      enabled: true
      nameOverride: kafka
      # ------------------------------------------------------------------------------
      # Kafka:
      # ------------------------------------------------------------------------------

      ## The StatefulSet installs 3 pods by default
      replicas: 1

      ## The kafka image repository
      image: "confluentinc/cp-kafka"

      ## The kafka image tag
      imageTag: "5.0.1"

      ## Specify a imagePullPolicy
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      imagePullPolicy: "IfNotPresent"

      ## Configure resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      resources: {}
        # limits:
        #   cpu: 200m
        #   memory: 1536Mi
        # requests:
        #   cpu: 100m
        #   memory: 1024Mi
      kafkaHeapOptions: "-Xmx1G -Xms1G"

      ## The StatefulSet Update Strategy which Kafka will use when changes are applied.
      ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
      updateStrategy:
        type: "OnDelete"

      ## Start and stop pods in Parallel or OrderedReady (one-by-one.)  Note - Can not change after first release.
      ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
      podManagementPolicy: OrderedReady

      ## If RBAC is enabled on the cluster, the Kafka init container needs a service account
      ## with permissisions sufficient to apply pod labels
      rbac:
        enabled: true

      ## The name of the storage class which the cluster should use.
      # storageClass: default

      ## The subpath within the Kafka container's PV where logs will be stored.
      ## This is combined with `persistence.mountPath`, to create, by default: /opt/kafka/data/logs
      logSubPath: "logs"

      ## Use an alternate scheduler, e.g. "stork".
      ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
      ##
      # schedulerName:

      ## Pod scheduling preferences (by default keep pods within a release on separate nodes).
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      ## By default we don't set affinity
      affinity: {}
      ## Alternatively, this typical example defines:
      ## antiAffinity (to keep Kafka pods on separate pods)
      ## and affinity (to encourage Kafka pods to be collocated with Zookeeper pods)
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - kafka
      #       topologyKey: "kubernetes.io/hostname"
      #   podAffinity:
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #      - weight: 50
      #        podAffinityTerm:
      #          labelSelector:
      #            matchExpressions:
      #            - key: app
      #              operator: In
      #              values:
      #                - zookeeper
      #          topologyKey: "kubernetes.io/hostname"

      ## Node labels for pod assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      nodeSelector: {}

      ## Readiness probe config.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
      ##
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 3

      ## Period to wait for broker graceful shutdown (sigterm) before pod is killed (sigkill)
      ## ref: https://kubernetes-v1-4.github.io/docs/user-guide/production-pods/#lifecycle-hooks-and-termination-notice
      ## ref: https://kafka.apache.org/10/documentation.html#brokerconfigs controlled.shutdown.*
      terminationGracePeriodSeconds: 60

      # Tolerations for nodes that have taints on them.
      # Useful if you want to dedicate nodes to just run kafka
      # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []
      # tolerations:
      # - key: "key"
      #   operator: "Equal"
      #   value: "value"
      #   effect: "NoSchedule"

      ## External access.
      ##
      external:
        enabled: false
        servicePort: 19092
        firstListenerPort: 31090
        domain: cluster.local
        init:
          image: "lwolf/kubectl_deployer"
          imageTag: "0.4"
          imagePullPolicy: "IfNotPresent"

      ## Configuration Overrides. Specify any Kafka settings you would like set on the StatefulSet
      ## here in map format, as defined in the official docs.
      ## ref: https://kafka.apache.org/documentation/#brokerconfigs
      ##
      configurationOverrides:
        ## Configure these to match the number of Kafka nodes for HA
        "offsets.topic.replication.factor": 1
        "default.replication.factor": 1
        # "auto.leader.rebalance.enable": true
        # "auto.create.topics.enable": true
        # "controlled.shutdown.enable": true
        # "controlled.shutdown.max.retries": 100

        ## Options required for external access via NodePort
        ## ref:
        ## - http://kafka.apache.org/documentation/#security_configbroker
        ## - https://cwiki.apache.org/confluence/display/KAFKA/KIP-103%3A+Separation+of+Internal+and+External+traffic
        ##
        ## Setting "advertised.listeners" here appends to "PLAINTEXT://${POD_IP}:9092,"
        # "advertised.listeners": |-
        #   EXTERNAL://kafka.cluster.local:$((31090 + ${KAFKA_BROKER_ID}))
        # "listener.security.protocol.map": |-
        #   PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT

      ## A collection of additional ports to expose on brokers (formatted as normal containerPort yaml)
      # Useful when the image exposes metrics (like prometheus, etc.) through a javaagent instead of a sidecar
      additionalPorts: {}

      ## Persistence configuration. Specify if and how to persist data to a persistent volume.
      ##
      persistence:
        enabled: false

        ## The size of the PersistentVolume to allocate to each Kafka Pod in the StatefulSet. For
        ## production servers this number should likely be much larger.
        ##
        size: "1Gi"

        ## The location within the Kafka container where the PV will mount its storage and Kafka will
        ## store its logs.
        ##
        mountPath: "/opt/kafka/data"

        ## Kafka data Persistent Volume Storage Class
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        # storageClass:

      jmx:
        ## Rules to apply to the Prometheus JMX Exporter.  Note while lots of stats have been cleaned and exposed,
        ## there are still more stats to clean up and expose, others will never get exposed.  They keep lots of duplicates
        ## that can be derived easily.  The configMap in this chart cleans up the metrics it exposes to be in a Prometheus
        ## format, eg topic, broker are labels and not part of metric name. Improvements are gladly accepted and encouraged.
        configMap:

          ## Allows disabling the default configmap, note a configMap is needed
          enabled: true

          ## Allows setting values to generate confimap
          ## To allow all metrics through (warning its crazy excessive) comment out below `overrideConfig` and set
          ## `whitelistObjectNames: []`
          overrideConfig: {}
            # jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi
            # lowercaseOutputName: true
            # lowercaseOutputLabelNames: true
            # ssl: false
            # rules:
            # - pattern: ".*"

          ## If you would like to supply your own ConfigMap for JMX metrics, supply the name of that
          ## ConfigMap as an `overrideName` here.
          overrideName: ""

        ## Port the jmx metrics are exposed in native jmx format, not in Prometheus format
        port: 5555

        ## JMX Whitelist Objects, can be set to control which JMX metrics are exposed.  Only whitelisted
        ## values will be exposed via JMX Exporter.  They must also be exposed via Rules.  To expose all metrics
        ## (warning its crazy excessive and they aren't formatted in a prometheus style) (1) `whitelistObjectNames: []`
        ## (2) commented out above `overrideConfig`.
        whitelistObjectNames:  # []
        - kafka.controller:*
        - kafka.server:*
        - java.lang:*
        - kafka.network:*
        - kafka.log:*

      ## Prometheus Exporters / Metrics
      ##
      prometheus:
        ## Prometheus JMX Exporter: exposes the majority of Kafkas metrics
        jmx:
          enabled: true

          ## The image to use for the metrics collector
          image: solsson/kafka-prometheus-jmx-exporter@sha256

          ## The image tag to use for the metrics collector
          imageTag: a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8

          ## Interval at which Prometheus scrapes metrics, note: only used by Prometheus Operator
          interval: 10s

          ## Port jmx-exporter exposes Prometheus format metrics to scrape
          port: 5556

          resources: {}
            # limits:
            #   cpu: 200m
            #   memory: 1Gi
            # requests:
            #   cpu: 100m
            #   memory: 100Mi

        ## Prometheus Kafka Exporter: exposes complimentary metrics to JMX Exporter
        kafka:
          enabled: true

          ## The image to use for the metrics collector
          image: danielqsj/kafka-exporter

          ## The image tag to use for the metrics collector
          imageTag: v1.0.1

          ## Interval at which Prometheus scrapes metrics, note: only used by Prometheus Operator
          interval: 10s

          ## Port kafka-exporter exposes for Prometheus to scrape metrics
          port: 9308

          ## Resource limits
          resources: {}
      #      limits:
      #        cpu: 200m
      #        memory: 1Gi
      #      requests:
      #        cpu: 100m
      #        memory: 100Mi

        operator:
          ## Are you using Prometheus Operator?
          enabled: false

          serviceMonitor:
            # Namespace Prometheus is installed in
            namespace: monitoring

            ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/coreos/prometheus-operator/tree/master/helm#tldr)
            ## [Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/prometheus/templates/prometheus.yaml#L65)
            ## [Kube Prometheus Selector Label](https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml#L298)
            selector:
              prometheus: kube-prometheus

      # ------------------------------------------------------------------------------
      # Zookeeper:
      # ------------------------------------------------------------------------------

      zookeeper:
        ## If true, install the Zookeeper chart alongside Kafka
        ## ref: https://github.com/kubernetes/charts/tree/master/incubator/zookeeper
        enabled: true

        ## ref: https://github.com/kubernetes/contrib/tree/master/statefulsets/zookeeper#stateful-set
        # Desired quantity of ZooKeeper pods. This should always be (1,3,5, or 7)
        replicaCount: 1

        ## Configure Zookeeper resource requests and limits
        ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
        resources: ~

        ## The JVM heap size to allocate to Zookeeper
        heap: "1G"

        persistence:
          enabled: false
          ## The amount of PV storage allocated to each Zookeeper pod in the statefulset
          # size: "2Gi"

        ## Specify a Zookeeper imagePullPolicy
        ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
        imagePullPolicy: "IfNotPresent"

        ## If the Zookeeper Chart is disabled a URL and port are required to connect
        url: ""
        port: 2181

        ## Pod scheduling preferences (by default keep pods within a release on separate nodes).
        ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
        ## By default we don't set affinity:
        affinity: {}  # Criteria by which pod label-values influence scheduling for zookeeper pods.
        # podAntiAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     - topologyKey: "kubernetes.io/hostname"
        #       labelSelector:
        #         matchLabels:
        #           release: zookeeper

  centralsettlement:
    # Declare variables to be passed into your templates.
    replicaCount: 1
    image:
      repository: mojaloop/central-settlement
      tag: v8.8.0
      pullPolicy: Always

    readinessProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15

    livenessProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15

    config:
      ## Kafka Configuration
      # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
      kafka_host: '$release_name-kafka'
      kafka_port: 9092
      ## DB Configuration
      # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
      db_type: 'mysql'
      # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
      db_driver: 'mysql'
      db_host: '$release_name-centralledger-mysql'
      db_port: 3306
      db_user: central_ledger
      db_password: oyMxgZChuu
      db_database: central_ledger
      db_connection_pool_min: 10
      db_connection_pool_max: 30
      db_acquire_timeout_millis: 30000
      db_create_timeout_millis: 30000
      db_destroy_timeout_millis: 5000
      db_idle_timeout_millis: 30000
      db_reap_interval_millis: 1000
      db_create_retry_interval_millis: 200
      db_debug: false
      hub_participant:
        id: 1
        name: hub
      log_level: info
      log_transport: file

      error_handling:
        include_cause_extension: false
        truncate_extensions: true

    init:
      enabled: true
      mysql:
        name: wait-for-mysql
        repository: mysql
        tag: latest
        pullPolicy: Always
        command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

    service:
      type: ClusterIP
      ports:
        api:
          name: http-api
          externalPort: 80
          internalPort: 3007

      annotations: {}

      # This allows one to point the service to an external backend.
      # This is useful for local development where one wishes to hijack
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          api:
            name: http-api
            externalPort: 3007

    ingress:
      enabled: true
      externalPath: /
      # Used to create an Ingress record.
      hosts:
        api: central-settlement.local
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: '/'
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

  centraleventprocessor:
    replicaCount: 1
    image:
      repository: mojaloop/central-event-processor
      tag: v8.8.0
      pullPolicy: Always
    init:
      enabled: true
      kafka:
        name: wait-for-kafka
        repository: solsson/kafka
        tag: latest
        pullPolicy: Always
        command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
        env: {}
        ## Env example
        # env:
        #   envItem1:
        #     name: hello
        #     value: world
        #
      mongodb:
        name: wait-for-mongodb
        repository: bitnami/mongodb
        tag: latest
        pullPolicy: Always
        command: "mongo mongodb://$mongo_host:$mongo_port --eval \"db.adminCommand('ping')\""

    service:
      name: central-event-processor
      type: ClusterIP
      externalPort: 80
      internalPort: 3080

      annotations: {}

      # This allows one to point the service to an external backend.
      # This is useful for local development where one wishes to hijack
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          api:
            name: central-event-processor
            externalPort: 3080

    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 15

    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 15

    ingress:
      enabled: true
      # Used to create an Ingress record.
      hosts:
        api: central-event-processor.local

      externalPath: /

      annotations:
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"

      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    config:
      ## Kafka Configuration
      # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
      kafka_host: '$release_name-kafka'
      kafka_port: 9092
      PORT: 3080
      mongo_host: '$release_name-mongodb'
      mongo_port: 27017
      mongo_user: mojaloop
      mongo_password: password
      mongo_database: mojaloop
      central_ledger_admin_host: '$release_name-centralledger-service'
      central_ledger_admin_port: 80
      hub_participant:
        name: hub
      log_level: info
      log_transport: file

    mongodb:
    ## Global Docker image registry
    ## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value
    ##
    # global:
    #   imageRegistry:
      enabled: true
      nameOverride: mongodb

      image:
        ## Bitnami MongoDB registry
        ##
        registry: docker.io
        ## Bitnami MongoDB image name
        ##
        repository: bitnami/mongodb
        ## Bitnami MongoDB image tag
        ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/
        ##
        tag: 4.0.3

        ## Specify a imagePullPolicy
        ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
        ##
        pullPolicy: Always
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ##
        # pullSecrets:
        #   - myRegistrKeySecretName

      ## Enable authentication
      ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
      #
      usePassword: true
      # existingSecret: name-of-existing-secret

      ## MongoDB admin password
      ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
      ##
      mongodbRootPassword: adminpass

      ## MongoDB custom user and database
      ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
      ##
      mongodbUsername: mojaloop
      mongodbPassword: password
      mongodbDatabase: mojaloop


      ## Whether enable/disable IPv6 on MongoDB
      ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-ipv6
      ##
      mongodbEnableIPv6: true

      ## MongoDB additional command line flags
      ##
      ## Can be used to specify command line flags, for example:
      ##
      ## mongodbExtraFlags:
      ##  - "--wiredTigerCacheSizeGB=2"
      mongodbExtraFlags: []

      ## Pod Security Context
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
      ##
      securityContext:
        enabled: true
        fsGroup: 1001
        runAsUser: 1001

      ## Kubernetes Cluster Domain
      clusterDomain: cluster.local

      ## Kubernetes service type
      service:
        annotations: {}
        type: ClusterIP
        # clusterIP: None
        port: 27017

        ## Specify the nodePort value for the LoadBalancer and NodePort service types.
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
        ##
        # nodePort:

      ## Setting up replication
      ## ref: https://github.com/bitnami/bitnami-docker-mongodb#setting-up-a-replication
      #
      replicaSet:
        ## Whether to create a MongoDB replica set for high availability or not
        enabled: false
        useHostnames: true

        ## Name of the replica set
        ##
        name: rs0

        ## Key used for replica set authentication
        ##
        # key: key

        ## Number of replicas per each node type
        ##
        replicas:
          secondary: 1
          arbiter: 1
        ## Pod Disruption Budget
        ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
        pdb:
          minAvailable:
            primary: 1
            secondary: 1
            arbiter: 1

      # Annotations to be added to MongoDB pods
      podAnnotations: {}

      # Additional pod labels to apply
      podLabels: {}

      ## Configure resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      resources: {}
      # limits:
      #   cpu: 500m
      #   memory: 512Mi
      # requests:
      #   cpu: 100m
      #   memory: 256Mi

      ## Node selector
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      nodeSelector: {}

      ## Affinity
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity: {}

      ## Tolerations
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []

      ## Enable persistence using Persistent Volume Claims
      ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
      ##
      persistence:
        enabled: false
        ## A manually managed Persistent Volume and Claim
        ## Requires persistence.enabled: true
        ## If defined, PVC must be created manually before volume will be bound
        # existingClaim:

        ## mongodb data Persistent Volume Storage Class
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        # storageClass: "-"
        accessModes:
          - ReadWriteOnce
        size: 8Gi
        annotations: {}

      ## Configure extra options for liveness and readiness probes
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
      livenessProbe:
        enabled: true
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1
      readinessProbe:
        enabled: true
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
        successThreshold: 1

      # Entries for the MongoDB config file
      configmap:
      #  # Where and how to store data.
      #  storage:
      #    dbPath: /opt/bitnami/mongodb/data/db
      #    journal:
      #      enabled: true
      #    #engine:
      #    #wiredTiger:
      #  # where to write logging data.
      #  systemLog:
      #    destination: file
      #    logAppend: true
      #    path: /opt/bitnami/mongodb/logs/mongodb.log
      #  # network interfaces
      #  net:
      #    port: 27017
      #    bindIp: 0.0.0.0
      #    unixDomainSocket:
      #      enabled: true
      #      pathPrefix: /opt/bitnami/mongodb/tmp
      #  # replica set options
      #  #replication:
      #  #  replSetName: replicaset
      #  # process management options
      #  processManagement:
      #     fork: false
      #     pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
      #  # set parameter options
      #  setParameter:
      #     enableLocalhostAuthBypass: true
      #  # security options
      #  security:
      #  authorization: enabled
        #keyFile: /opt/bitnami/mongodb/conf/keyfile

      ## Prometheus Exporter / Metrics
      ##
      metrics:
        enabled: false

        image:
          registry: docker.io
          repository: forekshub/percona-mongodb-exporter
          tag: latest
          pullPolicy: IfNotPresent
          ## Optionally specify an array of imagePullSecrets.
          ## Secrets must be manually created in the namespace.
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
          ##
          # pullSecrets:
          #   - myRegistrKeySecretName

        ## Metrics exporter resource requests and limits
        ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
        ##
        # resources: {}

        ## Metrics exporter pod Annotation
        podAnnotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9216"

        ## Prometheus Service Monitor
        ## ref: https://github.com/coreos/prometheus-operator
        ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md
        serviceMonitor:
          ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
          enabled: false
          ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
          ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
          additionalLabels: {}

          ## Specify Metric Relabellings to add to the scrape endpoint
          ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
          # relabellings:

          alerting:
            ## Define individual alerting rules as required
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup
            ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
            rules: {}

            ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Prometheus Rules to work with
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
      additionalLabels: {}

ml-api-adapter:
  ml-api-adapter-service:
    enabled: true
    # Default values for ml-api-adapter.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    replicaCount: 1
    image:
      repository: mojaloop/ml-api-adapter
      tag: v8.8.2
      command: '["node", "src/api/index.js"]'
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    ##
    #  imagePullSecrets:
    #    - name: myregistrykey
      pullPolicy: Always

    sidecar:
      enabled: true
      image:
        repository: mojaloop/event-sidecar
        tag: v8.7.3
        pullPolicy: Always
      readinessProbe:
        enabled: true
        initialDelaySeconds: 120
        periodSeconds: 15
      livenessProbe:
        enabled: true
        initialDelaySeconds: 90
        periodSeconds: 15
      config:
        log_level: info

    init:
      enabled: true
      image:
        name: wait-for-kafka
        repository: solsson/kafka
        tag: latest
        pullPolicy: Always
        command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
        env: {}
        ## Env example
        # env:
        #   envItem1:
        #     name: hello
        #     value: world
        #

    ## metric configuration for prometheus instrumentation
    metrics:
      ## flag to enable/disable the metrics end-points
      enabled: true

    config:
      # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
      kafka_host: '$release_name-kafka'
      kafka_port: 9092
      central_services_host: '$release_name-centralledger-service'
      central_services_port: 80
      security:
        callback:
          rejectUnauthorized: true
      log_level: 'info'
      log_transport: 'file'
      # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
      # Any combination of: `log,audit,trace`
      event_async_override: ''
      max_callback_time_lag_dilation_milliseconds: 100
      max_fulfil_timeout_duration_seconds: 240

      error_handling:
        include_cause_extension: false
        truncate_extensions: true

    service:
      type: ClusterIP
      externalPort: 80
      internalPort: 3000

    ingress:
      enabled: true
      externalPath: /
      # Used to create an Ingress record.
      hosts:
        api: ml-api-adapter.local

      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: '/'
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

  ml-api-adapter-handler-notification:
    enabled: true
    # Default values for ml-api-adapter.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.
    replicaCount: 1
    image:
      repository: mojaloop/ml-api-adapter
      tag: v8.8.2
      command: '["node", "src/handlers/index.js", "handler", "--notification"]'
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    ##
    #  imagePullSecrets:
    #    - name: myregistrykey
      pullPolicy: Always

    sidecar:
      enabled: true
      image:
        repository: mojaloop/event-sidecar
        tag: v8.7.3
        pullPolicy: Always
      readinessProbe:
        enabled: true
        initialDelaySeconds: 120
        periodSeconds: 15
      livenessProbe:
        enabled: true
        initialDelaySeconds: 90
        periodSeconds: 15
      config:
        log_level: info

    init:
      enabled: true

    ## metric configuration for prometheus instrumentation
    metrics:
      ## flag to enable/disable the metrics end-points
      enabled: true

    config:
      # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
      kafka_host: '$release_name-kafka'
      kafka_port: 9092
      central_services_host: '$release_name-centralledger-service'
      central_services_port: 80
      security:
        callback:
          rejectUnauthorized: true
      log_level: info
      log_transport: file
      # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
      # Any combination of: `log,audit,trace`
      event_async_override: ''
      max_callback_time_lag_dilation_milliseconds: 100
      max_fulfil_timeout_duration_seconds: 240
      send_transfer_confirmation_to_payee: true

      error_handling:
          include_cause_extension: false
          truncate_extensions: true

    service:
      type: ClusterIP
      externalPort: 80
      internalPort: 3000

    ingress:
      enabled: true
      externalPath: /
      # Used to create an Ingress record.
      hosts:
        api: ml-api-adapter-notification.local

      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: '/'
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

emailnotifier:
  enabled: false
  replicaCount: 1

  image:
    repository: mojaloop/email-notifier
    tag: v8.8.0
    pullPolicy: Always

  init:
    enabled: true
    kafka:
      name: wait-for-kafka
      repository: solsson/kafka
      tag: latest
      pullPolicy: Always
      command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
      env: {}
      ## Env example
      # env:
      #   envItem1:
      #     name: hello
      #     value: world

  config:
    ## Kafka Configuration
    # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
    kafka_host: '$release_name-kafka'
    kafka_port: 9092
    email:
      host: 'smtp.gmail.com'
      port: 587
      # secure_connection: false
      user: 'user@gmail.com'
      pass: 'pass'
      ciphers: 'SSLv3'
    PORT: 3081
    hub_participant:
      name: hub
    log_level: 'info'
    log_transport: 'file'

  service:
    name: email-notifier
    type: ClusterIP
    externalPort: 80
    internalPort: 3081

    annotations: {}

    # This allows one to point the service to an external backend.
    # This is useful for local development where one wishes to hijack
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        api:
          name: email-notifier
          externalPort: 3081

  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 30
    periodSeconds: 15

  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 30
    periodSeconds: 15

  ingress:
    enabled: true
    # Used to create an Ingress record.
    hosts:
      api: email-notifier.local

    externalPath: /

    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

account-lookup-service:

  account-lookup-service:
    enabled: true
    # Default values for account-lookup-service.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 1
    containers:
      api:
        image:
          repository: mojaloop/account-lookup-service
          tag: v8.7.0
          pullPolicy: Always
          command: '["node", "src/index.js", "server", "--api"]'
        service:
          ports:
            api:
              name: http-api
              port: 4002
      admin:
        image:
          repository: mojaloop/account-lookup-service
          tag: v8.7.0
          pullPolicy: Always
          command: '["node", "src/index.js", "server", "--admin"]'
        service:
          ports:
            api:
              name: http-admin
              port: 4001

    nameOverride: ""
    fullnameOverride: ""


    ## metric configuration for prometheus instrumentation
    metrics:
      ## flag to enable/disable the metrics end-points
      enabled: true
      config:
        timeout: 5000
        prefix: moja_
        defaultLabels:
          serviceName: account-lookup-service

    config:
      ## Central-Ledger config
      central_services_host: '$release_name-centralledger-service'
      central_services_port: 80

      end_point_cache:
        expiresIn: 180000
        generateTimeout: 30000
      
      error_handling:
          include_cause_extension: false
          truncate_extensions: true

      ## DB Configuration
      # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
      db_type: 'mysql'
      # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
      db_driver: 'mysql'
      db_host: '$release_name-account-lookup-mysql'
      db_port: 3306
      db_user: account_lookup
      db_password: OdonPianoX
      db_database: account_lookup
      db_connection_pool_min: 10
      db_connection_pool_max: 30
      db_acquire_timeout_millis: 30000
      db_create_timeout_millis: 30000
      db_destroy_timeout_millis: 5000
      db_idle_timeout_millis: 30000
      db_reap_interval_millis: 1000
      db_create_retry_interval_millis: 200
      db_debug: false
      display_routes: true
      run_migrations: false
      
      # Log config
      log_level: 'info'
      log_transport: 'file'

    init:
      enabled: true
      mysql:
        enabled: true
        name: wait-for-mysql
        repository: mysql
        tag: latest
        pullPolicy: Always
        command: "until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;"

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      path: /
      hosts:
        - account-lookup-service.local
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

  account-lookup-service-admin:
    enabled: true

    # Default values for account-lookup-service.
    # This is a YAML-formatted file.
    # Declare variables to be passed into your templates.

    replicaCount: 1
    containers:
      api:
        image:
          repository: mojaloop/account-lookup-service
          tag: v8.7.0
          pullPolicy: Always
          command: '["node", "src/index.js", "server", "--api"]'
        service:
          ports:
            api:
              name: http-api
              port: 4002
      admin:
        image:
          repository: mojaloop/account-lookup-service
          tag: v8.7.0
          pullPolicy: Always
          command: '["node", "src/index.js", "server", "--admin"]'
        service:
          ports:
            api:
              name: http-admin
              port: 4001

    nameOverride: ""
    fullnameOverride: ""


    ## metric configuration for prometheus instrumentation
    metrics:
      ## flag to enable/disable the metrics end-points
      enabled: true
      config:
        timeout: 5000
        prefix: moja_
        defaultLabels:
          serviceName: account-lookup-service-admin

    config:
      ## Central-Ledger config
      central_services_host: '$release_name-centralledger-service'
      central_services_port: 80

      end_point_cache:
        expiresIn: 180000
        generateTimeout: 30000

      error_handling:
        include_cause_extension: false
        truncate_extensions: true

      ## DB Configuration
      # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
      db_type: 'mysql'
      # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
      db_driver: 'mysql'
      db_host: '$release_name-account-lookup-mysql'
      db_port: 3306
      db_user: account_lookup
      db_password: OdonPianoX
      db_database: account_lookup
      db_connection_pool_min: 10
      db_connection_pool_max: 30
      db_acquire_timeout_millis: 30000
      db_create_timeout_millis: 30000
      db_destroy_timeout_millis: 5000
      db_idle_timeout_millis: 30000
      db_reap_interval_millis: 1000
      db_create_retry_interval_millis: 200
      db_debug: false

      display_routes: true
      run_migrations: false

      # Log config
      log_level: 'info'
      log_transport: 'file'

    init:
      enabled: true
      mysql:
        name: wait-for-mysql
        repository: mysql
        tag: latest
        pullPolicy: Always
        command: "until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      path: /
      hosts:
        - account-lookup-service-admin.local
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    nodeSelector: {}

    tolerations: []

    affinity: {}

  als-oracle-pathfinder:
    enabled: false
    # Declare variables to be passed into your templates.
    replicaCount: 1
    image:
      repository: mojaloop/als-oracle-pathfinder
      tag: v8.7.1
      pullPolicy: Always
      command: '["node", "/opt/als-oracle-pathfinder/src/index.js"]'
      imagePullSecrets: []

    readinessProbe:
      enabled: true
      httpGet:
        path: /
      initialDelaySeconds: 45
      periodSeconds: 15

    livenessProbe:
      enabled: true
      httpGet:
        path: /
      initialDelaySeconds: 45
      periodSeconds: 15

    config:
      db:
        type: 'mysql'
        driver: 'mysql'
        central_ledger:
          host: '$release_name-centralledger-mysql'
          port: '3306'
          database: 'central_ledger'
          user: 'central_ledger'
          password: 'oyMxgZChuu'
        account_lookup:
          host: '$release_name-account-lookup-mysql'
          port: '3306'
          database: 'account_lookup'
          user: 'account_lookup'
          password: 'OdonPianoX'
      log_level: 'info'

      pathfinder:
        # Example host IP to be replaced by valid IP
        host: 'localhost'
        port: 7007
        queryTimeoutMs: 10000
        tls:
          certs:
            # These are example keys, please get valid keys for your deployment
            client_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
            client_key: |-
              -----BEGIN PRIVATE KEY-----
              MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDgxTiKmKzu+uGw
              mXoB3SEgX+cQaNM8b/oqWIYTV5oBXE5z8+DDjeq4qO3zjoCrB31igynY0DHvjG9n
              g6dszBKmMNAZFBsxjseK5uxSIkyquy3pLkBCo8cmhoSuSdWNGi/Q3IBSOJrcdOG2
              SqtFPnbFOdMZjBzj3O34EqgbiK6u/jSF85N7hvuDcDrgJU0Rl7u36o9sAh7D0xTV
              fc4PcPSHMpnwyy2p5sttI9Uh+WfNT7wByDiasy9J1/o4695RRt/uvhCZ8L0B6s1W
              Jr8ZwC9sb8ZT5YQ6cl+n7xcC/6B9LRozalRt2tcuL83Fae/DpuHx76mNsFyWLyuh
              aauhFsU/AgMBAAECggEAWgPhvu+h4hsrI1Rznid2ysZdfR7d6chWgXruRvTAQmc7
              LAixLN+67rUIho+9S8E2H6uzqJbISM0PGH+LH3Eiztehn0mEEnbBxwjv/3ypA37u
              xgG1znpUmUMqA7qiAV5JY/XKliMBMeTFOAHzUUnQuu+LcSHBuCeUTdL66/vzKTT4
              oCKwB1vcnzfL5NS/7ownAgLsjNj3pgORRAY9sTDzUkjwrrN/m5nEfghycAcyXHDJ
              lQprc0xX4TI/Vd9ZkG+khAznkRaXiPJ1P1TwadgK5m53Imt2H3F0lmrhNCrul/l7
              F0Uf2tfNHHgSjyoGQkPryuqyf2NcMiUY1d4uCsnWEQKBgQDziD3gBkjguQZUc3Yb
              DqiCtaLkavndmRTPaAyUk95dUuiVEMhnDm8L7T+03PhVDjtXdy4PQUm61xr/Kw4J
              1VUArbIjzcs+OEGNvq99stThRBvszwNRSWS4kYIur3+ggddrewtL7s+hiAqeK88L
              n6vG4/eSKWJBQwF1001siKf7/QKBgQDsRxXGZkf+yVsuL/hSiadwRdD/OJ1O7gr2
              j8za6izaUX1anXLdPrvtOkdCgEC0Iy6hY0FMi0GWzklpY4SvZuxXlK6QkKB3SCE9
              E8RuOSFLouuaxgiau8MnAEUTkInTC+9foOa8znuOGC0JmzztlFf7P7CF8PoNTb4n
              x4a9dQSE6wKBgAjPfgWT1KEksIDvqG80KY6JCbqf0ChfOGyEhCf/7YSM0lNKRyXL
              VOMmky507BsPp7/zVNxCbWtwCs7+fMSITkn2/sHi2R6IJH7/ThQLGz6HG0eG+cTA
              Ff/Da+VKfiCNcgC2c+MsYaCjblbomNX/0dQhPTyxeJeJ2AyuN1fc3c71AoGBAIA2
              tsc5e3nz9AmlOEA5uGWBTT8hjqNlIwfW0pg8mOhDbh188PbD8yBxDng0tmfJ66Ti
              Am4x5v6ZpFaPDVJNLJT99pg2Ew2HU5ocHuydDcdIekc7jTHCD80bJWDPfyrKADRJ
              UMxF0+AwmEftOGvHotKRJg4YzOfpNvXJHQGz/SbPAoGAALJa010eqPHuZKQxpW4z
              4dpt1Fr16cbLnmIk16zxnvPbPJeCtEx8IkwgLIWP6zPOESIGBTslGMq6xIgYaOXZ
              G8S+fLF3J9sfE2gCJR1JSBXdlyWmcKJdyvhRt168hxVW1N4uHJ2KBA3vUhC/kRvh
              3XDCWsEkXqU0KRzt+TkWVOQ=
              -----END PRIVATE KEY-----
            pathfinder_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
            pathfinder_intermediate_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
          # rejectUnauthorized should be true in production
          rejectUnauthorized: false
          # The following paths are all relative to this directory containing the values file
          client_cert_path: '/opt/als-oracle-pathfinder/secrets/client_cert.pem'
          client_key_path: '/opt/als-oracle-pathfinder/secrets/client_key.pem'
          root_cert_path: '/opt/als-oracle-pathfinder/secrets/pathfinder_cert.pem'
          # Intermediate cert is optional, but will likely be required for mutual auth if
          # rejectUnauthorized is true, as Neustar's certificate doesn't seem to have been signed by any
          # certs in the Mozilla bundle, which is used by Node as default.
          intermediate_cert_path: '/opt/als-oracle-pathfinder/secrets/pathfinder_intermediate_cert.pem'

    init:
      enabled: true
      waitForMysql:
        name: wait-for-mysql
        repository: mysql
        tag: latest
        pullPolicy: Always
        command: "until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
      initMysql:
        centralLedger:
          name: init-central-ledger-mysql
          repository: mojaloop/als-oracle-pathfinder
          tag: latest
          pullPolicy: Always
          command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -e "SET @service_name='$service_name'; source /opt/als-oracle-pathfinder/init-central-ledger.sql;";
        accountLookup:
          name: init-account-lookup-mysql
          repository: mojaloop/als-oracle-pathfinder
          tag: latest
          pullPolicy: Always
          command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password $db_database -e "SET @service_name='$service_name'; source /opt/als-oracle-pathfinder/init-account-lookup.sql;";
      populateMysql:
        name: populate-mysql-tables
        repository: mysql
        tag: latest
        pullPolicy: Always
        command: "echo 'Nothing configured to be populated. Continuing...';"
    service:
      type: ClusterIP
      name: http-api
      port: 80

      annotations: {}

      # This allows one to point the service to an external backend.
      # This is useful for local development where one wishes to hijack
      # the communication from the service to the node layer and point
      # to a specific endpoint (IP, Port, etc).
      external:
        enabled: false
        # 10.0.2.2 is the magic IP for the host on virtualbox's network
        ip: 10.0.2.2
        ports:
          provisioning:
            name: http-api
            externalPort: 3000

    ingress:
      enabled: true
      externalPath: /
      # Used to create an Ingress record.
      hosts:
        api: als-oracle-pathfinder.local
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: '/'
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
    #  cpu: 100m
    #  memory: 128Mi

  mysql:
    enabled: true
    nameOverride: "account-lookup-mysql"
    # Default values for Percona XtraDB Cluster

    ## percona image and version
    ## ref: https://hub.docker.com/r/percona/percona-xtradb-cluster/tags/
    image:
      repository: "percona/percona-xtradb-cluster"
      tag: "5.7.19"
      pullPolicy: Always

    # Desired number of members of xtradb cluster
    replicas: 1

    ## Specify password for root user
    ##
    # mysqlRootPassword: not-a-secure-password

    ## Specify password for xtradb backup user
    ##
    # xtraBackupPassword: replicate-my-data

    ## Uncomment to create a database user
    ##
    mysqlUser: account_lookup
    mysqlPassword: OdonPianoX

    ## Allow unauthenticated access, uncomment to enable
    ##
    # mysqlAllowEmptyPassword: true

    ## Uncomment to Create a database
    ##
    mysqlDatabase: account_lookup

    ## hosts to allow root user access from
    # set to "127.0.0.1" to deny remote root.
    allowRootFrom: "%"

    ## Persist data to a persitent volume
    persistence:
      enabled: false
      ## percona data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessMode: ReadWriteOnce
      size: 8Gi

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## Pod annotations
    ## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Tolerations labels for pod assignment
    ## Allow the scheduling on tainted nodes (requires Kubernetes >= 1.6)
    ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []

    ## Configure resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    # resources:
    #  requests:
    #    memory: 256Mi
    #    cpu: 100m

    ## Configure the following values below if required
    #   performance_schema=ON
    #   max_connections=999
    #   max_user_connections=999
    #   thread_cache_size=999
    configFiles:
      node.cnf: |+
        [mysqld]
        datadir=/var/lib/mysql
        default_storage_engine=InnoDB
        binlog_format=ROW
        innodb_flush_log_at_trx_commit  = 0
        innodb_flush_method             = O_DIRECT
        innodb_file_per_table           = 1
        innodb_autoinc_lock_mode=2
        bind_address = 0.0.0.0
        wsrep_slave_threads=2
        wsrep_cluster_address=gcomm://
        wsrep_provider=/usr/lib/galera3/libgalera_smm.so
        wsrep_cluster_name=galera
        wsrep_sst_method=xtrabackup-v2
        pxc_strict_mode=DISABLED
        max_connections=999
        max_user_connections=994
        thread_cache_size=999
    ## When set to true will create sidecar for `prom/mysqld-exporter`
    ## metrics exporting
    metricsExporter:
      enabled: true

    ## When set to true will create sidecar to tail mysql log
    logTail: true

    service:
      type: ClusterIP
      port: 3306
      externalIPs: []

quoting-service:
  # Declare variables to be passed into your templates.
  replicaCount: 1
  image:
    repository: mojaloop/quoting-service
    tag: v8.7.0-snapshot
    pullPolicy: Always

  readinessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  livenessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  config:
    ## DB Configuration
    # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
    db_type: 'mysql'
    # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
    db_driver: 'mysql'
    db_host: '$release_name-centralledger-mysql'
    db_port: 3306
    db_user: central_ledger
    db_password: oyMxgZChuu
    db_database: central_ledger
    db_connection_pool_min: 10
    db_connection_pool_max: 30
    db_acquire_timeout_millis: 30000
    db_create_timeout_millis: 30000
    db_destroy_timeout_millis: 5000
    db_idle_timeout_millis: 30000
    db_reap_interval_millis: 1000
    db_create_retry_interval_millis: 200
    db_debug: false
    simple_routing_mode_enabled: true
    log_level: 'info'
    log_transport: 'file'
    
    # A comma-separated list of events that should return immediately instead of waiting for the event promises to resolve
    # Any combination of: `log,audit,trace`
    event_async_override: ''
    
    ## Kafka Configuration (used for sidecar)
    # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
    kafka_host: '$release_name-kafka'
    kafka_port: 9092
    
    error_handling:
      include_cause_extension: false
      truncate_extensions: true

  sidecar:
    enabled: true
    image:
      repository: mojaloop/event-sidecar
      tag: v8.7.3
      pullPolicy: Always
    readinessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 15
    livenessProbe:
      enabled: true
      initialDelaySeconds: 90
      periodSeconds: 15
    config:
      event_logger_grpc_host: localhost
      event_logger_grpc_port: 50051
      log_level: info

  init:
    enabled: true
    mysql:
      name: wait-for-mysql
      repository: mysql
      tag: latest
      pullPolicy: Always
      command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"

  service:
    type: ClusterIP
    ports:
      api:
        name: http-api
        externalPort: 80
        internalPort: 3002

    annotations: {}

    # This allows one to point the service to an external backend.
    # This is useful for local development where one wishes to hijack
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        api:
          name: http-api
          externalPort: 3002

  ingress:
    enabled: true
    externalPath: /
    # Used to create an Ingress record.
    hosts:
      api: quoting-service.local
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: '/'
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

transaction-requests-service:
  # Declare variables to be passed into your templates.
  replicaCount: 1
  image:
    repository: mojaloop/transaction-requests-service
    tag: v8.7.0
    pullPolicy: Always

  readinessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  livenessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15

  ## metric configuration for prometheus instrumentation
  metrics:
    ## flag to enable/disable the metrics end-points
    enabled: false
    config:
      timeout: 5000
      prefix: moja_
      defaultLabels:
        serviceName: transaction-requests

  config:
    central_services_host: '$release_name-centralledger-service'
    central_services_port: 80
    log_level: info
    log_transport: file

  init:
    enabled: false

  service:
    type: ClusterIP
    ports:
      api:
        name: http-api
        externalPort: 80
        internalPort: 4001

    annotations: {}

    # This allows one to point the service to an external backend.
    # This is useful for local development where one wishes to hijack
    # the communication from the service to the node layer and point
    # to a specific endpoint (IP, Port, etc).
    external:
      enabled: false
      # 10.0.2.2 is the magic IP for the host on virtualbox's network
      ip: 10.0.2.2
      ports:
        api:
          name: http-api
          externalPort: 4001

  ingress:
    enabled: true
    externalPath: /
    # Used to create an Ingress record.
    hosts:
      api: transaction-request-service.local
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: '/'
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

simulator:
  # Default values for simulators.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: mojaloop/simulator
    tag: v8.8.0
    pullPolicy: Always

  imagePullSecrets: []
  #  - name: {{replace with credential}}

  metrics:
    enabled: true
    prefix: moja_
    timeout: 5000
    defaultLabels:
      serviceName: simulator

  config:
    ## Set debug level for log output
    LOG_LEVEL: 'info'

    ## Add '$release' into any of the *_SERVICE_ENDPOINT values to include the release name as part of the deployment
    PARTIES_SERVICE_ENDPOINT: 'http://$release_name-account-lookup-service'
    QUOTES_SERVICE_ENDPOINT: 'http://$release_name-quoting-service'
    TRANSFERS_SERVICE_ENDPOINT: 'http://$release_name-ml-api-adapter-service'
    ## Disable the fulfil response callback
    TRANSFERS_FULFIL_RESPONSE_DISABLED: false
    ## Set the fulfil response response information
    TRANSFERS_FULFILMENT: 'XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY'
    TRANSFERS_CONDITION: 'HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks'
    TRANSFERS_ILPPACKET: 'AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19'
    MOCK_JWS_SIGNATURE: 'abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess'

  service:
    type: ClusterIP
    port: 80
    targetPort: http

  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15

  ingress:
    enabled: true
    annotations: {
      "nginx.ingress.kubernetes.io/rewrite-target": "/"
    }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - moja-simulator.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

finance-portal:
  enabled: true
  service:
    type: ClusterIP

  imageCredentials:
      enabled: false
      name: pull-secrets

  JWTKeys:
    # These are example keys, please get valid keys for your deployment
    # The name you assign to each variable will be used as the file name. Using the following examples, three key files will be created:
    # - /opt/finance-portal-backend-service/secrets/first_key.key
    # - /opt/finance-portal-backend-service/secrets/second_key.key
    # - /opt/finance-portal-backend-service/secrets/third_key.key
    first_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
    second_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
    third_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----

  config:
    db_host: '$release_name-centralledger-mysql'
    db_port: '3306'
    db_user: 'central_ledger'
    db_password: 'oyMxgZChuu'
    db_database: 'central_ledger'
    settlementsEndpoint: '$release_name-centralsettlement/v1'
    centralLedgerEndpoint: '$release_name-centralledger-service'
    settlementManagementEndpoint: '$release_name-finance-portal-settlement-management'
    settlementManagementPort: '5000'
    isOauthEnabled: false
    oauthServer: 'https://localhost'
    oauthPort: 9443
    oauthLoginPath: '/oauth2/token'
    oauthTokenValidationPath: '/oauth2/introspect'
    oauthUserInfo: '/oauth2/userinfo'
    oauthTokenRevoke: '/oauth2/revoke'
    oauthClientKey: 'testkey'
    oauthClientSecret: 'testsecret'
    BypassAuth: 'true'
    InsecureCookie: 'false'
    is_populate:
      name: ispopulate
      http:
        endpoint: 'something'
        timeout: 30000
      authentication:
        type: 'basic'
        credentials:
          username: 'admin'
          password: 'admin'
    jasperUser: 'user'
    jasperPassword: 'password'
    report1: "something"
    report2: "something"

  frontend:
    service:
      port: 80
    image:
      repository: mojaloop/finance-portal-ui
      tag: v8.8.1
      pullPolicy: Always
      port: 80
    ingress:
      enabled: true
      externalPath: /(.*)
      hosts: 
        api: finance-portal.local
      annotations:
        kubernetes.io/ingress.class: nginx
        ## NGINX Ingres Control < v0.22-
        nginx.ingress.kubernetes.io/rewrite-target: /
        ## NGINX Ingres Control >= v0.22+
        # nginx.ingress.kubernetes.io/rewrite-target: /$1

  backend:
    service:
      port: 3000
    image:
      repository: mojaloop/finance-portal-backend-service
      tag: v8.8.5
      pullPolicy: Always
      port: 3000
    init:
      enabled: false
      image:
        repository: mojaloop/finance-portal-backend-service
        tag: v8.8.0
        pullPolicy: Always
    env: 'dev'
    ingress:
      enabled: false
      externalPath: /admin-portal-backend/(.*)
      hosts: 
        api: finance-portal.local
      annotations:
        kubernetes.io/ingress.class: nginx
        ## NGINX Ingres Control < v0.22-
        nginx.ingress.kubernetes.io/rewrite-target: /
        ## NGINX Ingres Control >= v0.22+
        # nginx.ingress.kubernetes.io/rewrite-target: /$1

finance-portal-settlement-management:
  enabled: true
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  # Default values shared by all containers
  config:
    db_protocol: 'mysql'
    db_host: '$release_name-centralledger-mysql'
    db_port: '3306'
    db_user: 'central_ledger'
    db_password: 'oyMxgZChuu'
    db_database: 'central_ledger'

  service:
    type: ClusterIP

  imageCredentials:
    name: pull-secrets

  # Default values for operator-settlement
  operatorSettlement:
    image:
      repository: mojaloop/operator-settlement
      tag: v8.8.0
      pullPolicy: Always

    service:
      port: 80

    init:
      enabled: true
      image:
        repository: mojaloop/operator-settlement
        tag: v8.8.0
        pullPolicy: Always
      command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database < /opt/operator-settlement/init.sql

    ingress:
      enabled: false
      externalPath: /
      hosts:
        api: operator-settlement.local
      annotations:
        kubernetes.io/ingress.class: nginx
        ## NGINX Ingres Control < v0.22-
        nginx.ingress.kubernetes.io/rewrite-target: /
        ## NGINX Ingres Control >= v0.22+
        # nginx.ingress.kubernetes.io/rewrite-target: /$1
        # kubernetes.io/tls-acme: "true"
      tls:

  # Default values for settlement-management
  settlementManagement:
    image:
      repository: mojaloop/settlement-management
      tag: v8.8.1
      pullPolicy: Always

    service:
      port: 5000

    init:
      enabled: true
      image:
        repository: mojaloop/settlement-management
        tag: latest
        pullPolicy: Always
      command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database < /opt/settlement-management/init.sql

    config:
      CENTRAL_LEDGER_SERVICE_NAME: '$release_name-centralledger-service'
      CENTRAL_LEDGER_SERVICE_ADMIN_PORT: '80'
      SETTLEMENTS_SERVICE_NAME: '$release_name-centralsettlement'
      SETTLEMENTS_SERVICE_PORT: '80'
      MIN_WINDOW_AGE_MS: '5000'
      OPERATOR_SETTLEMENTS_SERVICE_NAME: '$release_name-finance-portal-settlement-management'
      OPERATOR_SETTLEMENTS_SERVICE_PORT: '80'
    ingress:
      enabled: false
      externalPath: /
      hosts:
        api: settlement-management.local
      annotations:  
        kubernetes.io/ingress.class: nginx
        ## NGINX Ingres Control < v0.22-
        nginx.ingress.kubernetes.io/rewrite-target: /
        ## NGINX Ingres Control >= v0.22+
        # nginx.ingress.kubernetes.io/rewrite-target: /$1
        # kubernetes.io/tls-acme: "true"
      tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

mojaloop-bulk:
  enabled: false

  bulk-api-adapter:

    bulk-api-adapter-service:
      enabled: true
      # Default values for bulk-api-adapter.
      # This is a YAML-formatted file.
      # Declare variables to be passed into your templates.
      replicaCount: 1
      image:
        repository: mojaloop/bulk-api-adapter
        tag: v8.8.0-snapshot
        command: '["node", "src/api/index.js"]'
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
        ##
        #  imagePullSecrets:
        #    - name: myregistrykey
        pullPolicy: Always

      init:
        enabled: true
        image:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        mongodb:
          name: wait-for-mongodb
          repository: bitnami/mongodb
          tag: latest
          pullPolicy: Always
          command: "mongo $mongouri --eval \"db.adminCommand('ping')\""

      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true
        config:
          timeout: 5000
          prefix: moja_
          defaultLabels:
            serviceName: bulk-service

      config:
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092
        central_services_host: '$release_name-centralledger-service'
        central_services_port: 80
        security:
          callback:
            rejectUnauthorized: true
        log_level: 'info'

        ## MongoDB Configuration for Object Store
        objstore_uri: 'mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos'

      service:
        type: ClusterIP
        externalPort: 80
        internalPort: 8088

      ingress:
        enabled: true
        externalPath: /
        # Used to create an Ingress record.
        hosts:
          api: bulk-api-adapter.local

        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    bulk-api-adapter-handler-notification:
      enabled: true
      # Default values for bulk-api-adapter-handler-notification.
      # This is a YAML-formatted file.
      # Declare variables to be passed into your templates.
      replicaCount: 1
      image:
        repository: mojaloop/bulk-api-adapter
        tag: v8.8.0-snapshot
        command: '["node", "src/handlers/index.js", "handler", "--notification"]'
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
        ##
        #  imagePullSecrets:
        #    - name: myregistrykey
        pullPolicy: Always

      init:
        enabled: true
        image:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        mongodb:
          name: wait-for-mongodb
          repository: bitnami/mongodb
          tag: latest
          pullPolicy: Always
          command: "mongo $mongouri --eval \"db.adminCommand('ping')\""

      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true
        config:
          timeout: 5000
          prefix: moja_
          defaultLabels:
            serviceName: bulk-handler-notification

      config:
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092
        central_services_host: '$release_name-centralledger-service'
        central_services_port: 80
        security:
          callback:
            rejectUnauthorized: true
        log_level: 'info'

        ## MongoDB Configuration for Object Store
        objstore_uri: 'mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos'

      service:
        type: ClusterIP
        externalPort: 80
        internalPort: 8088

      ingress:
        enabled: false
        externalPath: /
        # Used to create an Ingress record.
        hosts:
          api: bulk-api-adapter-notification.local

        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

  bulk-centralledger:

    cl-handler-bulk-transfer-prepare:
      enabled: true
      # Default values for centralledger-handler-bulk-transfer-prepare.
      # This is a YAML-formatted file.
      # Declare variables to be passed into your templates.
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--bulkprepare"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true
        config:
          timeout: 5000
          prefix: moja_
          defaultLabels:
            serviceName: central-handler-bulkprepare

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        ## MongoDB Configuration for Object Store
        objstore_disabled: false
        objstore_uri: 'mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos'

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

        ## Node Configuration
        log_level: 'info'

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        mongodb:
          name: wait-for-mongodb
          repository: bitnami/mongodb
          tag: latest
          pullPolicy: Always
          command: "mongo $mongouri --eval \"db.adminCommand('ping')\""

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: false
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-bulkprepare.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    cl-handler-bulk-transfer-fulfil:
      enabled: true
      # Default values for centralledger-handler-bulk-transfer-fulfil.
      # This is a YAML-formatted file.
      # Declare variables to be passed into your templates.
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--bulkfulfil"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true
        config:
          timeout: 5000
          prefix: moja_
          defaultLabels:
            serviceName: central-handler-bulkfulfil

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        ## MongoDB Configuration for Object Store
        objstore_disabled: false
        objstore_uri: 'mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos'

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

        ## Node Configuration
        log_level: 'info'

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        mongodb:
          name: wait-for-mongodb
          repository: bitnami/mongodb
          tag: latest
          pullPolicy: Always
          command: "mongo $mongouri --eval \"db.adminCommand('ping')\""

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: false
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-bulkfulfil.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    cl-handler-bulk-transfer-processing:
      enabled: true
      # Default values for centralledger-handler-bulk-transfer-processing.
      # This is a YAML-formatted file.
      # Declare variables to be passed into your templates.
      replicaCount: 1
      containers:
        api:
          image:
            repository: mojaloop/central-ledger
            tag: v8.8.2
            pullPolicy: Always
            command: '["node", "src/handlers/index.js", "handler", "--bulkprocessing"]'
          service:
            ports:
              api:
                name: http-api
                externalPort: 80
                internalPort: 3001
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15

      ## metric configuration for prometheus instrumentation
      metrics:
        ## flag to enable/disable the metrics end-points
        enabled: true
        config:
          timeout: 5000
          prefix: moja_
          defaultLabels:
            serviceName: central-handler-bulkprocessing

      config:
        ## Forensic Logging sidecar
        # this is for Forensic Logging Sidecar
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678

        error_handling:
          include_cause_extension: false
          truncate_extensions: true

        ## DB Configuration
        # db_type can either be 'postgres' or 'mysql'. Ensure the correct DB is enabled and configured below: postgresql.enabled or mysql.enabled
        db_type: 'mysql'
        # db_driver can either be 'pg' or 'mysql'. Ensure the correct corresponding db_type above has been set.
        db_driver: 'mysql'
        db_host: '$release_name-centralledger-mysql'
        db_port: 3306
        db_user: central_ledger
        db_password: oyMxgZChuu
        db_database: central_ledger
        db_connection_pool_min: 10
        db_connection_pool_max: 30
        db_acquire_timeout_millis: 30000
        db_create_timeout_millis: 30000
        db_destroy_timeout_millis: 5000
        db_idle_timeout_millis: 30000
        db_reap_interval_millis: 1000
        db_create_retry_interval_millis: 200
        db_debug: false

        ## MongoDB Configuration for Object Store
        objstore_disabled: false
        objstore_uri: 'mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos'

        ## Kafka Configuration
        # this can be set if the dependency chart for kafka is disabled. If 'kafka_host' is commented out, then the name of the dependency chart will be used.
        kafka_host: '$release_name-kafka'
        kafka_port: 9092

        ## Node Configuration
        log_level: 'info'

      init:
        enabled: true
        kafka:
          name: wait-for-kafka
          repository: solsson/kafka
          tag: latest
          pullPolicy: Always
          command: "until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port; do echo waiting for Kafka; sleep 2; done;"
          env: {}
          ## Env example
          # env:
          #   envItem1:
          #     name: hello
          #     value: world
          #
        psql:
          name: wait-for-postgres
          repository: bowerswilkins/awaitpostgres
          tag: latest
          pullPolicy: Always
        mysql:
          name: wait-for-mysql
          repository: mysql
          tag: latest
          pullPolicy: Always
          command: "until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        mongodb:
          name: wait-for-mongodb
          repository: bitnami/mongodb
          tag: latest
          pullPolicy: Always
          command: "mongo $mongouri --eval \"db.adminCommand('ping')\""

      service:
        type: ClusterIP

        annotations: {}

        # This allows one to point the service to an external backend.
        # This is useful for local development where one wishes to hijack
        # the communication from the service to the node layer and point
        # to a specific endpoint (IP, Port, etc).
        external:
          enabled: false
          # 10.0.2.2 is the magic IP for the host on virtualbox's network
          ip: 10.0.2.2
          ports:
            api:
              name: http-api
              externalPort: 3001

      ingress:
        enabled: false
        type: http
        externalPath:
          api: /
        # Used to create an Ingress record.
        hosts:
          api: central-ledger-transfer-bulkprocessing.local
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: '/'
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        tls:
        # Secrets must be manually created in the namespace.
        # - secretName: chart-example-tls
        #   hosts:
        #     - chart-example.local
      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

  # Declare variables to be passed into your templates.
  mongodb:
    ## Global Docker image registry
    ## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value
    ##
    # global:
    #   imageRegistry:
    enabled: true
    nameOverride: centralledger-obj

    image:
      ## Bitnami MongoDB registry
      ##
      registry: docker.io
      ## Bitnami MongoDB image name
      ##
      repository: bitnami/mongodb
      ## Bitnami MongoDB image tag
      ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/
      ##
      tag: 4.0.3

      ## Specify a imagePullPolicy
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: Always
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistrKeySecretName

    ## Enable authentication
    ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
    #
    usePassword: true
    # existingSecret: name-of-existing-secret

    ## MongoDB admin password
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
    ##
    mongodbRootPassword: adminpass

    ## MongoDB custom user and database
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
    ##
    mongodbUsername: mojaloop
    mongodbPassword: password
    mongodbDatabase: mlos


    ## Whether enable/disable IPv6 on MongoDB
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-ipv6
    ##
    mongodbEnableIPv6: true

    ## MongoDB additional command line flags
    ##
    ## Can be used to specify command line flags, for example:
    ##
    ## mongodbExtraFlags:
    ##  - "--wiredTigerCacheSizeGB=2"
    mongodbExtraFlags: []

    ## Pod Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    ##
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001

    ## Kubernetes Cluster Domain
    clusterDomain: cluster.local

    ## Kubernetes service type
    service:
      annotations: {}
      type: ClusterIP
      # clusterIP: None
      port: 27017

      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:

    ## Setting up replication
    ## ref: https://github.com/bitnami/bitnami-docker-mongodb#setting-up-a-replication
    #
    replicaSet:
      ## Whether to create a MongoDB replica set for high availability or not
      enabled: false
      useHostnames: true

      ## Name of the replica set
      ##
      name: rs0

      ## Key used for replica set authentication
      ##
      # key: key

      ## Number of replicas per each node type
      ##
      replicas:
        secondary: 1
        arbiter: 1
      ## Pod Disruption Budget
      ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
      pdb:
        minAvailable:
          primary: 1
          secondary: 1
          arbiter: 1

    # Annotations to be added to MongoDB pods
    podAnnotations: {}

    # Additional pod labels to apply
    podLabels: {}

    ## Configure resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 256Mi

    ## Node selector
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    nodeSelector: {}

    ## Affinity
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

    ## Tolerations
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations: []

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      enabled: false
      ## A manually managed Persistent Volume and Claim
      ## Requires persistence.enabled: true
      ## If defined, PVC must be created manually before volume will be bound
      # existingClaim:

      ## mongodb data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessModes:
        - ReadWriteOnce
      size: 8Gi
      annotations: {}

    ## Configure extra options for liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

    # Entries for the MongoDB config file
    configmap:
    #  # Where and how to store data.
    #  storage:
    #    dbPath: /opt/bitnami/mongodb/data/db
    #    journal:
    #      enabled: true
    #    #engine:
    #    #wiredTiger:
    #  # where to write logging data.
    #  systemLog:
    #    destination: file
    #    logAppend: true
    #    path: /opt/bitnami/mongodb/logs/mongodb.log
    #  # network interfaces
    #  net:
    #    port: 27017
    #    bindIp: 0.0.0.0
    #    unixDomainSocket:
    #      enabled: true
    #      pathPrefix: /opt/bitnami/mongodb/tmp
    #  # replica set options
    #  #replication:
    #  #  replSetName: replicaset
    #  # process management options
    #  processManagement:
    #     fork: false
    #     pidFilePath: /opt/bitnami/mongodb/tmp/mongodb.pid
    #  # set parameter options
    #  setParameter:
    #     enableLocalhostAuthBypass: true
    #  # security options
    #  security:
    #  authorization: enabled
    #keyFile: /opt/bitnami/mongodb/conf/keyfile

    ## Prometheus Exporter / Metrics
    ##
    metrics:
      enabled: false

      image:
        registry: docker.io
        repository: forekshub/percona-mongodb-exporter
        tag: latest
        pullPolicy: IfNotPresent
        ## Optionally specify an array of imagePullSecrets.
        ## Secrets must be manually created in the namespace.
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        ##
        # pullSecrets:
        #   - myRegistrKeySecretName

      ## Metrics exporter resource requests and limits
      ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
      ##
      # resources: {}

      ## Metrics exporter pod Annotation
      podAnnotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9216"

      ## Prometheus Service Monitor
      ## ref: https://github.com/coreos/prometheus-operator
      ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md
      serviceMonitor:
        ## If the operator is installed in your cluster, set to true to create a Service Monitor Entry
        enabled: false
        ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Service Monitors to work with
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
        additionalLabels: {}

        ## Specify Metric Relabellings to add to the scrape endpoint
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        # relabellings:

        alerting:
          ## Define individual alerting rules as required
          ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#rulegroup
          ##      https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
          rules: {}

          ## Used to pass Labels that are used by the Prometheus installed in your cluster to select Prometheus Rules to work with
          ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    additionalLabels: {}

