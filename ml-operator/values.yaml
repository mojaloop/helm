nodeSelector: {}
affinity: {}
tolerations: {}

ml-operator:
  enabled: true
  image: mojaloop/ml-operator:v0.1.6
  env:
    NODE_ENV:
      name: NODE_ENV
      value: production
    LOG_LEVEL:
      name: LOG_LEVEL
      value: info
    ## Env example
    # env:
    #   envItem1:
    #     name: hello
    #     value: world
    #
    # SLACK_WEBHOOK_URL env is set on the template, since we need to load
    # in the value from a secret, and don't want to expose it in our values.yaml

  # Change this to any secret that has `SLACK_WEBHOOK_URL` set.
  # see README.md for more information about setting up this secret
  secret-name: ml-operator-secrets
  config:
    production.json: {
        "SERVICES": [
          "account-lookup-service",
          "auth-service",
          "central-ledger",
          "nginx-ingress-nginx-controller",
          "quoting-service",
          "transaction-requests-service"
        ],
        "UPGRADE_STRATEGY": "BUGFIX",
        "CHECK_FOR_UPDATE_CRON": "0 * * * *",
        "SLACK_WEBHOOK_URL": "__PRIVATE__",
        "IMAGE_WATCHER_CLIENT_URL": "http://localhost:4006",
        "SHOULD_USE_DEFAULT_K8S": false,
        "NOTIFY_KUBECTL_PATCH_INSTRUCTIONS": true
      }

image-watcher:
  enabled: true
  image: mojaloop/image-watcher:v0.1.3
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 4006
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 4006
  env:
    NODE_ENV:
      name: NODE_ENV
      value: production
  service:
    port: 4006

  config:
    production.json: {
        "PORT": 4006,
        "HOST": "0.0.0.0",
        "REDIS": {
          "PORT": 6379,
          "HOST": "localhost",
          "TIMEOUT": 100
        },
        "INSPECT": {
          "DEPTH": 4,
          "SHOW_HIDDEN": false,
          "COLOR": true
        },
        "IMAGES": [
          "mojaloop/account-lookup-service",
          "mojaloop/central-ledger",
          "mojaloop/ml-api-adapter",
          "mojaloop/auth-service",
          "mojaloop/transaction-requests-service",
          "mojaloop/quoting-service",
          "mojaloop/thirdparty-api-adapter"
        ],
        "SCRAPE_TIME_MS": 30000
      }

  ingress:
    enabled: true
    ## @param ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion:
    ## @param ingress.hostname Default host for the ingress record
    ##
    hostname: image-watcher.local
    ## @param servicePort : port for the service
    ##
    servicePort: 4006
    ## @param ingress.path Default path for the ingress record
    ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
    path: /
    ## @param ingress.annotations Additional custom annotations for the ingress record
    ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
    ##
    annotations:
    ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
    ## You can:
    ##   - Use the `ingress.secrets` parameter to create this TLS secret
    ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
    ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
    ##
    tls: false
    ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
    ##
    certManager: false
    ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: transfer-api-svc.local
    ##     path: /
    ##
    extraHosts:
    extraPaths:
    extraTls:
    secrets:
    className: "nginx"


redis:
  enabled: true
  image: redis:5.0.4-alpine
  env: {}
    ## Env example
    # env:
    #   envItem1:
    #     name: hello
    #     value: world

  # service:
  #   port: 6379
