apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-operator
  labels:
    app: ml-operator
    app.kubernetes.io/name: ml-operator
    {{- include "ml-operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # exeed the replicas by 1 pod
  selector:
    matchLabels:
      {{- include "ml-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ml-operator.labels" . | nindent 6 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: mojaloop-operator
      containers:
        {{- if .Values.ml-operator.enabled }}
        - name: ml-operator
          image: {{.Values.ml-operator.image }}}}
          # command: [ "tail", "-f", "/dev/null" ]
          volumeMounts:
            - name: ml-operator-config-volume
              mountPath: /opt/ml-operator/config
          env:
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: ml-operator-secrets
                  key: SLACK_WEBHOOK_URL
          {{- range $envItem := .Values.ml-operator.env }}
            - name: {{ $envItem.name }}
              value: {{ $envItem.value }}
          {{- end }}
        {{- end }}
        {{- if .Values.image-watcher.enabled }}
        - name: image-watcher
          image: {{.Values.image-watcher.image }}}}
          # command: [ "tail", "-f", "/dev/null" ]
          volumeMounts:
            - name: image-watcher-config-volume
              mountPath: /opt/image-watcher/config
          {{- if .Values.image-watcher.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: 30
            httpGet: {{ .Values.image-watcher.livenessProbe.httpGet }}
          {{- end }}
          {{- if .Values.image-watcher.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: 30
            httpGet: {{ .Values.image-watcher.readinessProbe.httpGet }}
          {{- end }}
          env:
          {{- range $envItem := .Values.image-watcher.env }}
            - name: {{ $envItem.name }}
              value: {{ $envItem.value }}
          {{- end }}
        {{- end }}
        {{- if .Values.redis.enabled }}
        - name: redis
          image: {{.Values.redis.image }}}}
          {{- end }}
          env:
          {{- range $envItem := .Values.redis.env }}
            - name: {{ $envItem.name }}
              value: {{ $envItem.value }}
          {{- end }}
        {{- end }}
      volumes:
        - name: ml-operator-config-volume
          configMap:
            name: ml-operator-config
            items:
              {{- range $k, $v := .Values.ml-operator.config }}
              - key: {{ $k }}
                path: {{ $k }}
              {{- end }}
        - name: image-watcher-config-volume
          configMap:
            name: image-watcher-config
            items:
              {{- range $k, $v := .Values.image-watcher.config }}
              - key: {{ $k }}
                path: {{ $k }}
              {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-operator-config
  labels:
    app: ml-operator
    app.kubernetes.io/name: ml-operator
    {{- include "ml-operator.labels" . | nindent 4 }}
data:
  production.json: {{ (.Files.Get "configs/ml-operator.json") | quote }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: image-watcher-config
  labels:
    app: ml-operator
    app.kubernetes.io/name: ml-operator
    {{- include "ml-operator.labels" . | nindent 4 }}
data:
  production.json: {{ (.Files.Get "configs/image-watcher.json") | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: image-watcher
  labels:
    app: ml-operator
    app.kubernetes.io/name: ml-operator
    {{- include "ml-operator.labels" . | nindent 4 }}
spec:
  ports:
  - port: {{ .Values.image-watcher.service.port }}
  selector:
    app: image-watcher
  clusterIP: None
---
{{- if .Values.image-watcher.ingress.enabled }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: image-watcher
  labels:
    app: ml-operator
    app.kubernetes.io/name: ml-operator
    {{- include "ml-operator.labels" . | nindent 4 }}
  annotations: {{ .Values.image-watcher.ingress.annotations }}
spec:
  rules:
    - http:
        paths:
          - path: 
            backend: {{ .Values.image-watcher.service.path }}
              serviceName: image-watcher
              servicePort: {{ .Values.image-watcher.ingress.port }}
{{- end }}