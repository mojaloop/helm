apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-watcher
  labels:
    app: image-watcher
    app.kubernetes.io/name: image-watcher
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # exeed the replicas by 1 pod
  selector:
    matchLabels:
      app: image-watcher
  template:
    metadata:
      labels:
        app: image-watcher
    spec:
      containers:
        - name: image-watcher
          image: mojaloop/image-watcher:v0.1.3
          # command: [ "tail", "-f", "/dev/null" ]
          volumeMounts:
            - name: image-watcher-config-volume
              mountPath: /opt/image-watcher/config
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: 4006
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /health
              port: 4006
          env:
            - name: NODE_ENV
              value: production
      volumes:
        - name: image-watcher-config-volume
          configMap:
            name: image-watcher-config
            items:
            - key: production.json
              path: production.json
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: image-watcher-config
data:
  production.json: {{ (.Files.Get "configs/image-watcher.json") | quote }}
---
---
apiVersion: v1
kind: Service
metadata:
  name: image-watcher
spec:
  ports:
  - port: 4006
  selector:
    app: image-watcher
  clusterIP: None
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: image-watcher
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - http:
        paths:
          - path: /image-watcher(/|$)(.*)
            backend:
              serviceName: image-watcher
              servicePort: 4006
