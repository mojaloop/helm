apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: 2a9ab4a5432825504d910f022638674ce88eaefe9f9f595ad8bc107377d104fb
      checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
      checksum/scripts: bdec350b84a1ace7cc118db113a21c9f160bde3425b07714e1c0c1da722621cf
      checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: auth-svc-redis-master-
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: auth-svc-redis
      app.kubernetes.io/version: 7.4.2
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: auth-svc-redis-master-77b7785dd4
      helm.sh/chart: auth-svc-redis-20.11.4
      statefulset.kubernetes.io/pod-name: auth-svc-redis-master-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/configmap: {}
            f:checksum/health: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8572cb30-9626-44da-a5f3-4ddc729e8800"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_REPLICATION_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/health"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/mounted-etc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/scripts/start-scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"health"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"start-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.223"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:46Z"
    name: auth-svc-redis-master-0
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: auth-svc-redis-master
      uid: 8572cb30-9626-44da-a5f3-4ddc729e8800
    resourceVersion: "250271353"
    uid: 0ab238a8-b929-477a-8503-28226cc01862
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: master
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: auth-svc-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - -c
      - /opt/bitnami/scripts/start-scripts/start-master.sh
      command:
      - /bin/bash
      env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: REDIS_REPLICATION_MODE
        value: master
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT
        value: "6379"
      image: docker.io/bitnami/redis:7.4.2-debian-12-r6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/scripts/start-scripts
        name: start-scripts
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/mounted-etc
        name: config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: auth-svc-redis-master-0
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: auth-svc-redis-master
    serviceAccountName: auth-svc-redis-master
    subdomain: auth-svc-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: auth-svc-redis-scripts
      name: start-scripts
    - configMap:
        defaultMode: 493
        name: auth-svc-redis-health
      name: health
    - configMap:
        defaultMode: 420
        name: auth-svc-redis-configuration
      name: config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80548280d2bd1471fd790f4cf5daf95a1a76819b582f4e50ce3415e73423a8ce
      image: docker.io/bitnami/redis:7.4.2-debian-12-r6
      imageID: docker.io/bitnami/redis@sha256:6a5b1d0b594272835139b5200579228b82e052b03266835667947a6b76b2a92e
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:24Z"
      volumeMounts:
      - mountPath: /opt/bitnami/scripts/start-scripts
        name: start-scripts
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/mounted-etc
        name: config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.223
    podIPs:
    - ip: 10.1.6.223
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: cl-mongodb-dcb77d94b-
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cl-mongodb
      app.kubernetes.io/version: 8.0.6
      helm.sh/chart: cl-mongodb-16.4.9
      pod-template-hash: dcb77d94b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"23f5d62c-e1b1-4b04-b3e4-ea13460dcf9d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"mongodb"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_IPV6"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_EXTRA_DATABASES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_EXTRA_PASSWORDS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MONGODB_EXTRA_USERNAMES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ROOT_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MONGODB_ROOT_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":27017,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/.mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/bitnami/mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/bitnami/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/mongodb/conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/mongodb/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/mongodb/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"log-dir"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/bitnami/mongodb/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"common-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"datadir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.75"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:26Z"
    name: cl-mongodb-dcb77d94b-f6nk9
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cl-mongodb-dcb77d94b
      uid: 23f5d62c-e1b1-4b04-b3e4-ea13460dcf9d
    resourceVersion: "250271185"
    uid: 48bbb44f-7205-4c95-87f8-12fc3accef95
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: mongodb
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: cl-mongodb
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MONGODB_EXTRA_USERNAMES
        value: mojaloop
      - name: MONGODB_EXTRA_DATABASES
        value: mlos
      - name: MONGODB_EXTRA_PASSWORDS
        valueFrom:
          secretKeyRef:
            key: mongodb-passwords
            name: cl-mongodb
      - name: MONGODB_ROOT_USER
        value: root
      - name: MONGODB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mongodb-root-password
            name: cl-mongodb
      - name: ALLOW_EMPTY_PASSWORD
        value: "no"
      - name: MONGODB_SYSTEM_LOG_VERBOSITY
        value: "0"
      - name: MONGODB_DISABLE_SYSTEM_LOG
        value: "no"
      - name: MONGODB_DISABLE_JAVASCRIPT
        value: "no"
      - name: MONGODB_ENABLE_JOURNAL
        value: "yes"
      - name: MONGODB_PORT_NUMBER
        value: "27017"
      - name: MONGODB_ENABLE_IPV6
        value: "no"
      - name: MONGODB_ENABLE_DIRECTORY_PER_DB
        value: "no"
      - name: EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU
        value: "1"
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imagePullPolicy: IfNotPresent
      name: mongodb
      ports:
      - containerPort: 27017
        name: mongodb
        protocol: TCP
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/mongodb/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/mongodb/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /.mongodb
        name: empty-dir
        subPath: mongosh-home
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /bitnami/scripts
        name: common-scripts
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - -ec
      - |
        ln -sf /dev/stdout "/opt/bitnami/mongodb/logs/mongodb.log"
      command:
      - /bin/bash
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imagePullPolicy: IfNotPresent
      name: log-dir
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
        subPath: app-logs-dir
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: cl-mongodb
    serviceAccountName: cl-mongodb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: empty-dir
    - configMap:
        defaultMode: 360
        name: cl-mongodb-common-scripts
      name: common-scripts
    - emptyDir: {}
      name: datadir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a14b5566535df03971df4a781320cde9fef1e3518ce5037f5b2b51c7e06ffe96
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imageID: docker.io/bitnami/mongodb@sha256:962c731a4c6ea63eadfa40de9805a8ddd7f42319b59a15fe9bda4692c31828ac
      lastState: {}
      name: mongodb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /opt/bitnami/mongodb/conf
        name: empty-dir
      - mountPath: /opt/bitnami/mongodb/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
      - mountPath: /.mongodb
        name: empty-dir
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /bitnami/scripts
        name: common-scripts
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    initContainerStatuses:
    - containerID: containerd://31981d3760aebe540b09712922d238425fbe68fb091a542a9f3beb8ac8f218ae
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imageID: docker.io/bitnami/mongodb@sha256:962c731a4c6ea63eadfa40de9805a8ddd7f42319b59a15fe9bda4692c31828ac
      lastState: {}
      name: log-dir
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://31981d3760aebe540b09712922d238425fbe68fb091a542a9f3beb8ac8f218ae
          exitCode: 0
          finishedAt: "2025-06-25T01:33:25Z"
          reason: Completed
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
    phase: Running
    podIP: 10.1.6.75
    podIPs:
    - ip: 10.1.6.75
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configuration: 75a808969f71d90ba7206f305359c334d43882b4781f7e8e0df68229fc5f4fe3
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: kafka-controller-
    labels:
      app.kubernetes.io/component: controller-eligible
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kafka
      app.kubernetes.io/part-of: kafka
      app.kubernetes.io/version: 3.9.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: kafka-controller-55c5c7f68d
      helm.sh/chart: kafka-31.5.0
      statefulset.kubernetes.io/pod-name: kafka-controller-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/configuration: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5bc8ac52-60c1-4cff-985e-0eb63fe38a6f"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kafka"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_HEAP_OPTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_KRAFT_CLUSTER_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9093,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/kafka"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/kafka/config/server.properties"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/kafka/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"kafka-init"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_MIN_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_VOLUME_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MY_POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/kafka"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/configmaps"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secret-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"kafka-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"kafka-configmaps"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"kafka-secret-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"logs"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tmp"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.153"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:37Z"
    name: kafka-controller-0
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kafka-controller
      uid: 5bc8ac52-60c1-4cff-985e-0eb63fe38a6f
    resourceVersion: "250271260"
    uid: 4aa22c22-c204-4eef-9941-6114f585baec
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: controller-eligible
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: kafka
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: KAFKA_HEAP_OPTS
        value: -Xmx1024m -Xms1024m
      - name: KAFKA_KRAFT_CLUSTER_ID
        valueFrom:
          secretKeyRef:
            key: kraft-cluster-id
            name: kafka-kraft-cluster-id
      image: docker.io/bitnami/kafka:3.9.0-debian-12-r12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - pgrep
          - -f
          - kafka
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka
      ports:
      - containerPort: 9093
        name: controller
        protocol: TCP
      - containerPort: 9092
        name: client
        protocol: TCP
      - containerPort: 9094
        name: interbroker
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: controller
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/kafka
        name: data
      - mountPath: /opt/bitnami/kafka/logs
        name: logs
      - mountPath: /opt/bitnami/kafka/config/server.properties
        name: kafka-config
        subPath: server.properties
      - mountPath: /tmp
        name: tmp
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: kafka-controller-0
    initContainers:
    - args:
      - -ec
      - |
        /scripts/kafka-init.sh
      command:
      - /bin/bash
      env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KAFKA_VOLUME_DIR
        value: /bitnami/kafka
      - name: KAFKA_MIN_ID
        value: "0"
      image: docker.io/bitnami/kafka:3.9.0-debian-12-r12
      imagePullPolicy: IfNotPresent
      name: kafka-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/kafka
        name: data
      - mountPath: /config
        name: kafka-config
      - mountPath: /configmaps
        name: kafka-configmaps
      - mountPath: /secret-config
        name: kafka-secret-config
      - mountPath: /scripts
        name: scripts
      - mountPath: /tmp
        name: tmp
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kafka
    serviceAccountName: kafka
    subdomain: kafka-controller-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kafka-controller-configuration
      name: kafka-configmaps
    - emptyDir: {}
      name: kafka-secret-config
    - emptyDir: {}
      name: kafka-config
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 493
        name: kafka-scripts
      name: scripts
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: logs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6fbfdfe229bd1651bf7c1fa0b487ca2fd5c31d990dfb0850b45cac048440206f
      image: docker.io/bitnami/kafka:3.9.0-debian-12-r12
      imageID: docker.io/bitnami/kafka@sha256:7c91967e7a76eacbc823f951f4c3826ddfd8188ed3cfc99fc9b2fe0d5e89e75b
      lastState: {}
      name: kafka
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /bitnami/kafka
        name: data
      - mountPath: /opt/bitnami/kafka/logs
        name: logs
      - mountPath: /opt/bitnami/kafka/config/server.properties
        name: kafka-config
      - mountPath: /tmp
        name: tmp
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    initContainerStatuses:
    - containerID: containerd://86eca544391a31bb4ef7f20e4a70601edc93f1f6319bc2f7eac4039f13779b4d
      image: docker.io/bitnami/kafka:3.9.0-debian-12-r12
      imageID: docker.io/bitnami/kafka@sha256:7c91967e7a76eacbc823f951f4c3826ddfd8188ed3cfc99fc9b2fe0d5e89e75b
      lastState: {}
      name: kafka-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://86eca544391a31bb4ef7f20e4a70601edc93f1f6319bc2f7eac4039f13779b4d
          exitCode: 0
          finishedAt: "2025-06-25T01:33:24Z"
          reason: Completed
          startedAt: "2025-06-25T01:33:24Z"
      volumeMounts:
      - mountPath: /bitnami/kafka
        name: data
      - mountPath: /config
        name: kafka-config
      - mountPath: /configmaps
        name: kafka-configmaps
      - mountPath: /secret-config
        name: kafka-secret-config
      - mountPath: /scripts
        name: scripts
      - mountPath: /tmp
        name: tmp
    phase: Running
    podIP: 10.1.5.153
    podIPs:
    - ip: 10.1.5.153
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: a331aac30200a5fabffd66ec8e7583cee3d78818c53f1102e2f97efadfb3d86d
      checksum/secret-jws: 19b285bc2fcd27f19711557733c5144f42dc90a16cb086ee6749b49647f35c9a
      prometheus.io/port: "4002"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-account-lookup-service-77756794c7-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: account-lookup-service
      app.kubernetes.io/version: 15.0.0
      helm.sh/chart: account-lookup-service-15.0.0
      pod-template-hash: 77756794c7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret-jws: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4332e2c6-f6e0-4bf4-9991-cc59f80b432b"}: {}
        f:spec:
          f:containers:
            k:{"name":"account-lookup-service"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALS_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"jws-signing-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"moja-account-lookup-service-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.90"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:45Z"
    name: moja-account-lookup-service-77756794c7-fxdr2
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-account-lookup-service-77756794c7
      uid: 4332e2c6-f6e0-4bf4-9991-cc59f80b432b
    resourceVersion: "250273690"
    uid: f2356c80-ba09-453e-9346-0d94d86066b5
  spec:
    containers:
    - command:
      - node
      - src/index.js
      - server
      - --api
      env:
      - name: ALS_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/account-lookup-service:v17.7.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 4002
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: account-lookup-service
      ports:
      - containerPort: 4002
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 4002
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-account-lookup-service-config-volume
      - mountPath: /opt/app/secrets
        name: jws-signing-key
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xrl88
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: account_lookup
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: account_lookup
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xrl88
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: account-lookup-service
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: account-lookup-service
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-account-lookup-service-config
      name: moja-account-lookup-service-config-volume
    - name: jws-signing-key
      secret:
        defaultMode: 420
        secretName: moja-account-lookup-service-jws-signing-key
    - name: kube-api-access-xrl88
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f9e6d9f2420e6fb3be96029e7671d68f8253d3f2a05e48073c672e064690366f
      image: docker.io/mojaloop/account-lookup-service:v17.7.1
      imageID: docker.io/mojaloop/account-lookup-service@sha256:e67dff102dfed117e131986f2ccba6acfddaa322e219780713957c8e060ff22d
      lastState: {}
      name: account-lookup-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-account-lookup-service-config-volume
      - mountPath: /opt/app/secrets
        name: jws-signing-key
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xrl88
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://9846fec38ba2338b6efe50d32f9193c2590a0628c72c90516db8fde8063872c4
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9846fec38ba2338b6efe50d32f9193c2590a0628c72c90516db8fde8063872c4
          exitCode: 0
          finishedAt: "2025-06-25T01:36:42Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xrl88
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.90
    podIPs:
    - ip: 10.1.6.90
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: c963cb354a902d7be91c5f46e29c9db7cba75b6d041bf29ed51bfac676e01e23
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-account-lookup-service-admin-676fd6f675-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: account-lookup-service-admin
      app.kubernetes.io/version: 15.0.0
      helm.sh/chart: account-lookup-service-admin-15.0.0
      pod-template-hash: 676fd6f675
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9023b472-d301-45a6-9fb6-2df4526eef74"}: {}
        f:spec:
          f:containers:
            k:{"name":"account-lookup-service-admin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALS_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"run-migration"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALS_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"ALS_MIGRATIONS__RUN_DATA_MIGRATIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-account-lookup-service-admin-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.14"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:47Z"
    name: moja-account-lookup-service-admin-676fd6f675-thksx
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-account-lookup-service-admin-676fd6f675
      uid: 9023b472-d301-45a6-9fb6-2df4526eef74
    resourceVersion: "250273719"
    uid: c021ea27-8d3c-4be4-894a-475abd9695ac
  spec:
    containers:
    - command:
      - node
      - src/index.js
      - server
      - --admin
      env:
      - name: ALS_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/account-lookup-service:v17.7.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 4001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: account-lookup-service-admin
      ports:
      - containerPort: 4001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 4001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-account-lookup-service-admin-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9nql
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - |
        until mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD}  ${DB_DATABASE} -e 'select version()' ;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: account_lookup
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: account_lookup
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9nql
        readOnly: true
    - command:
      - sh
      - -c
      - npm run migrate
      env:
      - name: ALS_MIGRATIONS__RUN_DATA_MIGRATIONS
        value: "true"
      - name: ALS_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      image: mojaloop/account-lookup-service:v17.7.1
      imagePullPolicy: IfNotPresent
      name: run-migration
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-account-lookup-service-admin-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9nql
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: account-lookup-service-admin
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: account-lookup-service-admin
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-account-lookup-service-admin-config
      name: moja-account-lookup-service-admin-config-volume
    - name: kube-api-access-n9nql
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://82e1d38d0449a08129ab9bdce86c5e50f0d66b74b222b07ff1479b81ced9eb81
      image: docker.io/mojaloop/account-lookup-service:v17.7.1
      imageID: docker.io/mojaloop/account-lookup-service@sha256:e67dff102dfed117e131986f2ccba6acfddaa322e219780713957c8e060ff22d
      lastState: {}
      name: account-lookup-service-admin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:45Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-account-lookup-service-admin-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9nql
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://53d97a57cd35be2df5ad73065fc85fd4bf1f71fec7cbd2a3835a004ff83c3c85
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://53d97a57cd35be2df5ad73065fc85fd4bf1f71fec7cbd2a3835a004ff83c3c85
          exitCode: 0
          finishedAt: "2025-06-25T01:36:38Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9nql
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://465f31aa0f148d78cbea5d25d94601f0f2b5c719af059c3f11e150301a4d2ff7
      image: docker.io/mojaloop/account-lookup-service:v17.7.1
      imageID: docker.io/mojaloop/account-lookup-service@sha256:e67dff102dfed117e131986f2ccba6acfddaa322e219780713957c8e060ff22d
      lastState: {}
      name: run-migration
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://465f31aa0f148d78cbea5d25d94601f0f2b5c719af059c3f11e150301a4d2ff7
          exitCode: 0
          finishedAt: "2025-06-25T01:36:44Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-account-lookup-service-admin-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9nql
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.14
    podIPs:
    - ip: 10.1.6.14
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:40Z"
    generateName: moja-als-msisdn-oracle-69f88fbffd-
    labels:
      app.kubernetes.io/component: als-msisdn-oracle
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: als-msisdn-oracle
      app.kubernetes.io/version: 1.0.0
      helm.sh/chart: als-msisdn-oracle-1.0.0
      pod-template-hash: 69f88fbffd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"af474ef5-d9ed-497a-a7bb-7c0ab106cf39"}: {}
        f:spec:
          f:containers:
            k:{"name":"als-msisdn-oracle"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALS_MSISDN_ORACLE_DATABASE_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/dist/config/default.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"run-migration"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALS_MSISDN_ORACLE_DATABASE_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"NODE_ENV"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/dist/config/default.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"als-msisdn-oracle-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.102"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:48Z"
    name: moja-als-msisdn-oracle-69f88fbffd-npmjd
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-als-msisdn-oracle-69f88fbffd
      uid: af474ef5-d9ed-497a-a7bb-7c0ab106cf39
    resourceVersion: "250273741"
    uid: bac07365-07c7-4708-b531-c847a1f60de4
  spec:
    containers:
    - command:
      - node
      - ./dist/src/cli.js
      env:
      - name: ALS_MSISDN_ORACLE_DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      image: mojaloop/als-msisdn-oracle-svc:v0.0.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: als-msisdn-oracle
      ports:
      - containerPort: 3000
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/dist/config/default.json
        name: als-msisdn-oracle-config-volume
        subPath: default.json
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnvnr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - "until mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD}
        \ ${DB_DATABASE} -e 'select version()' ; \ndo\n  echo --------------------;\n
        \ echo Waiting for MySQL...;\n  sleep 2; \ndone;\necho ====================;
        \necho MySQL ok!;\n"
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: oracle_msisdn
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: oracle_msisdn
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnvnr
        readOnly: true
    - command:
      - sh
      - -c
      - npm run migrate
      env:
      - name: ALS_MSISDN_ORACLE_DATABASE_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: NODE_ENV
        value: production
      image: mojaloop/als-msisdn-oracle-svc:v0.0.14
      imagePullPolicy: IfNotPresent
      name: run-migration
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/dist/config/default.json
        name: als-msisdn-oracle-config-volume
        subPath: default.json
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnvnr
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: als-msisdn-oracle
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: als-msisdn-oracle
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-als-msisdn-oracle-config
      name: als-msisdn-oracle-config-volume
    - name: kube-api-access-mnvnr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6575bb010d065db56064400e445fea84c7b4473e1e5e2c1d52f8385bfb991c93
      image: docker.io/mojaloop/als-msisdn-oracle-svc:v0.0.14
      imageID: docker.io/mojaloop/als-msisdn-oracle-svc@sha256:5c64f4543da581b2db7fd51cadde5a3bfecfd6cc60d53036062e260cb9e449ca
      lastState: {}
      name: als-msisdn-oracle
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:46Z"
      volumeMounts:
      - mountPath: /opt/app/dist/config/default.json
        name: als-msisdn-oracle-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnvnr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://31764f1e932d7252d9789d64030f48822bb933380fe2a63aa13f2ff3c23df2e3
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://31764f1e932d7252d9789d64030f48822bb933380fe2a63aa13f2ff3c23df2e3
          exitCode: 0
          finishedAt: "2025-06-25T01:36:41Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnvnr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://a0c9fe13083d98af881196494c62e1dbc3f9e88e60e9ab953551781c20d5363d
      image: docker.io/mojaloop/als-msisdn-oracle-svc:v0.0.14
      imageID: docker.io/mojaloop/als-msisdn-oracle-svc@sha256:5c64f4543da581b2db7fd51cadde5a3bfecfd6cc60d53036062e260cb9e449ca
      lastState: {}
      name: run-migration
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a0c9fe13083d98af881196494c62e1dbc3f9e88e60e9ab953551781c20d5363d
          exitCode: 0
          finishedAt: "2025-06-25T01:36:46Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /opt/app/dist/config/default.json
        name: als-msisdn-oracle-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mnvnr
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.102
    podIPs:
    - ip: 10.1.6.102
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 985c16d261bb722c9d5eaa5443f56a02c3a6c3488988dd9ba5ab23ea34e8ecf7
      checksum/secret: e1182bad52833e8de30f449da02614c06eca763eba2a618cb088b245c96884d8
    creationTimestamp: "2025-06-25T01:36:38Z"
    generateName: moja-centralledger-handler-admin-transfer-6c694c695b-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-handler-admin-transfer
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-handler-admin-transfer-14.7.0
      pod-template-hash: 6c694c695b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cce75f42-6fde-4113-bfff-878738f76c59"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-handler-admin-transfer"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-handler-admin-transfer-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.189"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:45Z"
    name: moja-centralledger-handler-admin-transfer-6c694c695b-qqjgv
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-handler-admin-transfer-6c694c695b
      uid: cce75f42-6fde-4113-bfff-878738f76c59
    resourceVersion: "250273684"
    uid: 2ca5dcfe-956c-4374-9d64-14bfa2009764
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --admin
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-handler-admin-transfer
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-admin-transfer-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zp278
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zp278
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zp278
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-admin-transfer
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-admin-transfer
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-handler-admin-transfer-config
      name: moja-centralledger-handler-admin-transfer-config-volume
    - name: kube-api-access-zp278
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://40c61360923b894d64d69cfb35f9969f960dccfa263ffba94424ec39159ee62d
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-handler-admin-transfer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-admin-transfer-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zp278
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://6b28efdcffb8c8492421913ce77af25183876c67cb0cbecd01c71c9bcaf1649a
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6b28efdcffb8c8492421913ce77af25183876c67cb0cbecd01c71c9bcaf1649a
          exitCode: 0
          finishedAt: "2025-06-25T01:36:41Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zp278
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d71281137febafb27f2ced7a65b912b8191f457be8aee4538189a1c91e197b90
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d71281137febafb27f2ced7a65b912b8191f457be8aee4538189a1c91e197b90
          exitCode: 0
          finishedAt: "2025-06-25T01:36:42Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zp278
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.189
    podIPs:
    - ip: 10.1.6.189
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 0acd0503ccdb640d39785c2b0ec84d586468e065d135017192181d6283be1dea
      checksum/secret: 3a24bd3c77b4c01d1bc0120f8b03a6fe35bd741450e2fc56406fc0bb8cee3405
    creationTimestamp: "2025-06-25T01:36:39Z"
    generateName: moja-centralledger-handler-timeout-7f859fc9cc-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-handler-timeout
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-handler-timeout-14.7.0
      pod-template-hash: 7f859fc9cc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dc4dbff4-fbc5-4ada-98c5-3b6f8418ff21"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-handler-timeout"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-handler-timeout-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.85"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:45Z"
    name: moja-centralledger-handler-timeout-7f859fc9cc-wmzrd
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-handler-timeout-7f859fc9cc
      uid: dc4dbff4-fbc5-4ada-98c5-3b6f8418ff21
    resourceVersion: "250273703"
    uid: df1f95e1-4fb1-4382-8a30-f212d3c1d8e0
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --timeout
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-handler-timeout
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-timeout-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llfpf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llfpf
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llfpf
        readOnly: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-timeout
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-timeout
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-handler-timeout-config
      name: moja-centralledger-handler-timeout-config-volume
    - name: kube-api-access-llfpf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a26fb4dd21a346707974eb8e1316eba6290148d384d38521078b9fdd9f04071a
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-handler-timeout
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-timeout-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llfpf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    initContainerStatuses:
    - containerID: containerd://8845bfb69fc6dc4b844aab5db1ee9b2efcc97984b56cfd91d2d3f7901ce7e03b
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8845bfb69fc6dc4b844aab5db1ee9b2efcc97984b56cfd91d2d3f7901ce7e03b
          exitCode: 0
          finishedAt: "2025-06-25T01:36:42Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llfpf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://0d994d4c88b2665b2b61213f5351542efa00d565ac3ef7bb8a0576f444c920e7
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0d994d4c88b2665b2b61213f5351542efa00d565ac3ef7bb8a0576f444c920e7
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llfpf
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.85
    podIPs:
    - ip: 10.1.5.85
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 6f3bffe184f5a0ca44986e8e58d422e83cb29adbd3e31268a3c0ced98eb3df9a
      checksum/secret: d103c62d0a52ac7dce528bca179dbae3ffab5f1a4d89eebf1a5ae54a0b9b5c1e
      prometheus.io/port: "3001"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-centralledger-handler-transfer-fulfil-57d7b6c59-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-handler-transfer-fulfil-14.7.0
      pod-template-hash: 57d7b6c59
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2f2af563-278e-4592-b122-d1febd979977"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-handler-transfer-fulfil"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-handler-transfer-fulfil-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:43Z"
    name: moja-centralledger-handler-transfer-fulfil-57d7b6c59-xh54s
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-handler-transfer-fulfil-57d7b6c59
      uid: 2f2af563-278e-4592-b122-d1febd979977
    resourceVersion: "250273668"
    uid: 82f3dbca-31f8-4066-84a8-cd534c2a06a2
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --fulfil
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-handler-transfer-fulfil
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-fulfil-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5t2f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5t2f
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5t2f
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-handler-transfer-fulfil-config
      name: moja-centralledger-handler-transfer-fulfil-config-volume
    - name: kube-api-access-b5t2f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://50949ec4020ae88ac11af025fb02e58f7e09aabab2aa48f0cc67306a82352720
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-handler-transfer-fulfil
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-fulfil-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5t2f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://277902717d1b7e996f76ee0236cb943680814e5c973bc2abdd03f7ed20309a33
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://277902717d1b7e996f76ee0236cb943680814e5c973bc2abdd03f7ed20309a33
          exitCode: 0
          finishedAt: "2025-06-25T01:36:39Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5t2f
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://c2d6b494091dc19755118d5ef626843e8f1cde39c640227fb4729a5a2f96186d
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c2d6b494091dc19755118d5ef626843e8f1cde39c640227fb4729a5a2f96186d
          exitCode: 0
          finishedAt: "2025-06-25T01:36:40Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5t2f
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.89
    podIPs:
    - ip: 10.1.5.89
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: db5f8d2617293c648b2499b777a8bcbd4b969c2489d331a57b9890ec1257220e
      checksum/secret: a124976ac3992fa0669bd00976d2d54fa7c85d0d5d375fa4f00b486bfe78426c
    creationTimestamp: "2025-06-25T01:36:40Z"
    generateName: moja-centralledger-handler-transfer-get-68749bb88d-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-handler-transfer-get
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-handler-transfer-get-14.7.0
      pod-template-hash: 68749bb88d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c2d79075-7791-4de5-b66e-9aab7abe183c"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-handler-transfer-get"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-handler-transfer-get-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.88"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:45Z"
    name: moja-centralledger-handler-transfer-get-68749bb88d-8s2hg
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-handler-transfer-get-68749bb88d
      uid: c2d79075-7791-4de5-b66e-9aab7abe183c
    resourceVersion: "250273695"
    uid: 8f6dd547-640d-4833-b681-0924fcade417
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --get
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-handler-transfer-get
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-get-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hf254
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hf254
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hf254
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-get
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-get
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-handler-transfer-get-config
      name: moja-centralledger-handler-transfer-get-config-volume
    - name: kube-api-access-hf254
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://908d2f19734e4d0c37477430294554108011214ddd311f4c136839b797cb8a69
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-handler-transfer-get
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-get-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hf254
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://96e2c936b52d204b8dd5a60d06c6543888241fa04f90b9c5e3d44ddc4b7c32a4
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://96e2c936b52d204b8dd5a60d06c6543888241fa04f90b9c5e3d44ddc4b7c32a4
          exitCode: 0
          finishedAt: "2025-06-25T01:36:42Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hf254
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://af4abaccb1f44695170be37cb6cfc18a52f462621c5a27f537f2846a42a50e56
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://af4abaccb1f44695170be37cb6cfc18a52f462621c5a27f537f2846a42a50e56
          exitCode: 0
          finishedAt: "2025-06-25T01:36:42Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hf254
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.88
    podIPs:
    - ip: 10.1.5.88
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 6b923bbc5f52ad0b8691103ad6120afca0532b9615d38971d1658fc8e67db55c
      checksum/secret: cf388c16735a2bc207c31ab2593647127953aa22c8707aca70de80d8a3db5769
      prometheus.io/port: "3001"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-centralledger-handler-transfer-position-585686f764-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-handler-transfer-position
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-handler-transfer-position-14.7.0
      pod-template-hash: 585686f764
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"907971f4-0607-4476-b47c-2f1191770586"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-handler-transfer-position"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-handler-transfer-position-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.235"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:48Z"
    name: moja-centralledger-handler-transfer-position-585686f764-fhtmh
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-handler-transfer-position-585686f764
      uid: 907971f4-0607-4476-b47c-2f1191770586
    resourceVersion: "250273748"
    uid: 5e45dc29-5602-41cb-9cc6-4f4b6ed35e46
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --position
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-handler-transfer-position
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-position-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-52rcr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-52rcr
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-52rcr
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-position
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-position
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-handler-transfer-position-config
      name: moja-centralledger-handler-transfer-position-config-volume
    - name: kube-api-access-52rcr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c1dc75a3341822a5842a8bc611754dc719bf32e2d4c2c082a8f9954f88f6d54d
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-handler-transfer-position
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:46Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-position-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-52rcr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://db669c4080de98072eca01ac5088a81dfde8cb72f3ae37942c9b2b6ca4f19da8
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://db669c4080de98072eca01ac5088a81dfde8cb72f3ae37942c9b2b6ca4f19da8
          exitCode: 0
          finishedAt: "2025-06-25T01:36:45Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-52rcr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ffcaff73f993f0b99fb8b987781ee52bd5ca037355089fbd23e43e4cc1751460
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ffcaff73f993f0b99fb8b987781ee52bd5ca037355089fbd23e43e4cc1751460
          exitCode: 0
          finishedAt: "2025-06-25T01:36:45Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-52rcr
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.235
    podIPs:
    - ip: 10.1.5.235
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: f6f656c51b8343e19b5935bfa45e8ba5e871142401465c70f060c724d2168c2d
      checksum/secret: 08b4a48a4aa8a901899d9d1800410c09b6ea2a393f8701dd1bbeb2033ab4dc2b
      prometheus.io/port: "3001"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:38Z"
    generateName: moja-centralledger-handler-transfer-prepare-574db98478-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-handler-transfer-prepare
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-handler-transfer-prepare-14.7.0
      pod-template-hash: 574db98478
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"009f9493-0fdd-458a-8004-4c142053a1ac"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-handler-transfer-prepare"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-handler-transfer-prepare-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.177"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:45Z"
    name: moja-centralledger-handler-transfer-prepare-574db98478-zn9jb
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-handler-transfer-prepare-574db98478
      uid: 009f9493-0fdd-458a-8004-4c142053a1ac
    resourceVersion: "250273680"
    uid: fc7ea8b4-57b9-4f5a-a5f3-b0feaa8a4949
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --prepare
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-handler-transfer-prepare
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-prepare-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtr8g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtr8g
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtr8g
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-prepare
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-handler-transfer-prepare
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-handler-transfer-prepare-config
      name: moja-centralledger-handler-transfer-prepare-config-volume
    - name: kube-api-access-jtr8g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d555e6eda009a6eab7cdba035280ebcf10da455ff5dc325357fff977c09527bf
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-handler-transfer-prepare
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-handler-transfer-prepare-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtr8g
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://658626a8394c74c036f36ec1e2000b751a008e7710bcf02f3ed73e9e2e4debe0
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://658626a8394c74c036f36ec1e2000b751a008e7710bcf02f3ed73e9e2e4debe0
          exitCode: 0
          finishedAt: "2025-06-25T01:36:41Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtr8g
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://90b0be1d7f85b8ace07a31b2af2cdd3e3a4dbe039a241f91f78ff852a558f113
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://90b0be1d7f85b8ace07a31b2af2cdd3e3a4dbe039a241f91f78ff852a558f113
          exitCode: 0
          finishedAt: "2025-06-25T01:36:42Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jtr8g
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.177
    podIPs:
    - ip: 10.1.6.177
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: e67795fc1c549187083607c0ee51f344775a62792cb2932395649b0bfce92fcc
      checksum/secret: b5d13321f42c1e865341729e09484bd9a8a9ca78c54b5d48dc6bafdc24bea7f6
      prometheus.io/port: "3001"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-centralledger-service-778945686d-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralledger-service
      app.kubernetes.io/version: 14.7.0
      helm.sh/chart: centralledger-service-14.7.0
      pod-template-hash: 778945686d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6fa8c735-ec08-45c4-9dfb-c3284b963df1"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralledger-service"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-service-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.23"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:41Z"
    name: moja-centralledger-service-778945686d-xtfxp
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralledger-service-778945686d
      uid: 6fa8c735-ec08-45c4-9dfb-c3284b963df1
    resourceVersion: "250273653"
    uid: 2b131410-80f0-4930-8914-a3b6f991b43e
  spec:
    containers:
    - command:
      - node
      - src/api/index.js
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralledger-service
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-txw92
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - |
        until mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD}  ${DB_DATABASE} -e 'select version()' ;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-txw92
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-service
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralledger-service
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-service-config
      name: moja-centralledger-service-config-volume
    - name: kube-api-access-txw92
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dafb90fcfc777dee334f97863d406ed04481e8060334d3a7eb2a6eca2d0470b9
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: centralledger-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-txw92
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://04bd54be57e85baeff728587a584baa6af2738a90e5ecb83a4204cc44f421163
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://04bd54be57e85baeff728587a584baa6af2738a90e5ecb83a4204cc44f421163
          exitCode: 0
          finishedAt: "2025-06-25T01:36:38Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-txw92
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.23
    podIPs:
    - ip: 10.1.6.23
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:06Z"
    generateName: moja-centralledger-service-migration-
    labels:
      batch.kubernetes.io/controller-uid: 215068b2-91e7-4e4d-9aa7-9f43eacd936e
      batch.kubernetes.io/job-name: moja-centralledger-service-migration
      controller-uid: 215068b2-91e7-4e4d-9aa7-9f43eacd936e
      job-name: moja-centralledger-service-migration
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:batch.kubernetes.io/controller-uid: {}
            f:batch.kubernetes.io/job-name: {}
            f:controller-uid: {}
            f:job-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"215068b2-91e7-4e4d-9aa7-9f43eacd936e"}: {}
        f:spec:
          f:containers:
            k:{"name":"run-migration"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralledger-service-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.56"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:34Z"
    name: moja-centralledger-service-migration-zh42s
    namespace: moja3
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: moja-centralledger-service-migration
      uid: 215068b2-91e7-4e4d-9aa7-9f43eacd936e
    resourceVersion: "250272071"
    uid: 7d62c7dd-28f3-42c1-a3db-4f8126f05d5c
  spec:
    containers:
    - command:
      - sh
      - -c
      - npm run migrate
      env:
      - name: CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS
        value: "true"
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      name: run-migration
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzcdw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - |
        until mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD}  ${DB_DATABASE} -e 'select version()' ;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzcdw
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-centralledger-service-config
      name: moja-centralledger-service-config-volume
    - name: kube-api-access-dzcdw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:34Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:07Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:33Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:33Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://139808fc342660258a5f4aa5dcffbe8f0a8fc31a89e234770da0fd0b3ef9fc78
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: run-migration
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://139808fc342660258a5f4aa5dcffbe8f0a8fc31a89e234770da0fd0b3ef9fc78
          exitCode: 0
          finishedAt: "2025-06-25T01:36:32Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:08Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralledger-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzcdw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://706259fd333b77711e9fb32ccab052ae59a206f50f0b058dc4c2e4a39673f509
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://706259fd333b77711e9fb32ccab052ae59a206f50f0b058dc4c2e4a39673f509
          exitCode: 0
          finishedAt: "2025-06-25T01:36:07Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:07Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzcdw
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.1.6.56
    podIPs:
    - ip: 10.1.6.56
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: d05d3d11ac413339ce5885b703fd4e53035807693c7e62f36e130c0561cdf3e4
      checksum/secret: 6f58be2b1a32193a33b8e53709dff80d888f61e274f548624f29eaf31ede0bdd
    creationTimestamp: "2025-06-25T01:36:41Z"
    generateName: moja-centralsettlement-handler-deferredsettlement-6c8fbdc876-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: centralsettlement-handler-deferredsettlement-15.4.0
      pod-template-hash: 6c8fbdc876
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8d678202-9b97-49d3-9509-46f5d76b96a8"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralsettlement-handler-deferredsettlement"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSET_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3007,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/scripts/grosssettlementTemp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralsettlement-handler-deferredsettlement-cfg-vol"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"moja-centralsettlement-handler-deferredsettlement-rules-vol"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.248"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:48Z"
    name: moja-centralsettlement-handler-deferredsettlement-6c8fbdc82dmcv
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralsettlement-handler-deferredsettlement-6c8fbdc876
      uid: 8d678202-9b97-49d3-9509-46f5d76b96a8
    resourceVersion: "250273747"
    uid: c18226c5-70aa-4ba5-acb3-5be0e9edbb07
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - h
      - --deferredSettlement
      env:
      - name: CSET_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-settlement:v17.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /v2/health
          port: 3007
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralsettlement-handler-deferredsettlement
      ports:
      - containerPort: 3007
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v2/health
          port: 3007
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralsettlement-handler-deferredsettlement-cfg-vol
      - mountPath: /opt/app/scripts/grosssettlementTemp
        name: moja-centralsettlement-handler-deferredsettlement-rules-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcvd5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcvd5
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcvd5
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralsettlement-handler-deferredsettlement
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-centralsettlement-handler-deferredsettlement-config
      name: moja-centralsettlement-handler-deferredsettlement-cfg-vol
    - emptyDir: {}
      name: moja-centralsettlement-handler-deferredsettlement-rules-vol
    - name: kube-api-access-wcvd5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://77739b24831b26cb74a7d4049c9e0830c913175ce78648fb95c41a9808dacd53
      image: docker.io/mojaloop/central-settlement:v17.0.6
      imageID: docker.io/mojaloop/central-settlement@sha256:9edb8ea895f7d693bc42ab9034066f5996279423c6bca59e9e6fa984ea8009f3
      lastState: {}
      name: centralsettlement-handler-deferredsettlement
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:46Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralsettlement-handler-deferredsettlement-cfg-vol
      - mountPath: /opt/app/scripts/grosssettlementTemp
        name: moja-centralsettlement-handler-deferredsettlement-rules-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcvd5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://7e480af6cf553a1b90b0aabc9aa5dfd424c6a94256cd0a10e3347d3e3642444d
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7e480af6cf553a1b90b0aabc9aa5dfd424c6a94256cd0a10e3347d3e3642444d
          exitCode: 0
          finishedAt: "2025-06-25T01:36:44Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcvd5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://c944cc5951168c75cae33cbac048a8236748daae9255559e6c1617297b20f0a8
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c944cc5951168c75cae33cbac048a8236748daae9255559e6c1617297b20f0a8
          exitCode: 0
          finishedAt: "2025-06-25T01:36:45Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wcvd5
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.248
    podIPs:
    - ip: 10.1.5.248
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 51a17113c1fa088f8b53e1abf29649e1a953e101c77a6ebd1be8f249c2216218
      checksum/secret: 0ca9842e86c103f2ac23e22524cd1f251f6c75d077e700ad2d69c1875b53abc0
    creationTimestamp: "2025-06-25T01:36:41Z"
    generateName: moja-centralsettlement-handler-rules-7b49555978-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralsettlement-handler-rules
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: centralsettlement-handler-rules-15.4.0
      pod-template-hash: 7b49555978
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b06f16e2-b359-4ecc-ba82-ffa6fb05178c"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralsettlement-handler-rules"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSET_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3007,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/scripts/grosssettlementTemp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralsettlement-handler-rules-cfg-vol"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"moja-centralsettlement-handler-rules-rules-vol"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.44"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:47Z"
    name: moja-centralsettlement-handler-rules-7b49555978-lgxl8
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralsettlement-handler-rules-7b49555978
      uid: b06f16e2-b359-4ecc-ba82-ffa6fb05178c
    resourceVersion: "250273725"
    uid: 3a86baba-5933-4712-abe7-af82ca0ef87a
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - h
      - --rules
      env:
      - name: CSET_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-settlement:v17.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /v2/health
          port: 3007
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralsettlement-handler-rules
      ports:
      - containerPort: 3007
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v2/health
          port: 3007
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralsettlement-handler-rules-cfg-vol
      - mountPath: /opt/app/scripts/grosssettlementTemp
        name: moja-centralsettlement-handler-rules-rules-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njxn7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njxn7
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njxn7
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralsettlement-handler-rules
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralsettlement-handler-rules
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-centralsettlement-handler-rules-config
      name: moja-centralsettlement-handler-rules-cfg-vol
    - configMap:
        defaultMode: 420
        name: moja-centralsettlement-handler-rules-rules
      name: moja-centralsettlement-handler-rules-rules-vol
    - name: kube-api-access-njxn7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://eda9111ccf2d9b91c9c427909e542091021c0cb8fd9a1d90c43ab4d26548ce4e
      image: docker.io/mojaloop/central-settlement:v17.0.6
      imageID: docker.io/mojaloop/central-settlement@sha256:9edb8ea895f7d693bc42ab9034066f5996279423c6bca59e9e6fa984ea8009f3
      lastState: {}
      name: centralsettlement-handler-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:45Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralsettlement-handler-rules-cfg-vol
      - mountPath: /opt/app/scripts/grosssettlementTemp
        name: moja-centralsettlement-handler-rules-rules-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njxn7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://1b89e94fb32c8ceb8e4c24f21bfb42bc97460537a23c469acc5806d0854a08fd
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1b89e94fb32c8ceb8e4c24f21bfb42bc97460537a23c469acc5806d0854a08fd
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njxn7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ccc594759544372d1f56121fae2633efff22bdee84eebca070f2caf65bb67e4f
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ccc594759544372d1f56121fae2633efff22bdee84eebca070f2caf65bb67e4f
          exitCode: 0
          finishedAt: "2025-06-25T01:36:44Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njxn7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.44
    podIPs:
    - ip: 10.1.5.44
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 02a5fd934115d2e45506351a83c91c30135ef1c6f8b30082cede3e5b75a5c2ea
      checksum/secret: aa1b36ddae5c45ef94893721c61cb47d7f086ae24d828c0a3bfd07f6aa042479
    creationTimestamp: "2025-06-25T01:36:41Z"
    generateName: moja-centralsettlement-service-6c95d6c6c6-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: centralsettlement-service
      app.kubernetes.io/version: 15.4.0
      helm.sh/chart: centralsettlement-service-15.4.0
      pod-template-hash: 6c95d6c6c6
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4da89cf-f37c-4a4a-a016-2b7c85264e6b"}: {}
        f:spec:
          f:containers:
            k:{"name":"centralsettlement-service"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSET_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3007,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/scripts/grosssettlementTemp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-centralsettlement-service-cfg-vol"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"moja-centralsettlement-service-rules-vol"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.39"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:49Z"
    name: moja-centralsettlement-service-6c95d6c6c6-gtqfh
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-centralsettlement-service-6c95d6c6c6
      uid: e4da89cf-f37c-4a4a-a016-2b7c85264e6b
    resourceVersion: "250273759"
    uid: 1db1f18b-6924-4335-9f88-c93efc514424
  spec:
    containers:
    - command:
      - node
      - src/api/index.js
      env:
      - name: CSET_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-settlement:v17.0.6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /v2/health
          port: 3007
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: centralsettlement-service
      ports:
      - containerPort: 3007
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v2/health
          port: 3007
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralsettlement-service-cfg-vol
      - mountPath: /opt/app/scripts/grosssettlementTemp
        name: moja-centralsettlement-service-rules-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnkkh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnkkh
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnkkh
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralsettlement-service
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: centralsettlement-service
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-centralsettlement-service-config
      name: moja-centralsettlement-service-cfg-vol
    - emptyDir: {}
      name: moja-centralsettlement-service-rules-vol
    - name: kube-api-access-bnkkh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://aa4d10b796e52dc93d857f02bee4441d3a8b9f801c131806f26a18a55bcf5ace
      image: docker.io/mojaloop/central-settlement:v17.0.6
      imageID: docker.io/mojaloop/central-settlement@sha256:9edb8ea895f7d693bc42ab9034066f5996279423c6bca59e9e6fa984ea8009f3
      lastState: {}
      name: centralsettlement-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:47Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-centralsettlement-service-cfg-vol
      - mountPath: /opt/app/scripts/grosssettlementTemp
        name: moja-centralsettlement-service-rules-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnkkh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://1c236adfa8449a0c76b2ddab2353dd1d815e301ab909cb5de8382187bbff6b98
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1c236adfa8449a0c76b2ddab2353dd1d815e301ab909cb5de8382187bbff6b98
          exitCode: 0
          finishedAt: "2025-06-25T01:36:45Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnkkh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://cccc3cc2c86aa1ccb261fae2f1052d8dba9d462edfb642342872c6b12a9f6d7b
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cccc3cc2c86aa1ccb261fae2f1052d8dba9d462edfb642342872c6b12a9f6d7b
          exitCode: 0
          finishedAt: "2025-06-25T01:36:46Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bnkkh
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.39
    podIPs:
    - ip: 10.1.6.39
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 17fd045ebe80ddd6b69648e9163bf7b753c9932263b7329447c145758584ad28
      checksum/secret: 2744ea83eabe1842022eb3c98bd49477e66ccf99a8f583c466d4ba7b72d8cae5
      prometheus.io/port: "3001"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:40Z"
    generateName: moja-handler-pos-batch-758b955d99-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: handler-pos-batch
      app.kubernetes.io/version: 15.5.0
      helm.sh/chart: centralledger-handler-transfer-position-batch-15.5.0
      pod-template-hash: 758b955d99
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b5e6935-20ce-411f-b66d-75b21d05beb2"}: {}
        f:spec:
          f:containers:
            k:{"name":"handler-pos-batch"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLEDG_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-handler-pos-batch-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.77"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:47Z"
    name: moja-handler-pos-batch-758b955d99-r9d5j
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-handler-pos-batch-758b955d99
      uid: 2b5e6935-20ce-411f-b66d-75b21d05beb2
    resourceVersion: "250273715"
    uid: dcfa0c36-fd3b-43e4-bc76-36c38a40b0dc
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --positionbatch
      env:
      - name: CLEDG_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/central-ledger:v19.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: handler-pos-batch
      ports:
      - containerPort: 3001
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-handler-pos-batch-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-swt84
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-swt84
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-swt84
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: handler-pos-batch
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: handler-pos-batch
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: knexfile.js
          path: knexfile.js
        name: moja-handler-pos-batch-config
      name: moja-handler-pos-batch-config-volume
    - name: kube-api-access-swt84
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c23a50770a15caef1a6ff0e6a94baa92ccdc56948ac2b7c28e8ed03612b28f8
      image: docker.io/mojaloop/central-ledger:v19.3.0
      imageID: docker.io/mojaloop/central-ledger@sha256:4ec81729eecbc635e58f210badf167db18d604fc1f45e28a23c2f7af098ae8cc
      lastState: {}
      name: handler-pos-batch
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:45Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-handler-pos-batch-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-swt84
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://3a0fcf8bd6ce9c26d8350048b55130c0919e2687222f8f752ec4e16ec850c228
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3a0fcf8bd6ce9c26d8350048b55130c0919e2687222f8f752ec4e16ec850c228
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-swt84
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://5f61b7630eeae675bdcb1a5d35452489e439c575c554008c3551cb3d4cb3b23b
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5f61b7630eeae675bdcb1a5d35452489e439c575c554008c3551cb3d4cb3b23b
          exitCode: 0
          finishedAt: "2025-06-25T01:36:44Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-swt84
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.77
    podIPs:
    - ip: 10.1.6.77
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: a1539c91e3469ca248868cbcf3e3a3e5679d511e9018e4027e8c225c4ae05028
      checksum/secret-jws: 12cd366d29d4bed22b226d733f2f2a09c1a4608794be5f481c1d334dc27893a4
      prometheus.io/port: "3000"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:40Z"
    generateName: moja-ml-api-adapter-handler-notification-78df5d567b-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ml-api-adapter-handler-notification
      app.kubernetes.io/version: 14.0.0
      helm.sh/chart: ml-api-adapter-handler-notification-14.0.0
      pod-template-hash: 78df5d567b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret-jws: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0e75cc74-ef13-4db2-b59e-0bf51a9c7423"}: {}
        f:spec:
          f:containers:
            k:{"name":"ml-api-adapter-handler-notification"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"jws-signing-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"moja-ml-api-adapter-handler-notification-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:38:49Z"
    name: moja-ml-api-adapter-handler-notification-78df5d567b-q4qkb
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-ml-api-adapter-handler-notification-78df5d567b
      uid: 0e75cc74-ef13-4db2-b59e-0bf51a9c7423
    resourceVersion: "250274043"
    uid: 08fc1856-6916-4290-83e0-9328ed654e01
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --notification
      env:
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/ml-api-adapter:v16.4.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 90
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: ml-api-adapter-handler-notification
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-ml-api-adapter-handler-notification-config-volume
      - mountPath: /opt/app/secrets
        name: jws-signing-key
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44cvc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44cvc
        readOnly: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: ml-api-adapter-handler-notification
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: ml-api-adapter-handler-notification
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: jws-signing-key
      secret:
        defaultMode: 420
        secretName: moja-ml-api-adapter-handler-notification-jws-signing-key
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-ml-api-adapter-handler-notification-config
      name: moja-ml-api-adapter-handler-notification-config-volume
    - name: kube-api-access-44cvc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:38:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:38:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://722ac7e2ac91045f0fe56ff535c8c1eb199cea32a49cf4e379dc2f4cd0627767
      image: docker.io/mojaloop/ml-api-adapter:v16.4.1
      imageID: docker.io/mojaloop/ml-api-adapter@sha256:acf85f70dd3181fc7b51092f44723714cb73b5aded6e2559a350ff71cd822cf9
      lastState: {}
      name: ml-api-adapter-handler-notification
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-ml-api-adapter-handler-notification-config-volume
      - mountPath: /opt/app/secrets
        name: jws-signing-key
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44cvc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    initContainerStatuses:
    - containerID: containerd://6ab1a9457608bd330dbf4f1cc4927eaaed0896229675ce685cfc92fad2f74b13
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6ab1a9457608bd330dbf4f1cc4927eaaed0896229675ce685cfc92fad2f74b13
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44cvc
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.160
    podIPs:
    - ip: 10.1.5.160
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 4ffcd82106c0e92ae7b4bff04a2f72c7e47a5b7b0f49a661bdf0357f4c121896
      prometheus.io/port: "3000"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:38Z"
    generateName: moja-ml-api-adapter-service-5d5bfdb7fd-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ml-api-adapter-service
      app.kubernetes.io/version: 14.0.0
      helm.sh/chart: ml-api-adapter-service-14.0.0
      pod-template-hash: 5d5bfdb7fd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e961fe05-60bf-48bc-bed2-ff2e1f78f766"}: {}
        f:spec:
          f:containers:
            k:{"name":"ml-api-adapter-service"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-ml-api-adapter-service-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.19"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:38:42Z"
    name: moja-ml-api-adapter-service-5d5bfdb7fd-zsfjc
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-ml-api-adapter-service-5d5bfdb7fd
      uid: e961fe05-60bf-48bc-bed2-ff2e1f78f766
    resourceVersion: "250274010"
    uid: dce903c9-d705-4695-90b3-c761855bb136
  spec:
    containers:
    - command:
      - node
      - src/api/index.js
      env:
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
        value: error, warn, info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/ml-api-adapter:v16.4.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 90
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: ml-api-adapter-service
      ports:
      - containerPort: 3000
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-ml-api-adapter-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gkcm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gkcm
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: ml-api-adapter-service
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: ml-api-adapter-service
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-ml-api-adapter-service-config
      name: moja-ml-api-adapter-service-config-volume
    - name: kube-api-access-7gkcm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:38:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:38:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://611ec15d0f7fa59e153d4b306924f2616dc35d0af26d80f88cffc5864d1c551f
      image: docker.io/mojaloop/ml-api-adapter:v16.4.1
      imageID: docker.io/mojaloop/ml-api-adapter@sha256:acf85f70dd3181fc7b51092f44723714cb73b5aded6e2559a350ff71cd822cf9
      lastState: {}
      name: ml-api-adapter-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-ml-api-adapter-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gkcm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://d66bfa43e75bcc4234389c74d65237b1c2cfa746ceefc25585f100184f1f63dc
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d66bfa43e75bcc4234389c74d65237b1c2cfa746ceefc25585f100184f1f63dc
          exitCode: 0
          finishedAt: "2025-06-25T01:36:41Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7gkcm
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.19
    podIPs:
    - ip: 10.1.5.19
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 3099fd41ab00b3ef20b90aa007c688c3c53b0e6ab4a480f302579aaf5b17e560
      prometheus.io/port: "5050"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-ml-testing-toolkit-backend-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ml-testing-toolkit-backend
      app.kubernetes.io/version: 17.0.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: moja-ml-testing-toolkit-backend-576bf4996b
      helm.sh/chart: ml-testing-toolkit-backend-17.0.0
      statefulset.kubernetes.io/pod-name: moja-ml-testing-toolkit-backend-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7d1dabc7-dbec-435a-92d0-574f79ed36a7"}: {}
        f:spec:
          f:containers:
            k:{"name":"ml-testing-toolkit-backend"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"REPORTING_DB_CONNECTION_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"REPORTING_DB_CONNECTION_STRING"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4040,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
                k:{"containerPort":5050,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/home/ml-user/.release_cd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/examples/environments/hub-k8s-default-environment.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/default_config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-mongodb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-ml-testing-toolkit-backend-volume-config-default"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"moja-ml-testing-toolkit-backend-volume-extra-environments"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"release-cd-rc"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.99"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:43Z"
    name: moja-ml-testing-toolkit-backend-0
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: moja-ml-testing-toolkit-backend
      uid: 7d1dabc7-dbec-435a-92d0-574f79ed36a7
    resourceVersion: "250273097"
    uid: fa9a3b5c-bd8c-45ab-b93a-ebc2b3f4ae49
  spec:
    containers:
    - command:
      - sh
      - -c
      - cd /opt/default_config; for FILE in *; do newFileName=/opt/app/spec_files/${FILE//__/\/};
        mkdir -p ${newFileName%/*}; firstLine=$(head -n 1 $FILE | tr -d \"); regex="^(http|https|ftp)://";
        if [[ "$firstLine" =~ $regex ]]; then wget $firstLine -O $newFileName; else
        cp $FILE $newFileName; fi; done; cd /opt/app; npm run start;
      env:
      - name: REPORTING_DB_CONNECTION_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mongodb-passwords
            name: ttk-mongodb
      - name: REPORTING_DB_CONNECTION_STRING
      image: mojaloop/ml-testing-toolkit:v18.11.2
      imagePullPolicy: IfNotPresent
      name: ml-testing-toolkit-backend
      ports:
      - containerPort: 4040
        protocol: TCP
      - containerPort: 5050
        name: http
        protocol: TCP
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/examples/environments/hub-k8s-default-environment.json
        name: moja-ml-testing-toolkit-backend-volume-extra-environments
        subPath: hub-k8s-default-environment.json
      - mountPath: /opt/default_config
        name: moja-ml-testing-toolkit-backend-volume-config-default
      - mountPath: /home/ml-user/.release_cd
        name: release-cd-rc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4snx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: moja-ml-testing-toolkit-backend-0
    initContainers:
    - command:
      - sh
      - -c
      - |
        until mongosh mongodb://${DB_HOST}:${DB_PORT} --authenticationDatabase "${DB_DATABASE}" --username "${DB_USER}" --password "${DB_PASS}" --eval "disableTelemetry();db.adminCommand('ping')" ;
        do
          echo --------------------;
          echo Waiting for MongoDB...;
          sleep 2;
        done;
        echo ====================;
        echo MongoDB ok!;
      env:
      - name: DB_HOST
        value: ttk-mongodb
      - name: DB_PORT
        value: "27017"
      - name: DB_USER
        value: ttk
      - name: DB_PASS
        valueFrom:
          secretKeyRef:
            key: mongodb-passwords
            name: ttk-mongodb
      - name: DB_DATABASE
        value: ttk
      image: bitnami/mongodb:6.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mongodb
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4snx
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: moja-ml-testing-toolkit-backend
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: rules_callback__default.json
          path: rules_callback__default.json
        - key: rules_response__default.json
          path: rules_response__default.json
        - key: rules_validation__default.json
          path: rules_validation__default.json
        - key: system_config.json
          path: system_config.json
        - key: user_config.json
          path: user_config.json
        name: moja-ml-testing-toolkit-backend-config-default
      name: moja-ml-testing-toolkit-backend-volume-config-default
    - configMap:
        defaultMode: 420
        items:
        - key: hub-k8s-default-environment.json
          path: hub-k8s-default-environment.json
        name: moja-ml-testing-toolkit-backend-config-extra-environments
      name: moja-ml-testing-toolkit-backend-volume-extra-environments
    - configMap:
        defaultMode: 420
        name: release-cd-rc
        optional: true
      name: release-cd-rc
    - name: kube-api-access-q4snx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5f5cc4d461ac5fdf18cbefabe857cd585d085df328b9355d26eb8090c0273575
      image: docker.io/mojaloop/ml-testing-toolkit:v18.11.2
      imageID: docker.io/mojaloop/ml-testing-toolkit@sha256:79d4fbf6376495b3e1da5b2833380999f00987073f30b048a96e2cf51d5d10f6
      lastState: {}
      name: ml-testing-toolkit-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /opt/app/examples/environments/hub-k8s-default-environment.json
        name: moja-ml-testing-toolkit-backend-volume-extra-environments
      - mountPath: /opt/default_config
        name: moja-ml-testing-toolkit-backend-volume-config-default
      - mountPath: /home/ml-user/.release_cd
        name: release-cd-rc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4snx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://9d88517a72c7a93914fcae38eeb76772e2a2b90c3cf6757962b7bd8da2b667eb
      image: docker.io/bitnami/mongodb:6.0.1
      imageID: docker.io/bitnami/mongodb@sha256:fbfb81a8182248adf003d3c0f04e67beccde285f443939f825e87d5d7ad53be0
      lastState: {}
      name: wait-for-mongodb
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9d88517a72c7a93914fcae38eeb76772e2a2b90c3cf6757962b7bd8da2b667eb
          exitCode: 0
          finishedAt: "2025-06-25T01:36:41Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q4snx
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.99
    podIPs:
    - ip: 10.1.6.99
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 4a59bb4c3e8802ad9efcf68ad1e194b84eb994b03904f6a1e31fbc37893d0c5d
    creationTimestamp: "2025-06-25T01:36:38Z"
    generateName: moja-ml-testing-toolkit-frontend-56759cd946-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ml-testing-toolkit-frontend
      app.kubernetes.io/version: 15.10.0
      helm.sh/chart: ml-testing-toolkit-frontend-15.10.0
      pod-template-hash: 56759cd946
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3a361071-2a19-48b1-bbec-e7ba2236d971"}: {}
        f:spec:
          f:containers:
            k:{"name":"ml-testing-toolkit-frontend"}:
              .: {}
              f:command: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6060,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.12"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:39Z"
    name: moja-ml-testing-toolkit-frontend-56759cd946-df5d9
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-ml-testing-toolkit-frontend-56759cd946
      uid: 3a361071-2a19-48b1-bbec-e7ba2236d971
    resourceVersion: "250272731"
    uid: 74482b7e-0db2-4ddf-8d91-9c865997a910
  spec:
    containers:
    - command:
      - sh
      - /usr/share/nginx/start.sh
      envFrom:
      - configMapRef:
          name: moja-ml-testing-toolkit-frontend-config
      image: mojaloop/ml-testing-toolkit-ui:v16.2.0
      imagePullPolicy: IfNotPresent
      name: ml-testing-toolkit-frontend
      ports:
      - containerPort: 6060
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-74qdz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-74qdz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1dc2910760652285724d680a780c604076380517efe88fecc7c2836851e0dc38
      image: docker.io/mojaloop/ml-testing-toolkit-ui:v16.2.0
      imageID: docker.io/mojaloop/ml-testing-toolkit-ui@sha256:f1720b24d5f5a768df318193787a6ba77a24df6a8437beb86f0527c8914ef41f
      lastState: {}
      name: ml-testing-toolkit-frontend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-74qdz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.12
    podIPs:
    - ip: 10.1.5.12
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helm.sh/hook: test
      helm.sh/hook-delete-policy: before-hook-creation
      helm.sh/hook-weight: "-9"
    creationTimestamp: "2025-06-25T01:45:35Z"
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ml-ttk-test-setup
      app.kubernetes.io/version: v1.9.0
      helm.sh/chart: ml-ttk-test-setup-15.9.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helm.sh/hook: {}
            f:helm.sh/hook-delete-policy: {}
            f:helm.sh/hook-weight: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:containers:
            k:{"name":"ml-ttk-test-setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/release_cd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/cli-default-config.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/app/cli-testcase-environment.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-ml-ttk-test-setup-conf"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"moja-ml-ttk-test-setup-env"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"release-cd"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: helm
      operation: Update
      time: "2025-06-25T01:45:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.21"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:48:28Z"
    name: moja-ml-ttk-test-setup
    namespace: moja3
    resourceVersion: "250276427"
    uid: e6e881a0-70c5-4627-89f5-1ad585cb15d1
  spec:
    containers:
    - args:
      - |
        until nslookup github.com; do sleep 5;done;
        echo "Downloading the test collection...";
        wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v17.0.0.zip -O downloaded-test-collections.zip;
        mkdir tmp_test_cases;
        unzip -d tmp_test_cases -o downloaded-test-collections.zip;
        npm run cli -- \
          -c cli-default-config.json \
          -e cli-testcase-environment.json \
          -i tmp_test_cases/testing-toolkit-test-cases-17.0.0/collections/hub/provisioning/for_golden_path \
          -u http://moja-ml-testing-toolkit-backend:5050 \
          --report-format html \
          --report-auto-filename-enable true \
          --save-report true \
          --report-name standard_provisioning_collection \
          --save-report-base-url testing-toolkit.local \
          --extra-summary-information="Test Suite:Standard Provisioning Collection,Environment:Development";
        export TEST_RUNNER_EXIT_CODE="$?";
        echo "Test Runner finished with exit code: $TEST_RUNNER_EXIT_CODE";
        exit $TEST_RUNNER_EXIT_CODE;
      command:
      - /bin/sh
      - -c
      envFrom:
      - secretRef:
          name: moja-ml-ttk-test-setup-aws-creds
      image: mojaloop/ml-testing-toolkit-client-lib:v1.9.0
      imagePullPolicy: IfNotPresent
      name: ml-ttk-test-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/cli-testcase-environment.json
        name: moja-ml-ttk-test-setup-env
        subPath: cli-testcase-environment.json
      - mountPath: /opt/app/cli-default-config.json
        name: moja-ml-ttk-test-setup-conf
        subPath: cli-default-config.json
      - mountPath: /etc/release_cd
        name: release-cd
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r8fxw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: cli-default-config.json
          path: cli-default-config.json
        name: moja-ml-ttk-test-setup-conf
      name: moja-ml-ttk-test-setup-conf
    - configMap:
        defaultMode: 420
        items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
        name: moja-ml-ttk-test-setup-env
      name: moja-ml-ttk-test-setup-env
    - configMap:
        defaultMode: 420
        name: release-cd
        optional: true
      name: release-cd
    - name: kube-api-access-r8fxw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:48:28Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:45:35Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:48:27Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:48:27Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:45:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://51ec5a5504e6333e231be5dede29d1d83417b1abab69b70d956063372d3c6eb2
      image: docker.io/mojaloop/ml-testing-toolkit-client-lib:v1.9.0
      imageID: docker.io/mojaloop/ml-testing-toolkit-client-lib@sha256:c1944e6799211f6b185a79deb30f4c839f5d220e688f59673566de680818d54f
      lastState: {}
      name: ml-ttk-test-setup
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://51ec5a5504e6333e231be5dede29d1d83417b1abab69b70d956063372d3c6eb2
          exitCode: 0
          finishedAt: "2025-06-25T01:48:27Z"
          reason: Completed
          startedAt: "2025-06-25T01:45:36Z"
      volumeMounts:
      - mountPath: /opt/app/cli-testcase-environment.json
        name: moja-ml-ttk-test-setup-env
      - mountPath: /opt/app/cli-default-config.json
        name: moja-ml-ttk-test-setup-conf
      - mountPath: /etc/release_cd
        name: release-cd
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r8fxw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Succeeded
    podIP: 10.1.5.21
    podIPs:
    - ip: 10.1.5.21
    qosClass: BestEffort
    startTime: "2025-06-25T01:45:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helm.sh/hook: test
      helm.sh/hook-delete-policy: before-hook-creation
      helm.sh/hook-weight: "-8"
    creationTimestamp: "2025-06-25T01:48:30Z"
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ml-ttk-test-val-gp
      app.kubernetes.io/version: v1.9.0
      helm.sh/chart: ml-ttk-test-val-gp-15.9.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:helm.sh/hook: {}
            f:helm.sh/hook-delete-policy: {}
            f:helm.sh/hook-weight: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:containers:
            k:{"name":"ml-ttk-test-val-gp"}:
              .: {}
              f:args: {}
              f:command: {}
              f:envFrom: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/release_cd"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/app/cli-default-config.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/app/cli-testcase-environment.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-ml-ttk-test-val-gp-conf"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"moja-ml-ttk-test-val-gp-env"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"release-cd"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: helm
      operation: Update
      time: "2025-06-25T01:48:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:53:33Z"
    name: moja-ml-ttk-test-val-gp
    namespace: moja3
    resourceVersion: "250277692"
    uid: de8d3b1c-41dd-45e5-b96d-4bfc2bc365da
  spec:
    containers:
    - args:
      - |
        until nslookup github.com; do sleep 5;done;
        echo "Downloading the test collection...";
        wget https://github.com/mojaloop/testing-toolkit-test-cases/archive/v17.0.0.zip -O downloaded-test-collections.zip;
        mkdir tmp_test_cases;
        unzip -d tmp_test_cases -o downloaded-test-collections.zip;
        npm run cli -- \
          -c cli-default-config.json \
          -e cli-testcase-environment.json \
          -i tmp_test_cases/testing-toolkit-test-cases-17.0.0/collections/hub/golden_path \
          -u http://moja-ml-testing-toolkit-backend:5050 \
          --report-format html \
          --report-auto-filename-enable true \
          --save-report true \
          --report-name gp_tests \
          --save-report-base-url testing-toolkit.local \
          --batch-size 1 \
          --extra-summary-information="Test Suite:GP Tests,Environment:Development";
        export TEST_RUNNER_EXIT_CODE="$?";
        echo "Test Runner finished with exit code: $TEST_RUNNER_EXIT_CODE";
        exit $TEST_RUNNER_EXIT_CODE;
      command:
      - /bin/sh
      - -c
      envFrom:
      - secretRef:
          name: moja-ml-ttk-test-val-gp-aws-creds
      image: mojaloop/ml-testing-toolkit-client-lib:v1.9.0
      imagePullPolicy: IfNotPresent
      name: ml-ttk-test-val-gp
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/cli-testcase-environment.json
        name: moja-ml-ttk-test-val-gp-env
        subPath: cli-testcase-environment.json
      - mountPath: /opt/app/cli-default-config.json
        name: moja-ml-ttk-test-val-gp-conf
        subPath: cli-default-config.json
      - mountPath: /etc/release_cd
        name: release-cd
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ll4z4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: cli-default-config.json
          path: cli-default-config.json
        name: moja-ml-ttk-test-val-gp-conf
      name: moja-ml-ttk-test-val-gp-conf
    - configMap:
        defaultMode: 420
        items:
        - key: cli-testcase-environment.json
          path: cli-testcase-environment.json
        name: moja-ml-ttk-test-val-gp-env
      name: moja-ml-ttk-test-val-gp-env
    - configMap:
        defaultMode: 420
        name: release-cd
        optional: true
      name: release-cd
    - name: kube-api-access-ll4z4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:53:33Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:48:30Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:53:32Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:53:32Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:48:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dce89105fd7e5085cf9be9c0fcde961951955fb872483f9903c0e02374a47b00
      image: docker.io/mojaloop/ml-testing-toolkit-client-lib:v1.9.0
      imageID: docker.io/mojaloop/ml-testing-toolkit-client-lib@sha256:c1944e6799211f6b185a79deb30f4c839f5d220e688f59673566de680818d54f
      lastState: {}
      name: ml-ttk-test-val-gp
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://dce89105fd7e5085cf9be9c0fcde961951955fb872483f9903c0e02374a47b00
          exitCode: 0
          finishedAt: "2025-06-25T01:53:31Z"
          reason: Completed
          startedAt: "2025-06-25T01:48:30Z"
      volumeMounts:
      - mountPath: /opt/app/cli-testcase-environment.json
        name: moja-ml-ttk-test-val-gp-env
      - mountPath: /opt/app/cli-default-config.json
        name: moja-ml-ttk-test-val-gp-conf
      - mountPath: /etc/release_cd
        name: release-cd
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ll4z4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Succeeded
    podIP: 10.1.5.49
    podIPs:
    - ip: 10.1.5.49
    qosClass: BestEffort
    startTime: "2025-06-25T01:48:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: c8b5e054ac57606ec07bb0416eefb7541385e2c91c6ccd88fdf642524050d7dc
      checksum/secret: c80220e058d303bf5c853d4f697a39567c9646b1cc3c91c780db71b77298d15b
      checksum/secret-jws: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-quoting-service-8c994cd6d-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: quoting-service
      app.kubernetes.io/version: 16.0.0
      helm.sh/chart: quoting-service-16.0.0
      pod-template-hash: 8c994cd6d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:checksum/secret-jws: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e66cb767-1ef7-48b6-9cb1-6dcc35cb4d6d"}: {}
        f:spec:
          f:containers:
            k:{"name":"quoting-service"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTE_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-quoting-service-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.178"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:48Z"
    name: moja-quoting-service-8c994cd6d-j6qzw
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-quoting-service-8c994cd6d
      uid: e66cb767-1ef7-48b6-9cb1-6dcc35cb4d6d
    resourceVersion: "250273736"
    uid: 5ace4dc0-a144-4042-baff-c19749efdbcc
  spec:
    containers:
    - command:
      - node
      - src/index.js
      env:
      - name: QUOTE_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      image: mojaloop/quoting-service:v17.7.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3002
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: quoting-service
      ports:
      - containerPort: 3002
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3002
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-quoting-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv95q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv95q
        readOnly: true
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: quoting-service
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: quoting-service
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: rules.json
          path: rules.json
        name: moja-quoting-service-config
      name: moja-quoting-service-config-volume
    - name: kube-api-access-wv95q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4bf1177ba88f902320002b49beee70edc374e779f3e423ef7a94cc9cabcdf17e
      image: docker.io/mojaloop/quoting-service:v17.7.1
      imageID: docker.io/mojaloop/quoting-service@sha256:6b6bdd555124377c37583174b9d7cbf05877f38701975b86b253eecb751419c5
      lastState: {}
      name: quoting-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:46Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-quoting-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv95q
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    initContainerStatuses:
    - containerID: containerd://2101bdcba1560144cc3aaf53174de527e7f5a01e6e43c4c639c59c42db196826
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2101bdcba1560144cc3aaf53174de527e7f5a01e6e43c4c639c59c42db196826
          exitCode: 0
          finishedAt: "2025-06-25T01:36:45Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv95q
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.178
    podIPs:
    - ip: 10.1.6.178
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 7cec78da682f57ebbb97d2e19621426071361dd6097fcdbb7187db810b8cf2cb
      checksum/secret: eda607e08aefd7cb9085c13074f56d95224f86a16797f60c533f12da926532bf
      checksum/secret-jws: f406dadf602ae98e0293453dbf51fe38ca5acee3afbb4a5089cdc2abaace1cbd
    creationTimestamp: "2025-06-25T01:36:43Z"
    generateName: moja-quoting-service-handler-8b86f98db-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: quoting-service-handler
      app.kubernetes.io/version: 16.0.0
      helm.sh/chart: quoting-service-handler-16.0.0
      pod-template-hash: 8b86f98db
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
            f:checksum/secret-jws: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5f7bf395-ea82-4f72-86de-e3b79028a015"}: {}
        f:spec:
          f:containers:
            k:{"name":"quoting-service-handler"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_FILTER"}:
                  .: {}
                  f:name: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTE_DATABASE__PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"UV_THREADPOOL_SIZE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config/default.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/app/config/rules.json"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/app/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-kafka"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KAFKA_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KAFKA_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"wait-for-mysql"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DB_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"DB_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DB_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"jws-signing-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"moja-quoting-service-handler-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:52Z"
    name: moja-quoting-service-handler-8b86f98db-ws9rr
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-quoting-service-handler-8b86f98db
      uid: 5f7bf395-ea82-4f72-86de-e3b79028a015
    resourceVersion: "250273779"
    uid: 75800f6f-6ce7-4c0e-930c-1049395d5f39
  spec:
    containers:
    - command:
      - node
      - src/handlers/index.js
      - handler
      - --quotes
      - --bulk_quotes
      - --fx_quotes
      env:
      - name: QUOTE_DATABASE__PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: LOG_LEVEL
        value: info
      - name: LOG_FILTER
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      - name: EVENT_SDK_LOG_METADATA_ONLY
        value: "false"
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojaloop
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "true"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      - name: UV_THREADPOOL_SIZE
        value: "20"
      image: mojaloop/quoting-service:v17.7.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3003
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: quoting-service-handler
      ports:
      - containerPort: 3003
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3003
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config/default.json
        name: moja-quoting-service-handler-config-volume
        subPath: default.json
      - mountPath: /opt/app/config/rules.json
        name: moja-quoting-service-handler-config-volume
        subPath: rules.json
      - mountPath: /opt/app/secrets
        name: jws-signing-key
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dfx4k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until ./bin/kafka-broker-api-versions.sh --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT};
        do echo --------------------; echo Waiting for Kafka...; sleep 2; done; echo
        ====================; echo Kafka ok!;
      env:
      - name: KAFKA_HOST
        value: kafka
      - name: KAFKA_PORT
        value: "9092"
      image: solsson/kafka:2.8.1
      imagePullPolicy: IfNotPresent
      name: wait-for-kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dfx4k
        readOnly: true
    - command:
      - sh
      - -c
      - |
        until result=$(mysql -h ${DB_HOST} -P ${DB_PORT} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_DATABASE} -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi;
        do
          echo --------------------;
          echo Waiting for MySQL...;
          sleep 2;
        done;
        echo ====================;
        echo MySQL ok!;
      env:
      - name: DB_HOST
        value: mysqldb
      - name: DB_PORT
        value: "3306"
      - name: DB_USER
        value: central_ledger
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: DB_DATABASE
        value: central_ledger
      image: mysql:9.0.1
      imagePullPolicy: IfNotPresent
      name: wait-for-mysql
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dfx4k
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: quoting-service-handler
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: quoting-service-handler
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: jws-signing-key
      secret:
        defaultMode: 420
        secretName: moja-quoting-service-handler-jws-signing-key
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        - key: rules.json
          path: rules.json
        name: moja-quoting-service-handler-config
      name: moja-quoting-service-handler-config-volume
    - name: kube-api-access-dfx4k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9158445b5fa360b147874b35a6cc5dd795bdc18bffd1fe0a57ecc1cbe7b67359
      image: docker.io/mojaloop/quoting-service:v17.7.1
      imageID: docker.io/mojaloop/quoting-service@sha256:6b6bdd555124377c37583174b9d7cbf05877f38701975b86b253eecb751419c5
      lastState: {}
      name: quoting-service-handler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:50Z"
      volumeMounts:
      - mountPath: /opt/app/config/default.json
        name: moja-quoting-service-handler-config-volume
      - mountPath: /opt/app/config/rules.json
        name: moja-quoting-service-handler-config-volume
      - mountPath: /opt/app/secrets
        name: jws-signing-key
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dfx4k
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://7919467ab805b23544e254d189974c78d798920c73f365ffdb200308bb082300
      image: docker.io/solsson/kafka:2.8.1
      imageID: docker.io/solsson/kafka@sha256:e6b6bf9ec86e45421789617345ba54c796ba18217fbce4bf053ab68b76ecdbea
      lastState: {}
      name: wait-for-kafka
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7919467ab805b23544e254d189974c78d798920c73f365ffdb200308bb082300
          exitCode: 0
          finishedAt: "2025-06-25T01:36:48Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dfx4k
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://7d30b4598fef2585a13ec0a6a006ea185819dd6b5cb3acd396dc4d50bae16ccf
      image: docker.io/library/mysql:9.0.1
      imageID: docker.io/library/mysql@sha256:92dc869678019f65d761155dacac660a904f6245bfe1b7997da0a73b2bfc68c9
      lastState: {}
      name: wait-for-mysql
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7d30b4598fef2585a13ec0a6a006ea185819dd6b5cb3acd396dc4d50bae16ccf
          exitCode: 0
          finishedAt: "2025-06-25T01:36:49Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:49Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dfx4k
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.120
    podIPs:
    - ip: 10.1.6.120
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-payeefsp-backend-9d6cc5d64-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-payeefsp-backend
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 9d6cc5d64
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-rules: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"053b3de9-5383-4820-b956-fb3fd7fbab05"}: {}
        f:spec:
          f:containers:
            k:{"name":"backend"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FEE_MULTIPLIER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTPS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MODEL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPORT_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RULES_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SCHEME_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIMULATOR_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SQLITE_LOG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/rules/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-sim-rules"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.28"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:50Z"
    name: moja-sim-payeefsp-backend-9d6cc5d64-gdlkp
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-payeefsp-backend-9d6cc5d64
      uid: 053b3de9-5383-4820-b956-fb3fd7fbab05
    resourceVersion: "250273356"
    uid: 31d5c29d-51aa-45a5-b701-5daa3803de00
  spec:
    containers:
    - env:
      - name: OUTBOUND_ENDPOINT
        value: http://moja-sim-payeefsp-scheme-adapter:4001
      - name: SCHEME_NAME
        value: moja-sim-payeefsp
      - name: DFSP_ID
        value: payeefsp
      - name: CA_CERT_PATH
        value: /secrets/cacert.pem
      - name: FEE_MULTIPLIER
        value: "0.05"
      - name: HTTPS_ENABLED
        value: "false"
      - name: LOG_INDENT
        value: "0"
      - name: MODEL_DATABASE
        value: ':memory:'
      - name: MUTUAL_TLS_ENABLED
        value: "false"
      - name: REPORT_API_LISTEN_PORT
        value: "3002"
      - name: RULES_FILE
        value: ../rules/rules.json
      - name: SERVER_CERT_PATH
        value: /secrets/servercert.pem
      - name: SERVER_KEY_PATH
        value: /secrets/serverkey.pem
      - name: SIMULATOR_API_LISTEN_PORT
        value: "3000"
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: SQLITE_LOG_FILE
        value: ':memory:'
      - name: TEST_API_LISTEN_PORT
        value: "3003"
      image: mojaloop/mojaloop-simulator:v15.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: backend
      ports:
      - containerPort: 3000
        name: simapi
        protocol: TCP
      - containerPort: 3002
        name: reportapi
        protocol: TCP
      - containerPort: 3003
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ztq8w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: moja-sim-payeefsp-rules
      name: moja-sim-rules
    - name: kube-api-access-ztq8w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://570f72e6c83fac767878d2a227ddc86f058adb9113ddda41fecd5ce8f9e968b1
      image: docker.io/mojaloop/mojaloop-simulator:v15.3.0
      imageID: docker.io/mojaloop/mojaloop-simulator@sha256:6ddc7cdad6472dae97ff9ed1f14139b3cc583672680f895618891ad70a294307
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ztq8w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.28
    podIPs:
    - ip: 10.1.6.28
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-payeefsp-cache-67858c987d-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-payeefsp-cache
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 67858c987d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ab293fcc-0412-4858-bfb9-7049229c6688"}: {}
        f:spec:
          f:containers:
            k:{"name":"cache"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.239"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:39Z"
    name: moja-sim-payeefsp-cache-67858c987d-mb8nj
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-payeefsp-cache-67858c987d
      uid: ab293fcc-0412-4858-bfb9-7049229c6688
    resourceVersion: "250272680"
    uid: 8d446c5e-c6f7-4944-ad40-79e5bee6d32d
  spec:
    containers:
    - image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cache
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghrlx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ghrlx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b2fe2f6c78a449d577106a33dd0848672f2fa60226de6ddf95fb9b6322cf517e
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ghrlx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.239
    podIPs:
    - ip: 10.1.6.239
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-jws-public-keys: 1aafb74d6475a5df9c6f7b652d0aa620754cb8e8929e47bf142eb3623b6ffeee
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
      checksum/secrets: 2becc1989826f352fd1f514d6de01662ec28ef23b57b7fd3c46ee784237174df
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-payeefsp-scheme-adapter-5d47b68cfb-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-payeefsp-scheme-adapter
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 5d47b68cfb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-jws-public-keys: {}
            f:checksum/config-rules: {}
            f:checksum/secrets: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fc658080-28e8-4c82-ae4f-c99fcd6056b8"}: {}
        f:spec:
          f:containers:
            k:{"name":"scheme-adapter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_TRANSFER_WITHOUT_QUOTE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"API_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_PARTY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BACKEND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_URL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHECK_ILP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_BACKEND_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_FSPIOP_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_TEST_FEATURES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPIRY_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN_PUT_PARTIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGNING_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_VERIFICATION_KEYS_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_REFRESH_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PEER_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_QUOTE_RESPONSES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_TRANSFER_FULFILS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_TRANSFERS_ON_EXPIRED_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REQUEST_PROCESSING_TIMEOUT_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESERVE_NOTIFICATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESOURCE_VERSIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_PUT_PARTIES_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WS02_BEARER_TOKEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WSO2_AUTH_FAILURE_REQUEST_RETRIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/jwsSigningKey/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/jwsVerificationKeys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-cache"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"jws-private-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"jws-public-keys"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.225"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:53Z"
    name: moja-sim-payeefsp-scheme-adapter-5d47b68cfb-hrbdq
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-payeefsp-scheme-adapter-5d47b68cfb
      uid: fc658080-28e8-4c82-ae4f-c99fcd6056b8
    resourceVersion: "250273385"
    uid: dfa127cf-f25a-4535-bd2e-0b05c4a3fb74
  spec:
    containers:
    - command:
      - yarn
      - start:api-svc
      env:
      - name: CACHE_URL
        value: redis://moja-sim-payeefsp-cache:6379
      - name: BACKEND_ENDPOINT
        value: moja-sim-payeefsp-backend:3000
      - name: DFSP_ID
        value: payeefsp
      - name: ALLOW_TRANSFER_WITHOUT_QUOTE
        value: "true"
      - name: ALS_ENDPOINT
        value: moja-account-lookup-service
      - name: API_TYPE
        value: fspiop
      - name: AUTO_ACCEPT_PARTY
        value: "true"
      - name: AUTO_ACCEPT_QUOTES
        value: "true"
      - name: BULK_QUOTES_ENDPOINT
        value: moja-bulk-quoting-service
      - name: BULK_TRANSFERS_ENDPOINT
        value: moja-bulk-api-adapter-service
      - name: CACHE_PORT
        value: "6379"
      - name: CHECK_ILP
        value: "true"
      - name: ENABLE_BACKEND_EVENT_HANDLER
        value: "false"
      - name: ENABLE_FSPIOP_EVENT_HANDLER
        value: "false"
      - name: ENABLE_OAUTH_TOKEN_ENDPOINT
        value: "false"
      - name: ENABLE_TEST_FEATURES
        value: "true"
      - name: EXPIRY_SECONDS
        value: "60"
      - name: ILP_SECRET
        value: Quaixohyaesahju3thivuiChai5cahng
      - name: ILP_VERSION
        value: "1"
      - name: INBOUND_LISTEN_PORT
        value: "4000"
      - name: INBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: IN_CA_CERT_PATH
        value: /secrets/inbound-cacert.pem
      - name: IN_SERVER_CERT_PATH
        value: /secrets/inbound-cert.pem
      - name: IN_SERVER_KEY_PATH
        value: /secrets/inbound-key.pem
      - name: JWS_SIGN
        value: "true"
      - name: JWS_SIGNING_KEY_PATH
        value: /jwsSigningKey/private.key
      - name: JWS_SIGN_PUT_PARTIES
        value: "true"
      - name: JWS_VERIFICATION_KEYS_DIRECTORY
        value: /secrets/jwsVerificationKeys
      - name: LOG_INDENT
        value: "0"
      - name: OAUTH_CLIENT_KEY
      - name: OAUTH_CLIENT_SECRET
      - name: OAUTH_REFRESH_SECONDS
        value: "3600"
      - name: OAUTH_TOKEN_ENDPOINT
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
        value: test-client-key
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
        value: test-client-secret
      - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
        value: "6000"
      - name: OUTBOUND_LISTEN_PORT
        value: "4001"
      - name: OUTBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: OUT_CA_CERT_PATH
        value: /secrets/outbound-cacert.pem
      - name: OUT_CLIENT_CERT_PATH
        value: /secrets/outbound-cert.pem
      - name: OUT_CLIENT_KEY_PATH
        value: /secrets/outbound-key.pem
      - name: PEER_ENDPOINT
        value: mojaloop-switch
      - name: QUOTES_ENDPOINT
        value: moja-quoting-service
      - name: REJECT_EXPIRED_QUOTE_RESPONSES
        value: "false"
      - name: REJECT_EXPIRED_TRANSFER_FULFILS
        value: "false"
      - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
        value: "false"
      - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
        value: "30"
      - name: RESERVE_NOTIFICATION
        value: "false"
      - name: RESOURCE_VERSIONS
        value: transfers=2.0,quotes=2.0,participants=1.1,parties=2.0,transactionRequests=1.1
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: TEST_LISTEN_PORT
        value: "4002"
      - name: TEST_MUTUAL_TLS_ENABLED
        value: "false"
      - name: TRANSACTION_REQUESTS_ENDPOINT
        value: moja-transaction-requests-service
      - name: TRANSFERS_ENDPOINT
        value: moja-ml-api-adapter-service
      - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
        value: "false"
      - name: VALIDATE_INBOUND_JWS
        value: "false"
      - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
        value: "true"
      - name: WS02_BEARER_TOKEN
        value: 7718fa9b-be13-3fe7-87f0-a12cf1628168
      - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
        value: "0"
      image: mojaloop/sdk-scheme-adapter:v24.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: scheme-adapter
      ports:
      - containerPort: 4000
        name: inboundapi
        protocol: TCP
      - containerPort: 4001
        name: outboundapi
        protocol: TCP
      - containerPort: 4002
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jql4q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until redis-cli -u redis://moja-sim-payeefsp-cache:6379 ping; do echo waiting
        for Redis; sleep 2; done;
      image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      name: wait-for-cache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jql4q
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jws-private-key
      secret:
        defaultMode: 420
        secretName: moja-sim-payeefsp-jws-priv-key
    - configMap:
        defaultMode: 420
        name: moja-sim-jws-public-keys
      name: jws-public-keys
    - name: tls-secrets
      secret:
        defaultMode: 420
        secretName: moja-sim-payeefsp-tls-creds
    - name: kube-api-access-jql4q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9cf3a1da402a5b5f855fc3ca6c490ae75621e777505ffa3c9300ccac6fbcc99b
      image: docker.io/mojaloop/sdk-scheme-adapter:v24.6.3
      imageID: docker.io/mojaloop/sdk-scheme-adapter@sha256:933d901505b713c2b3c9be9071378a64e49ac03529250cdc858f892b6e29b985
      lastState: {}
      name: scheme-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jql4q
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://4065a4271fffc0be41e2e6258ea9a4140f1f6cb9b4034cff12364fe4512d5b48
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: wait-for-cache
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4065a4271fffc0be41e2e6258ea9a4140f1f6cb9b4034cff12364fe4512d5b48
          exitCode: 0
          finishedAt: "2025-06-25T01:36:40Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jql4q
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.225
    podIPs:
    - ip: 10.1.6.225
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-sim-payerfsp-backend-6b6486dbf7-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-payerfsp-backend
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 6b6486dbf7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-rules: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2332715b-a8d5-4579-a482-a9cb229747ae"}: {}
        f:spec:
          f:containers:
            k:{"name":"backend"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FEE_MULTIPLIER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTPS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MODEL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPORT_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RULES_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SCHEME_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIMULATOR_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SQLITE_LOG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/rules/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-sim-rules"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.166"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:44Z"
    name: moja-sim-payerfsp-backend-6b6486dbf7-mt6hh
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-payerfsp-backend-6b6486dbf7
      uid: 2332715b-a8d5-4579-a482-a9cb229747ae
    resourceVersion: "250273215"
    uid: 587a7870-95f8-45c7-93b1-362e83c3c55e
  spec:
    containers:
    - env:
      - name: OUTBOUND_ENDPOINT
        value: http://moja-sim-payerfsp-scheme-adapter:4001
      - name: SCHEME_NAME
        value: moja-sim-payerfsp
      - name: DFSP_ID
        value: payerfsp
      - name: CA_CERT_PATH
        value: /secrets/cacert.pem
      - name: FEE_MULTIPLIER
        value: "0.05"
      - name: HTTPS_ENABLED
        value: "false"
      - name: LOG_INDENT
        value: "0"
      - name: MODEL_DATABASE
        value: ':memory:'
      - name: MUTUAL_TLS_ENABLED
        value: "false"
      - name: REPORT_API_LISTEN_PORT
        value: "3002"
      - name: RULES_FILE
        value: ../rules/rules.json
      - name: SERVER_CERT_PATH
        value: /secrets/servercert.pem
      - name: SERVER_KEY_PATH
        value: /secrets/serverkey.pem
      - name: SIMULATOR_API_LISTEN_PORT
        value: "3000"
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: SQLITE_LOG_FILE
        value: ':memory:'
      - name: TEST_API_LISTEN_PORT
        value: "3003"
      image: mojaloop/mojaloop-simulator:v15.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: backend
      ports:
      - containerPort: 3000
        name: simapi
        protocol: TCP
      - containerPort: 3002
        name: reportapi
        protocol: TCP
      - containerPort: 3003
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-grb4x
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: moja-sim-payerfsp-rules
      name: moja-sim-rules
    - name: kube-api-access-grb4x
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b3d9d52b650c65b090cafdf8c91bd674a17a16123e6f8db1100b12a619e6110a
      image: docker.io/mojaloop/mojaloop-simulator:v15.3.0
      imageID: docker.io/mojaloop/mojaloop-simulator@sha256:6ddc7cdad6472dae97ff9ed1f14139b3cc583672680f895618891ad70a294307
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-grb4x
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    phase: Running
    podIP: 10.1.6.166
    podIPs:
    - ip: 10.1.6.166
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:39Z"
    generateName: moja-sim-payerfsp-cache-6fd5548f69-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-payerfsp-cache
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 6fd5548f69
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"03ea36f0-09ed-4708-bdc3-8a85b93e2427"}: {}
        f:spec:
          f:containers:
            k:{"name":"cache"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.71"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:41Z"
    name: moja-sim-payerfsp-cache-6fd5548f69-tx2zs
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-payerfsp-cache-6fd5548f69
      uid: 03ea36f0-09ed-4708-bdc3-8a85b93e2427
    resourceVersion: "250272838"
    uid: 4595c146-24ea-4774-90de-238c58e53401
  spec:
    containers:
    - image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cache
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6whjg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6whjg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://43daa68be9b00503a59fd81406a7a98e60e94a5c9cd1d92da83b0e65767d7211
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6whjg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.71
    podIPs:
    - ip: 10.1.5.71
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-jws-public-keys: 1aafb74d6475a5df9c6f7b652d0aa620754cb8e8929e47bf142eb3623b6ffeee
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
      checksum/secrets: 2becc1989826f352fd1f514d6de01662ec28ef23b57b7fd3c46ee784237174df
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-sim-payerfsp-scheme-adapter-9c97f64c5-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-payerfsp-scheme-adapter
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 9c97f64c5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-jws-public-keys: {}
            f:checksum/config-rules: {}
            f:checksum/secrets: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"447fb44f-b883-4862-bb83-217d4b385b5a"}: {}
        f:spec:
          f:containers:
            k:{"name":"scheme-adapter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_TRANSFER_WITHOUT_QUOTE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"API_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_PARTY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BACKEND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_URL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHECK_ILP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_BACKEND_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_FSPIOP_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_TEST_FEATURES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPIRY_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN_PUT_PARTIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGNING_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_VERIFICATION_KEYS_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_REFRESH_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PEER_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_QUOTE_RESPONSES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_TRANSFER_FULFILS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_TRANSFERS_ON_EXPIRED_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REQUEST_PROCESSING_TIMEOUT_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESERVE_NOTIFICATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESOURCE_VERSIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_PUT_PARTIES_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WS02_BEARER_TOKEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WSO2_AUTH_FAILURE_REQUEST_RETRIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/jwsSigningKey/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/jwsVerificationKeys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-cache"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"jws-private-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"jws-public-keys"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.213"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:55Z"
    name: moja-sim-payerfsp-scheme-adapter-9c97f64c5-22t94
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-payerfsp-scheme-adapter-9c97f64c5
      uid: 447fb44f-b883-4862-bb83-217d4b385b5a
    resourceVersion: "250273417"
    uid: aee34c8d-4906-4200-b31e-8ea9b30cd0cb
  spec:
    containers:
    - command:
      - yarn
      - start:api-svc
      env:
      - name: CACHE_URL
        value: redis://moja-sim-payerfsp-cache:6379
      - name: BACKEND_ENDPOINT
        value: moja-sim-payerfsp-backend:3000
      - name: DFSP_ID
        value: payerfsp
      - name: ALLOW_TRANSFER_WITHOUT_QUOTE
        value: "true"
      - name: ALS_ENDPOINT
        value: moja-account-lookup-service
      - name: API_TYPE
        value: fspiop
      - name: AUTO_ACCEPT_PARTY
        value: "true"
      - name: AUTO_ACCEPT_QUOTES
        value: "true"
      - name: BULK_QUOTES_ENDPOINT
        value: moja-bulk-quoting-service
      - name: BULK_TRANSFERS_ENDPOINT
        value: moja-bulk-api-adapter-service
      - name: CACHE_PORT
        value: "6379"
      - name: CHECK_ILP
        value: "true"
      - name: ENABLE_BACKEND_EVENT_HANDLER
        value: "false"
      - name: ENABLE_FSPIOP_EVENT_HANDLER
        value: "false"
      - name: ENABLE_OAUTH_TOKEN_ENDPOINT
        value: "false"
      - name: ENABLE_TEST_FEATURES
        value: "true"
      - name: EXPIRY_SECONDS
        value: "60"
      - name: ILP_SECRET
        value: Quaixohyaesahju3thivuiChai5cahng
      - name: ILP_VERSION
        value: "1"
      - name: INBOUND_LISTEN_PORT
        value: "4000"
      - name: INBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: IN_CA_CERT_PATH
        value: /secrets/inbound-cacert.pem
      - name: IN_SERVER_CERT_PATH
        value: /secrets/inbound-cert.pem
      - name: IN_SERVER_KEY_PATH
        value: /secrets/inbound-key.pem
      - name: JWS_SIGN
        value: "true"
      - name: JWS_SIGNING_KEY_PATH
        value: /jwsSigningKey/private.key
      - name: JWS_SIGN_PUT_PARTIES
        value: "true"
      - name: JWS_VERIFICATION_KEYS_DIRECTORY
        value: /secrets/jwsVerificationKeys
      - name: LOG_INDENT
        value: "0"
      - name: OAUTH_CLIENT_KEY
      - name: OAUTH_CLIENT_SECRET
      - name: OAUTH_REFRESH_SECONDS
        value: "3600"
      - name: OAUTH_TOKEN_ENDPOINT
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
        value: test-client-key
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
        value: test-client-secret
      - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
        value: "6000"
      - name: OUTBOUND_LISTEN_PORT
        value: "4001"
      - name: OUTBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: OUT_CA_CERT_PATH
        value: /secrets/outbound-cacert.pem
      - name: OUT_CLIENT_CERT_PATH
        value: /secrets/outbound-cert.pem
      - name: OUT_CLIENT_KEY_PATH
        value: /secrets/outbound-key.pem
      - name: PEER_ENDPOINT
        value: mojaloop-switch
      - name: QUOTES_ENDPOINT
        value: moja-quoting-service
      - name: REJECT_EXPIRED_QUOTE_RESPONSES
        value: "false"
      - name: REJECT_EXPIRED_TRANSFER_FULFILS
        value: "false"
      - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
        value: "false"
      - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
        value: "30"
      - name: RESERVE_NOTIFICATION
        value: "false"
      - name: RESOURCE_VERSIONS
        value: transfers=2.0,quotes=2.0,participants=1.1,parties=2.0,transactionRequests=1.1
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: TEST_LISTEN_PORT
        value: "4002"
      - name: TEST_MUTUAL_TLS_ENABLED
        value: "false"
      - name: TRANSACTION_REQUESTS_ENDPOINT
        value: moja-transaction-requests-service
      - name: TRANSFERS_ENDPOINT
        value: moja-ml-api-adapter-service
      - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
        value: "false"
      - name: VALIDATE_INBOUND_JWS
        value: "false"
      - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
        value: "true"
      - name: WS02_BEARER_TOKEN
        value: 7718fa9b-be13-3fe7-87f0-a12cf1628168
      - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
        value: "0"
      image: mojaloop/sdk-scheme-adapter:v24.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: scheme-adapter
      ports:
      - containerPort: 4000
        name: inboundapi
        protocol: TCP
      - containerPort: 4001
        name: outboundapi
        protocol: TCP
      - containerPort: 4002
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpqdm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until redis-cli -u redis://moja-sim-payerfsp-cache:6379 ping; do echo waiting
        for Redis; sleep 2; done;
      image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      name: wait-for-cache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpqdm
        readOnly: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jws-private-key
      secret:
        defaultMode: 420
        secretName: moja-sim-payerfsp-jws-priv-key
    - configMap:
        defaultMode: 420
        name: moja-sim-jws-public-keys
      name: jws-public-keys
    - name: tls-secrets
      secret:
        defaultMode: 420
        secretName: moja-sim-payerfsp-tls-creds
    - name: kube-api-access-hpqdm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4e066dc38fba8ea1464ac82138a7a1a2fe82c0ca9a978587f6f82da276d8804b
      image: docker.io/mojaloop/sdk-scheme-adapter:v24.6.3
      imageID: docker.io/mojaloop/sdk-scheme-adapter@sha256:933d901505b713c2b3c9be9071378a64e49ac03529250cdc858f892b6e29b985
      lastState: {}
      name: scheme-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpqdm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    initContainerStatuses:
    - containerID: containerd://5393c6ab1756218161de68692458d97c748fc6c55b1a710778a3a677fae864e4
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: wait-for-cache
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5393c6ab1756218161de68692458d97c748fc6c55b1a710778a3a677fae864e4
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpqdm
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.213
    podIPs:
    - ip: 10.1.5.213
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-sim-testfsp1-backend-74689c6b75-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp1-backend
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 74689c6b75
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-rules: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d299d1e3-1890-4567-b9a4-23d52c8e6f57"}: {}
        f:spec:
          f:containers:
            k:{"name":"backend"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FEE_MULTIPLIER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTPS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MODEL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPORT_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RULES_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SCHEME_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIMULATOR_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SQLITE_LOG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/rules/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-sim-rules"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.96"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:44Z"
    name: moja-sim-testfsp1-backend-74689c6b75-24cfc
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp1-backend-74689c6b75
      uid: d299d1e3-1890-4567-b9a4-23d52c8e6f57
    resourceVersion: "250273223"
    uid: 94821578-a82c-43ac-818f-5eb7f3f75ef8
  spec:
    containers:
    - env:
      - name: OUTBOUND_ENDPOINT
        value: http://moja-sim-testfsp1-scheme-adapter:4001
      - name: SCHEME_NAME
        value: moja-sim-testfsp1
      - name: DFSP_ID
        value: testfsp1
      - name: CA_CERT_PATH
        value: /secrets/cacert.pem
      - name: FEE_MULTIPLIER
        value: "0.05"
      - name: HTTPS_ENABLED
        value: "false"
      - name: LOG_INDENT
        value: "0"
      - name: MODEL_DATABASE
        value: ':memory:'
      - name: MUTUAL_TLS_ENABLED
        value: "false"
      - name: REPORT_API_LISTEN_PORT
        value: "3002"
      - name: RULES_FILE
        value: ../rules/rules.json
      - name: SERVER_CERT_PATH
        value: /secrets/servercert.pem
      - name: SERVER_KEY_PATH
        value: /secrets/serverkey.pem
      - name: SIMULATOR_API_LISTEN_PORT
        value: "3000"
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: SQLITE_LOG_FILE
        value: ':memory:'
      - name: TEST_API_LISTEN_PORT
        value: "3003"
      image: mojaloop/mojaloop-simulator:v15.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: backend
      ports:
      - containerPort: 3000
        name: simapi
        protocol: TCP
      - containerPort: 3002
        name: reportapi
        protocol: TCP
      - containerPort: 3003
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9ftm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: moja-sim-testfsp1-rules
      name: moja-sim-rules
    - name: kube-api-access-n9ftm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f7f5ee4be085dd7e7d12b87bf952bff69c9630445183e46648a6a920c4c84e83
      image: docker.io/mojaloop/mojaloop-simulator:v15.3.0
      imageID: docker.io/mojaloop/mojaloop-simulator@sha256:6ddc7cdad6472dae97ff9ed1f14139b3cc583672680f895618891ad70a294307
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9ftm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    phase: Running
    podIP: 10.1.6.96
    podIPs:
    - ip: 10.1.6.96
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:39Z"
    generateName: moja-sim-testfsp1-cache-59f5f97959-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp1-cache
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 59f5f97959
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cae40865-627c-46f2-a1a7-9f60a102c00f"}: {}
        f:spec:
          f:containers:
            k:{"name":"cache"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.95"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:40Z"
    name: moja-sim-testfsp1-cache-59f5f97959-lp6r7
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp1-cache-59f5f97959
      uid: cae40865-627c-46f2-a1a7-9f60a102c00f
    resourceVersion: "250272778"
    uid: f0d9bd8e-7ee1-452a-b248-35ed15ef6cf9
  spec:
    containers:
    - image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cache
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9jk2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-l9jk2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bcb3184f3be6bb51b3c383276fa3a7386def0d4c72bd156d46d9167011598ef3
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9jk2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    phase: Running
    podIP: 10.1.6.95
    podIPs:
    - ip: 10.1.6.95
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-jws-public-keys: 1aafb74d6475a5df9c6f7b652d0aa620754cb8e8929e47bf142eb3623b6ffeee
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
      checksum/secrets: 2becc1989826f352fd1f514d6de01662ec28ef23b57b7fd3c46ee784237174df
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-sim-testfsp1-scheme-adapter-6b58577bd9-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp1-scheme-adapter
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 6b58577bd9
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-jws-public-keys: {}
            f:checksum/config-rules: {}
            f:checksum/secrets: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"fe0a5741-68b3-4aa1-8332-9f8aa3525c9d"}: {}
        f:spec:
          f:containers:
            k:{"name":"scheme-adapter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_TRANSFER_WITHOUT_QUOTE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"API_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_PARTY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BACKEND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_URL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHECK_ILP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_BACKEND_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_FSPIOP_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_TEST_FEATURES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPIRY_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN_PUT_PARTIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGNING_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_VERIFICATION_KEYS_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_REFRESH_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PEER_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_QUOTE_RESPONSES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_TRANSFER_FULFILS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_TRANSFERS_ON_EXPIRED_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REQUEST_PROCESSING_TIMEOUT_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESERVE_NOTIFICATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESOURCE_VERSIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_PUT_PARTIES_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WS02_BEARER_TOKEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WSO2_AUTH_FAILURE_REQUEST_RETRIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/jwsSigningKey/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/jwsVerificationKeys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-cache"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"jws-private-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"jws-public-keys"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.202"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:56Z"
    name: moja-sim-testfsp1-scheme-adapter-6b58577bd9-srt94
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp1-scheme-adapter-6b58577bd9
      uid: fe0a5741-68b3-4aa1-8332-9f8aa3525c9d
    resourceVersion: "250273426"
    uid: 60426c59-9a54-4e93-86be-477c6c08b526
  spec:
    containers:
    - command:
      - yarn
      - start:api-svc
      env:
      - name: CACHE_URL
        value: redis://moja-sim-testfsp1-cache:6379
      - name: BACKEND_ENDPOINT
        value: moja-sim-testfsp1-backend:3000
      - name: DFSP_ID
        value: testfsp1
      - name: ALLOW_TRANSFER_WITHOUT_QUOTE
        value: "true"
      - name: ALS_ENDPOINT
        value: moja-account-lookup-service
      - name: API_TYPE
        value: fspiop
      - name: AUTO_ACCEPT_PARTY
        value: "true"
      - name: AUTO_ACCEPT_QUOTES
        value: "true"
      - name: BULK_QUOTES_ENDPOINT
        value: moja-bulk-quoting-service
      - name: BULK_TRANSFERS_ENDPOINT
        value: moja-bulk-api-adapter-service
      - name: CACHE_PORT
        value: "6379"
      - name: CHECK_ILP
        value: "true"
      - name: ENABLE_BACKEND_EVENT_HANDLER
        value: "false"
      - name: ENABLE_FSPIOP_EVENT_HANDLER
        value: "false"
      - name: ENABLE_OAUTH_TOKEN_ENDPOINT
        value: "false"
      - name: ENABLE_TEST_FEATURES
        value: "true"
      - name: EXPIRY_SECONDS
        value: "60"
      - name: ILP_SECRET
        value: Quaixohyaesahju3thivuiChai5cahng
      - name: ILP_VERSION
        value: "1"
      - name: INBOUND_LISTEN_PORT
        value: "4000"
      - name: INBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: IN_CA_CERT_PATH
        value: /secrets/inbound-cacert.pem
      - name: IN_SERVER_CERT_PATH
        value: /secrets/inbound-cert.pem
      - name: IN_SERVER_KEY_PATH
        value: /secrets/inbound-key.pem
      - name: JWS_SIGN
        value: "true"
      - name: JWS_SIGNING_KEY_PATH
        value: /jwsSigningKey/private.key
      - name: JWS_SIGN_PUT_PARTIES
        value: "true"
      - name: JWS_VERIFICATION_KEYS_DIRECTORY
        value: /secrets/jwsVerificationKeys
      - name: LOG_INDENT
        value: "0"
      - name: OAUTH_CLIENT_KEY
      - name: OAUTH_CLIENT_SECRET
      - name: OAUTH_REFRESH_SECONDS
        value: "3600"
      - name: OAUTH_TOKEN_ENDPOINT
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
        value: test-client-key
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
        value: test-client-secret
      - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
        value: "6000"
      - name: OUTBOUND_LISTEN_PORT
        value: "4001"
      - name: OUTBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: OUT_CA_CERT_PATH
        value: /secrets/outbound-cacert.pem
      - name: OUT_CLIENT_CERT_PATH
        value: /secrets/outbound-cert.pem
      - name: OUT_CLIENT_KEY_PATH
        value: /secrets/outbound-key.pem
      - name: PEER_ENDPOINT
        value: mojaloop-switch
      - name: QUOTES_ENDPOINT
        value: moja-quoting-service
      - name: REJECT_EXPIRED_QUOTE_RESPONSES
        value: "false"
      - name: REJECT_EXPIRED_TRANSFER_FULFILS
        value: "false"
      - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
        value: "false"
      - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
        value: "30"
      - name: RESERVE_NOTIFICATION
        value: "false"
      - name: RESOURCE_VERSIONS
        value: transfers=2.0,quotes=2.0,participants=1.1,parties=2.0,transactionRequests=1.1
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: TEST_LISTEN_PORT
        value: "4002"
      - name: TEST_MUTUAL_TLS_ENABLED
        value: "false"
      - name: TRANSACTION_REQUESTS_ENDPOINT
        value: moja-transaction-requests-service
      - name: TRANSFERS_ENDPOINT
        value: moja-ml-api-adapter-service
      - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
        value: "false"
      - name: VALIDATE_INBOUND_JWS
        value: "false"
      - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
        value: "true"
      - name: WS02_BEARER_TOKEN
        value: 7718fa9b-be13-3fe7-87f0-a12cf1628168
      - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
        value: "0"
      image: mojaloop/sdk-scheme-adapter:v24.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: scheme-adapter
      ports:
      - containerPort: 4000
        name: inboundapi
        protocol: TCP
      - containerPort: 4001
        name: outboundapi
        protocol: TCP
      - containerPort: 4002
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vfk7s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until redis-cli -u redis://moja-sim-testfsp1-cache:6379 ping; do echo waiting
        for Redis; sleep 2; done;
      image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      name: wait-for-cache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vfk7s
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jws-private-key
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp1-jws-priv-key
    - configMap:
        defaultMode: 420
        name: moja-sim-jws-public-keys
      name: jws-public-keys
    - name: tls-secrets
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp1-tls-creds
    - name: kube-api-access-vfk7s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://12e723f32e8dc880ff57391fde99a22f52cf8c335a196bed07b83cbadf454cf5
      image: docker.io/mojaloop/sdk-scheme-adapter:v24.6.3
      imageID: docker.io/mojaloop/sdk-scheme-adapter@sha256:933d901505b713c2b3c9be9071378a64e49ac03529250cdc858f892b6e29b985
      lastState: {}
      name: scheme-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:44Z"
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vfk7s
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://d2029aed9e7fb141e2209d6faa206c6e45f0c0d28a44e55cba51d82cde09ef8e
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: wait-for-cache
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d2029aed9e7fb141e2209d6faa206c6e45f0c0d28a44e55cba51d82cde09ef8e
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vfk7s
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.202
    podIPs:
    - ip: 10.1.6.202
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
    creationTimestamp: "2025-06-25T01:36:40Z"
    generateName: moja-sim-testfsp2-backend-5cb8d94bfb-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp2-backend
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 5cb8d94bfb
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-rules: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e5df34dd-ae68-4e18-9b11-01b3d85d459d"}: {}
        f:spec:
          f:containers:
            k:{"name":"backend"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FEE_MULTIPLIER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTPS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MODEL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPORT_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RULES_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SCHEME_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIMULATOR_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SQLITE_LOG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/rules/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-sim-rules"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.218"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:51Z"
    name: moja-sim-testfsp2-backend-5cb8d94bfb-m8g7m
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp2-backend-5cb8d94bfb
      uid: e5df34dd-ae68-4e18-9b11-01b3d85d459d
    resourceVersion: "250273372"
    uid: 07381364-addb-411a-a4c3-51a9c795f6cc
  spec:
    containers:
    - env:
      - name: OUTBOUND_ENDPOINT
        value: http://moja-sim-testfsp2-scheme-adapter:4001
      - name: SCHEME_NAME
        value: moja-sim-testfsp2
      - name: DFSP_ID
        value: testfsp2
      - name: CA_CERT_PATH
        value: /secrets/cacert.pem
      - name: FEE_MULTIPLIER
        value: "0.05"
      - name: HTTPS_ENABLED
        value: "false"
      - name: LOG_INDENT
        value: "0"
      - name: MODEL_DATABASE
        value: ':memory:'
      - name: MUTUAL_TLS_ENABLED
        value: "false"
      - name: REPORT_API_LISTEN_PORT
        value: "3002"
      - name: RULES_FILE
        value: ../rules/rules.json
      - name: SERVER_CERT_PATH
        value: /secrets/servercert.pem
      - name: SERVER_KEY_PATH
        value: /secrets/serverkey.pem
      - name: SIMULATOR_API_LISTEN_PORT
        value: "3000"
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: SQLITE_LOG_FILE
        value: ':memory:'
      - name: TEST_API_LISTEN_PORT
        value: "3003"
      image: mojaloop/mojaloop-simulator:v15.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: backend
      ports:
      - containerPort: 3000
        name: simapi
        protocol: TCP
      - containerPort: 3002
        name: reportapi
        protocol: TCP
      - containerPort: 3003
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ncm8w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: moja-sim-testfsp2-rules
      name: moja-sim-rules
    - name: kube-api-access-ncm8w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e77dda578297a36a9f528aba8ec9768f37aa24a1981a68f28b2ac2e2c8efcbe2
      image: docker.io/mojaloop/mojaloop-simulator:v15.3.0
      imageID: docker.io/mojaloop/mojaloop-simulator@sha256:6ddc7cdad6472dae97ff9ed1f14139b3cc583672680f895618891ad70a294307
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:40Z"
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ncm8w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    phase: Running
    podIP: 10.1.6.218
    podIPs:
    - ip: 10.1.6.218
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-testfsp2-cache-67b6c9998-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp2-cache
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 67b6c9998
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"43d526b3-4a15-40b9-9c21-eb278e9cb99f"}: {}
        f:spec:
          f:containers:
            k:{"name":"cache"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.226"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:38Z"
    name: moja-sim-testfsp2-cache-67b6c9998-7s6vd
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp2-cache-67b6c9998
      uid: 43d526b3-4a15-40b9-9c21-eb278e9cb99f
    resourceVersion: "250272570"
    uid: 10408af9-d4b1-4f20-b84d-c9eed88db700
  spec:
    containers:
    - image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cache
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hrxxk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hrxxk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4412eb32a46af5000fae630786958167211faed71317d499ec4dbc0e6693bdb0
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hrxxk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    phase: Running
    podIP: 10.1.5.226
    podIPs:
    - ip: 10.1.5.226
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-jws-public-keys: 1aafb74d6475a5df9c6f7b652d0aa620754cb8e8929e47bf142eb3623b6ffeee
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
      checksum/secrets: 2becc1989826f352fd1f514d6de01662ec28ef23b57b7fd3c46ee784237174df
    creationTimestamp: "2025-06-25T01:36:39Z"
    generateName: moja-sim-testfsp2-scheme-adapter-68dc76f5bd-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp2-scheme-adapter
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 68dc76f5bd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-jws-public-keys: {}
            f:checksum/config-rules: {}
            f:checksum/secrets: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"10d3ce57-e8ae-41d4-b349-12acd940cef7"}: {}
        f:spec:
          f:containers:
            k:{"name":"scheme-adapter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_TRANSFER_WITHOUT_QUOTE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"API_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_PARTY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BACKEND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_URL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHECK_ILP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_BACKEND_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_FSPIOP_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_TEST_FEATURES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPIRY_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN_PUT_PARTIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGNING_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_VERIFICATION_KEYS_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_REFRESH_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PEER_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_QUOTE_RESPONSES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_TRANSFER_FULFILS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_TRANSFERS_ON_EXPIRED_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REQUEST_PROCESSING_TIMEOUT_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESERVE_NOTIFICATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESOURCE_VERSIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_PUT_PARTIES_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WS02_BEARER_TOKEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WSO2_AUTH_FAILURE_REQUEST_RETRIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/jwsSigningKey/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/jwsVerificationKeys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-cache"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"jws-private-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"jws-public-keys"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.229"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:53Z"
    name: moja-sim-testfsp2-scheme-adapter-68dc76f5bd-pbgvr
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp2-scheme-adapter-68dc76f5bd
      uid: 10d3ce57-e8ae-41d4-b349-12acd940cef7
    resourceVersion: "250273389"
    uid: 65b295d3-88ca-458a-955c-820bee2e1e08
  spec:
    containers:
    - command:
      - yarn
      - start:api-svc
      env:
      - name: CACHE_URL
        value: redis://moja-sim-testfsp2-cache:6379
      - name: BACKEND_ENDPOINT
        value: moja-sim-testfsp2-backend:3000
      - name: DFSP_ID
        value: testfsp2
      - name: ALLOW_TRANSFER_WITHOUT_QUOTE
        value: "true"
      - name: ALS_ENDPOINT
        value: moja-account-lookup-service
      - name: API_TYPE
        value: fspiop
      - name: AUTO_ACCEPT_PARTY
        value: "true"
      - name: AUTO_ACCEPT_QUOTES
        value: "true"
      - name: BULK_QUOTES_ENDPOINT
        value: moja-bulk-quoting-service
      - name: BULK_TRANSFERS_ENDPOINT
        value: moja-bulk-api-adapter-service
      - name: CACHE_PORT
        value: "6379"
      - name: CHECK_ILP
        value: "true"
      - name: ENABLE_BACKEND_EVENT_HANDLER
        value: "false"
      - name: ENABLE_FSPIOP_EVENT_HANDLER
        value: "false"
      - name: ENABLE_OAUTH_TOKEN_ENDPOINT
        value: "false"
      - name: ENABLE_TEST_FEATURES
        value: "true"
      - name: EXPIRY_SECONDS
        value: "60"
      - name: ILP_SECRET
        value: Quaixohyaesahju3thivuiChai5cahng
      - name: ILP_VERSION
        value: "1"
      - name: INBOUND_LISTEN_PORT
        value: "4000"
      - name: INBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: IN_CA_CERT_PATH
        value: /secrets/inbound-cacert.pem
      - name: IN_SERVER_CERT_PATH
        value: /secrets/inbound-cert.pem
      - name: IN_SERVER_KEY_PATH
        value: /secrets/inbound-key.pem
      - name: JWS_SIGN
        value: "true"
      - name: JWS_SIGNING_KEY_PATH
        value: /jwsSigningKey/private.key
      - name: JWS_SIGN_PUT_PARTIES
        value: "true"
      - name: JWS_VERIFICATION_KEYS_DIRECTORY
        value: /secrets/jwsVerificationKeys
      - name: LOG_INDENT
        value: "0"
      - name: OAUTH_CLIENT_KEY
      - name: OAUTH_CLIENT_SECRET
      - name: OAUTH_REFRESH_SECONDS
        value: "3600"
      - name: OAUTH_TOKEN_ENDPOINT
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
        value: test-client-key
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
        value: test-client-secret
      - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
        value: "6000"
      - name: OUTBOUND_LISTEN_PORT
        value: "4001"
      - name: OUTBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: OUT_CA_CERT_PATH
        value: /secrets/outbound-cacert.pem
      - name: OUT_CLIENT_CERT_PATH
        value: /secrets/outbound-cert.pem
      - name: OUT_CLIENT_KEY_PATH
        value: /secrets/outbound-key.pem
      - name: PEER_ENDPOINT
        value: mojaloop-switch
      - name: QUOTES_ENDPOINT
        value: moja-quoting-service
      - name: REJECT_EXPIRED_QUOTE_RESPONSES
        value: "false"
      - name: REJECT_EXPIRED_TRANSFER_FULFILS
        value: "false"
      - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
        value: "false"
      - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
        value: "30"
      - name: RESERVE_NOTIFICATION
        value: "false"
      - name: RESOURCE_VERSIONS
        value: transfers=2.0,quotes=2.0,participants=1.1,parties=2.0,transactionRequests=1.1
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: TEST_LISTEN_PORT
        value: "4002"
      - name: TEST_MUTUAL_TLS_ENABLED
        value: "false"
      - name: TRANSACTION_REQUESTS_ENDPOINT
        value: moja-transaction-requests-service
      - name: TRANSFERS_ENDPOINT
        value: moja-ml-api-adapter-service
      - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
        value: "false"
      - name: VALIDATE_INBOUND_JWS
        value: "false"
      - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
        value: "true"
      - name: WS02_BEARER_TOKEN
        value: 7718fa9b-be13-3fe7-87f0-a12cf1628168
      - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
        value: "0"
      image: mojaloop/sdk-scheme-adapter:v24.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: scheme-adapter
      ports:
      - containerPort: 4000
        name: inboundapi
        protocol: TCP
      - containerPort: 4001
        name: outboundapi
        protocol: TCP
      - containerPort: 4002
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sbgnm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until redis-cli -u redis://moja-sim-testfsp2-cache:6379 ping; do echo waiting
        for Redis; sleep 2; done;
      image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      name: wait-for-cache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sbgnm
        readOnly: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jws-private-key
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp2-jws-priv-key
    - configMap:
        defaultMode: 420
        name: moja-sim-jws-public-keys
      name: jws-public-keys
    - name: tls-secrets
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp2-tls-creds
    - name: kube-api-access-sbgnm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://84d265b239a4b5e31c29c0f1be64063271b4dc1823e72c340ef3295ee9e2153b
      image: docker.io/mojaloop/sdk-scheme-adapter:v24.6.3
      imageID: docker.io/mojaloop/sdk-scheme-adapter@sha256:933d901505b713c2b3c9be9071378a64e49ac03529250cdc858f892b6e29b985
      lastState: {}
      name: scheme-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sbgnm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    initContainerStatuses:
    - containerID: containerd://0c78c9c08677434aec853f1d78de6f12bc8f29fe540f52ce3e69807e204cb4a8
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: wait-for-cache
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0c78c9c08677434aec853f1d78de6f12bc8f29fe540f52ce3e69807e204cb4a8
          exitCode: 0
          finishedAt: "2025-06-25T01:36:40Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:40Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sbgnm
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.229
    podIPs:
    - ip: 10.1.6.229
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
    creationTimestamp: "2025-06-25T01:36:41Z"
    generateName: moja-sim-testfsp3-backend-8b9665c6f-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp3-backend
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 8b9665c6f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-rules: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f85c84d2-2f73-47c7-9d7c-6687c1f07536"}: {}
        f:spec:
          f:containers:
            k:{"name":"backend"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FEE_MULTIPLIER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTPS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MODEL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPORT_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RULES_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SCHEME_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIMULATOR_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SQLITE_LOG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/rules/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-sim-rules"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.192"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:43Z"
    name: moja-sim-testfsp3-backend-8b9665c6f-cq4rg
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp3-backend-8b9665c6f
      uid: f85c84d2-2f73-47c7-9d7c-6687c1f07536
    resourceVersion: "250273059"
    uid: 03b34f09-8881-4ee4-8a96-eb1a3c58eaec
  spec:
    containers:
    - env:
      - name: OUTBOUND_ENDPOINT
        value: http://moja-sim-testfsp3-scheme-adapter:4001
      - name: SCHEME_NAME
        value: moja-sim-testfsp3
      - name: DFSP_ID
        value: testfsp3
      - name: CA_CERT_PATH
        value: /secrets/cacert.pem
      - name: FEE_MULTIPLIER
        value: "0.05"
      - name: HTTPS_ENABLED
        value: "false"
      - name: LOG_INDENT
        value: "0"
      - name: MODEL_DATABASE
        value: ':memory:'
      - name: MUTUAL_TLS_ENABLED
        value: "false"
      - name: REPORT_API_LISTEN_PORT
        value: "3002"
      - name: RULES_FILE
        value: ../rules/rules.json
      - name: SERVER_CERT_PATH
        value: /secrets/servercert.pem
      - name: SERVER_KEY_PATH
        value: /secrets/serverkey.pem
      - name: SIMULATOR_API_LISTEN_PORT
        value: "3000"
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: SQLITE_LOG_FILE
        value: ':memory:'
      - name: TEST_API_LISTEN_PORT
        value: "3003"
      image: mojaloop/mojaloop-simulator:v15.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: backend
      ports:
      - containerPort: 3000
        name: simapi
        protocol: TCP
      - containerPort: 3002
        name: reportapi
        protocol: TCP
      - containerPort: 3003
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6tpjm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: moja-sim-testfsp3-rules
      name: moja-sim-rules
    - name: kube-api-access-6tpjm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://509cde8b1763721067bf1032b2fe6187353a2ff7ccb561721a69e92283b9cf8f
      image: docker.io/mojaloop/mojaloop-simulator:v15.3.0
      imageID: docker.io/mojaloop/mojaloop-simulator@sha256:6ddc7cdad6472dae97ff9ed1f14139b3cc583672680f895618891ad70a294307
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6tpjm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.192
    podIPs:
    - ip: 10.1.5.192
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-testfsp3-cache-78f6b58f7c-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp3-cache
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 78f6b58f7c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"3289b77a-1cc4-43ae-be1a-11b1d3a303f9"}: {}
        f:spec:
          f:containers:
            k:{"name":"cache"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.199"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:38Z"
    name: moja-sim-testfsp3-cache-78f6b58f7c-sr6vr
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp3-cache-78f6b58f7c
      uid: 3289b77a-1cc4-43ae-be1a-11b1d3a303f9
    resourceVersion: "250272567"
    uid: 938ea672-d672-4c1b-a187-7b352a404eb1
  spec:
    containers:
    - image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cache
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2dsfs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2dsfs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad7ee7e8f81cf10504419c47c91060e719206c47c1774bbd7cd58fe607f1ad07
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2dsfs
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    phase: Running
    podIP: 10.1.5.199
    podIPs:
    - ip: 10.1.5.199
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-jws-public-keys: 1aafb74d6475a5df9c6f7b652d0aa620754cb8e8929e47bf142eb3623b6ffeee
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
      checksum/secrets: 2becc1989826f352fd1f514d6de01662ec28ef23b57b7fd3c46ee784237174df
    creationTimestamp: "2025-06-25T01:36:42Z"
    generateName: moja-sim-testfsp3-scheme-adapter-67cd66b975-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp3-scheme-adapter
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 67cd66b975
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-jws-public-keys: {}
            f:checksum/config-rules: {}
            f:checksum/secrets: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e3f1e92d-0fc5-484b-89d7-d212e191c7ee"}: {}
        f:spec:
          f:containers:
            k:{"name":"scheme-adapter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_TRANSFER_WITHOUT_QUOTE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"API_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_PARTY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BACKEND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_URL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHECK_ILP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_BACKEND_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_FSPIOP_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_TEST_FEATURES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPIRY_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN_PUT_PARTIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGNING_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_VERIFICATION_KEYS_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_REFRESH_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PEER_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_QUOTE_RESPONSES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_TRANSFER_FULFILS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_TRANSFERS_ON_EXPIRED_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REQUEST_PROCESSING_TIMEOUT_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESERVE_NOTIFICATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESOURCE_VERSIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_PUT_PARTIES_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WS02_BEARER_TOKEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WSO2_AUTH_FAILURE_REQUEST_RETRIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/jwsSigningKey/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/jwsVerificationKeys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-cache"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"jws-private-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"jws-public-keys"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.47"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:55Z"
    name: moja-sim-testfsp3-scheme-adapter-67cd66b975-4ch4t
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp3-scheme-adapter-67cd66b975
      uid: e3f1e92d-0fc5-484b-89d7-d212e191c7ee
    resourceVersion: "250273410"
    uid: faa67279-d561-4c78-ba8a-84e52391d122
  spec:
    containers:
    - command:
      - yarn
      - start:api-svc
      env:
      - name: CACHE_URL
        value: redis://moja-sim-testfsp3-cache:6379
      - name: BACKEND_ENDPOINT
        value: moja-sim-testfsp3-backend:3000
      - name: DFSP_ID
        value: testfsp3
      - name: ALLOW_TRANSFER_WITHOUT_QUOTE
        value: "true"
      - name: ALS_ENDPOINT
        value: moja-account-lookup-service
      - name: API_TYPE
        value: fspiop
      - name: AUTO_ACCEPT_PARTY
        value: "true"
      - name: AUTO_ACCEPT_QUOTES
        value: "true"
      - name: BULK_QUOTES_ENDPOINT
        value: moja-bulk-quoting-service
      - name: BULK_TRANSFERS_ENDPOINT
        value: moja-bulk-api-adapter-service
      - name: CACHE_PORT
        value: "6379"
      - name: CHECK_ILP
        value: "true"
      - name: ENABLE_BACKEND_EVENT_HANDLER
        value: "false"
      - name: ENABLE_FSPIOP_EVENT_HANDLER
        value: "false"
      - name: ENABLE_OAUTH_TOKEN_ENDPOINT
        value: "false"
      - name: ENABLE_TEST_FEATURES
        value: "true"
      - name: EXPIRY_SECONDS
        value: "60"
      - name: ILP_SECRET
        value: Quaixohyaesahju3thivuiChai5cahng
      - name: ILP_VERSION
        value: "1"
      - name: INBOUND_LISTEN_PORT
        value: "4000"
      - name: INBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: IN_CA_CERT_PATH
        value: /secrets/inbound-cacert.pem
      - name: IN_SERVER_CERT_PATH
        value: /secrets/inbound-cert.pem
      - name: IN_SERVER_KEY_PATH
        value: /secrets/inbound-key.pem
      - name: JWS_SIGN
        value: "true"
      - name: JWS_SIGNING_KEY_PATH
        value: /jwsSigningKey/private.key
      - name: JWS_SIGN_PUT_PARTIES
        value: "true"
      - name: JWS_VERIFICATION_KEYS_DIRECTORY
        value: /secrets/jwsVerificationKeys
      - name: LOG_INDENT
        value: "0"
      - name: OAUTH_CLIENT_KEY
      - name: OAUTH_CLIENT_SECRET
      - name: OAUTH_REFRESH_SECONDS
        value: "3600"
      - name: OAUTH_TOKEN_ENDPOINT
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
        value: test-client-key
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
        value: test-client-secret
      - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
        value: "6000"
      - name: OUTBOUND_LISTEN_PORT
        value: "4001"
      - name: OUTBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: OUT_CA_CERT_PATH
        value: /secrets/outbound-cacert.pem
      - name: OUT_CLIENT_CERT_PATH
        value: /secrets/outbound-cert.pem
      - name: OUT_CLIENT_KEY_PATH
        value: /secrets/outbound-key.pem
      - name: PEER_ENDPOINT
        value: mojaloop-switch
      - name: QUOTES_ENDPOINT
        value: moja-quoting-service
      - name: REJECT_EXPIRED_QUOTE_RESPONSES
        value: "false"
      - name: REJECT_EXPIRED_TRANSFER_FULFILS
        value: "false"
      - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
        value: "false"
      - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
        value: "30"
      - name: RESERVE_NOTIFICATION
        value: "false"
      - name: RESOURCE_VERSIONS
        value: transfers=2.0,quotes=2.0,participants=1.1,parties=2.0,transactionRequests=1.1
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: TEST_LISTEN_PORT
        value: "4002"
      - name: TEST_MUTUAL_TLS_ENABLED
        value: "false"
      - name: TRANSACTION_REQUESTS_ENDPOINT
        value: moja-transaction-requests-service
      - name: TRANSFERS_ENDPOINT
        value: moja-ml-api-adapter-service
      - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
        value: "false"
      - name: VALIDATE_INBOUND_JWS
        value: "false"
      - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
        value: "true"
      - name: WS02_BEARER_TOKEN
        value: 7718fa9b-be13-3fe7-87f0-a12cf1628168
      - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
        value: "0"
      image: mojaloop/sdk-scheme-adapter:v24.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: scheme-adapter
      ports:
      - containerPort: 4000
        name: inboundapi
        protocol: TCP
      - containerPort: 4001
        name: outboundapi
        protocol: TCP
      - containerPort: 4002
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzbc6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until redis-cli -u redis://moja-sim-testfsp3-cache:6379 ping; do echo waiting
        for Redis; sleep 2; done;
      image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      name: wait-for-cache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzbc6
        readOnly: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jws-private-key
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp3-jws-priv-key
    - configMap:
        defaultMode: 420
        name: moja-sim-jws-public-keys
      name: jws-public-keys
    - name: tls-secrets
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp3-tls-creds
    - name: kube-api-access-dzbc6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d7dd820eaa9f8409c7687ce01ec6ce5d7d6d4b89cb85a835ad0463a9909bccc4
      image: docker.io/mojaloop/sdk-scheme-adapter:v24.6.3
      imageID: docker.io/mojaloop/sdk-scheme-adapter@sha256:933d901505b713c2b3c9be9071378a64e49ac03529250cdc858f892b6e29b985
      lastState: {}
      name: scheme-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzbc6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    initContainerStatuses:
    - containerID: containerd://50ed1fe9c992935f746cfc6ae1634e5f559dcf0cc587775ebda4fb68a3645890
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: wait-for-cache
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://50ed1fe9c992935f746cfc6ae1634e5f559dcf0cc587775ebda4fb68a3645890
          exitCode: 0
          finishedAt: "2025-06-25T01:36:43Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:43Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzbc6
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.5.47
    podIPs:
    - ip: 10.1.5.47
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-testfsp4-backend-d9f76c49d-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp4-backend
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: d9f76c49d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-rules: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8179e97e-dd4f-4e8d-8cf7-88ee343d925d"}: {}
        f:spec:
          f:containers:
            k:{"name":"backend"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"FEE_MULTIPLIER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTPS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MODEL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REPORT_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RULES_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SCHEME_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIMULATOR_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SQLITE_LOG_FILE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_API_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":3003,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/rules/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"moja-sim-rules"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.193"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:49Z"
    name: moja-sim-testfsp4-backend-d9f76c49d-wjgp8
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp4-backend-d9f76c49d
      uid: 8179e97e-dd4f-4e8d-8cf7-88ee343d925d
    resourceVersion: "250273351"
    uid: d86bde74-a1ca-45fe-af01-2cc0ef4872c6
  spec:
    containers:
    - env:
      - name: OUTBOUND_ENDPOINT
        value: http://moja-sim-testfsp4-scheme-adapter:4001
      - name: SCHEME_NAME
        value: moja-sim-testfsp4
      - name: DFSP_ID
        value: testfsp4
      - name: CA_CERT_PATH
        value: /secrets/cacert.pem
      - name: FEE_MULTIPLIER
        value: "0.05"
      - name: HTTPS_ENABLED
        value: "false"
      - name: LOG_INDENT
        value: "0"
      - name: MODEL_DATABASE
        value: ':memory:'
      - name: MUTUAL_TLS_ENABLED
        value: "false"
      - name: REPORT_API_LISTEN_PORT
        value: "3002"
      - name: RULES_FILE
        value: ../rules/rules.json
      - name: SERVER_CERT_PATH
        value: /secrets/servercert.pem
      - name: SERVER_KEY_PATH
        value: /secrets/serverkey.pem
      - name: SIMULATOR_API_LISTEN_PORT
        value: "3000"
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: SQLITE_LOG_FILE
        value: ':memory:'
      - name: TEST_API_LISTEN_PORT
        value: "3003"
      image: mojaloop/mojaloop-simulator:v15.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: backend
      ports:
      - containerPort: 3000
        name: simapi
        protocol: TCP
      - containerPort: 3002
        name: reportapi
        protocol: TCP
      - containerPort: 3003
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4ffl5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: moja-sim-testfsp4-rules
      name: moja-sim-rules
    - name: kube-api-access-4ffl5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8f732db95966620727b39577f0a060dadd94d10c1a3095b3bd5a7494eab323ab
      image: docker.io/mojaloop/mojaloop-simulator:v15.3.0
      imageID: docker.io/mojaloop/mojaloop-simulator@sha256:6ddc7cdad6472dae97ff9ed1f14139b3cc583672680f895618891ad70a294307
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /opt/app/rules/
        name: moja-sim-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4ffl5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.193
    podIPs:
    - ip: 10.1.5.193
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-sim-testfsp4-cache-77695f58b8-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp4-cache
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 77695f58b8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ce3cb677-ecdc-4c97-8614-cf6a7f5caa5c"}: {}
        f:spec:
          f:containers:
            k:{"name":"cache"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.67"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:39Z"
    name: moja-sim-testfsp4-cache-77695f58b8-gtc95
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp4-cache-77695f58b8
      uid: ce3cb677-ecdc-4c97-8614-cf6a7f5caa5c
    resourceVersion: "250272660"
    uid: 864fe07a-75a2-4c8a-87dc-10dd586065ca
  spec:
    containers:
    - image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cache
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - redis-cli ping 5
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw8m4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jw8m4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://42d2b55a8e928ca2a22e065258142c8ec3bcb6a0cbbdf722beada274799f1d16
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jw8m4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.67
    podIPs:
    - ip: 10.1.6.67
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config-jws-public-keys: 1aafb74d6475a5df9c6f7b652d0aa620754cb8e8929e47bf142eb3623b6ffeee
      checksum/config-rules: a7bae907f6495460c7b0aee69f55963595b9482d8d6a8f13e09bce05c48de75e
      checksum/secrets: 2becc1989826f352fd1f514d6de01662ec28ef23b57b7fd3c46ee784237174df
    creationTimestamp: "2025-06-25T01:36:41Z"
    generateName: moja-sim-testfsp4-scheme-adapter-76c64fc466-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: sim-testfsp4-scheme-adapter
      app.kubernetes.io/version: 15.7.0
      helm.sh/chart: mojaloop-simulator-15.7.0
      pod-template-hash: 76c64fc466
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config-jws-public-keys: {}
            f:checksum/config-rules: {}
            f:checksum/secrets: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b9063d2c-ec4b-42ee-9fcc-dfc2c89b3957"}: {}
        f:spec:
          f:containers:
            k:{"name":"scheme-adapter"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_TRANSFER_WITHOUT_QUOTE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ALS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"API_TYPE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_PARTY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTO_ACCEPT_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BACKEND_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CACHE_URL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CHECK_ILP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"DFSP_ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_BACKEND_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_FSPIOP_EVENT_HANDLER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_TEST_FEATURES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPIRY_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ILP_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"IN_SERVER_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"INBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGN_PUT_PARTIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_SIGNING_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"JWS_VERIFICATION_KEYS_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_INDENT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_REFRESH_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT"}:
                  .: {}
                  f:name: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_KEY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OAUTH_TOKEN_ENDPOINT_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CA_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_CERT_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUT_CLIENT_KEY_PATH"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OUTBOUND_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"PEER_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_QUOTE_RESPONSES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_EXPIRED_TRANSFER_FULFILS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REJECT_TRANSFERS_ON_EXPIRED_QUOTES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REQUEST_PROCESSING_TIMEOUT_SECONDS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESERVE_NOTIFICATION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESOURCE_VERSIONS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_BACKEND_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_CACHE_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SIM_SCHEME_ADAPTER_SERVICE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_LISTEN_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TEST_MUTUAL_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"VALIDATE_INBOUND_PUT_PARTIES_JWS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WS02_BEARER_TOKEN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WSO2_AUTH_FAILURE_REQUEST_RETRIES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4001,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":4002,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/jwsSigningKey/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/secrets/jwsVerificationKeys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-for-cache"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"jws-private-key"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"jws-public-keys"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls-secrets"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.182"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:55Z"
    name: moja-sim-testfsp4-scheme-adapter-76c64fc466-qhggr
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-sim-testfsp4-scheme-adapter-76c64fc466
      uid: b9063d2c-ec4b-42ee-9fcc-dfc2c89b3957
    resourceVersion: "250273403"
    uid: c27926f9-b6c9-4e29-8f7d-a50f9814ad1a
  spec:
    containers:
    - command:
      - yarn
      - start:api-svc
      env:
      - name: CACHE_URL
        value: redis://moja-sim-testfsp4-cache:6379
      - name: BACKEND_ENDPOINT
        value: moja-sim-testfsp4-backend:3000
      - name: DFSP_ID
        value: testfsp4
      - name: ALLOW_TRANSFER_WITHOUT_QUOTE
        value: "true"
      - name: ALS_ENDPOINT
        value: moja-account-lookup-service
      - name: API_TYPE
        value: fspiop
      - name: AUTO_ACCEPT_PARTY
        value: "true"
      - name: AUTO_ACCEPT_QUOTES
        value: "true"
      - name: BULK_QUOTES_ENDPOINT
        value: moja-bulk-quoting-service
      - name: BULK_TRANSFERS_ENDPOINT
        value: moja-bulk-api-adapter-service
      - name: CACHE_PORT
        value: "6379"
      - name: CHECK_ILP
        value: "true"
      - name: ENABLE_BACKEND_EVENT_HANDLER
        value: "false"
      - name: ENABLE_FSPIOP_EVENT_HANDLER
        value: "false"
      - name: ENABLE_OAUTH_TOKEN_ENDPOINT
        value: "false"
      - name: ENABLE_TEST_FEATURES
        value: "true"
      - name: EXPIRY_SECONDS
        value: "60"
      - name: ILP_SECRET
        value: Quaixohyaesahju3thivuiChai5cahng
      - name: ILP_VERSION
        value: "1"
      - name: INBOUND_LISTEN_PORT
        value: "4000"
      - name: INBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: IN_CA_CERT_PATH
        value: /secrets/inbound-cacert.pem
      - name: IN_SERVER_CERT_PATH
        value: /secrets/inbound-cert.pem
      - name: IN_SERVER_KEY_PATH
        value: /secrets/inbound-key.pem
      - name: JWS_SIGN
        value: "true"
      - name: JWS_SIGNING_KEY_PATH
        value: /jwsSigningKey/private.key
      - name: JWS_SIGN_PUT_PARTIES
        value: "true"
      - name: JWS_VERIFICATION_KEYS_DIRECTORY
        value: /secrets/jwsVerificationKeys
      - name: LOG_INDENT
        value: "0"
      - name: OAUTH_CLIENT_KEY
      - name: OAUTH_CLIENT_SECRET
      - name: OAUTH_REFRESH_SECONDS
        value: "3600"
      - name: OAUTH_TOKEN_ENDPOINT
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
        value: test-client-key
      - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
        value: test-client-secret
      - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
        value: "6000"
      - name: OUTBOUND_LISTEN_PORT
        value: "4001"
      - name: OUTBOUND_MUTUAL_TLS_ENABLED
        value: "false"
      - name: OUT_CA_CERT_PATH
        value: /secrets/outbound-cacert.pem
      - name: OUT_CLIENT_CERT_PATH
        value: /secrets/outbound-cert.pem
      - name: OUT_CLIENT_KEY_PATH
        value: /secrets/outbound-key.pem
      - name: PEER_ENDPOINT
        value: mojaloop-switch
      - name: QUOTES_ENDPOINT
        value: moja-quoting-service
      - name: REJECT_EXPIRED_QUOTE_RESPONSES
        value: "false"
      - name: REJECT_EXPIRED_TRANSFER_FULFILS
        value: "false"
      - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
        value: "false"
      - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
        value: "30"
      - name: RESERVE_NOTIFICATION
        value: "false"
      - name: RESOURCE_VERSIONS
        value: transfers=2.0,quotes=2.0,participants=1.1,parties=2.0,transactionRequests=1.1
      - name: SIM_BACKEND_SERVICE_NAME
        value: sim-payeefsp-backend
      - name: SIM_CACHE_SERVICE_NAME
        value: sim-payeefsp-cache
      - name: SIM_NAME
        value: payeefsp
      - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
        value: sim-payeefsp-scheme-adapter
      - name: TEST_LISTEN_PORT
        value: "4002"
      - name: TEST_MUTUAL_TLS_ENABLED
        value: "false"
      - name: TRANSACTION_REQUESTS_ENDPOINT
        value: moja-transaction-requests-service
      - name: TRANSFERS_ENDPOINT
        value: moja-ml-api-adapter-service
      - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
        value: "false"
      - name: VALIDATE_INBOUND_JWS
        value: "false"
      - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
        value: "true"
      - name: WS02_BEARER_TOKEN
        value: 7718fa9b-be13-3fe7-87f0-a12cf1628168
      - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
        value: "0"
      image: mojaloop/sdk-scheme-adapter:v24.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: scheme-adapter
      ports:
      - containerPort: 4000
        name: inboundapi
        protocol: TCP
      - containerPort: 4001
        name: outboundapi
        protocol: TCP
      - containerPort: 4002
        name: testapi
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 4001
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvl8c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - until redis-cli -u redis://moja-sim-testfsp4-cache:6379 ping; do echo waiting
        for Redis; sleep 2; done;
      image: redis:5.0.4-alpine
      imagePullPolicy: IfNotPresent
      name: wait-for-cache
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvl8c
        readOnly: true
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jws-private-key
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp4-jws-priv-key
    - configMap:
        defaultMode: 420
        name: moja-sim-jws-public-keys
      name: jws-public-keys
    - name: tls-secrets
      secret:
        defaultMode: 420
        secretName: moja-sim-testfsp4-tls-creds
    - name: kube-api-access-wvl8c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2b29d331ece0e46cd4449cc8bdbfdef26f1d2fbcc62a07dec6451c2f6f859169
      image: docker.io/mojaloop/sdk-scheme-adapter:v24.6.3
      imageID: docker.io/mojaloop/sdk-scheme-adapter@sha256:933d901505b713c2b3c9be9071378a64e49ac03529250cdc858f892b6e29b985
      lastState: {}
      name: scheme-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:42Z"
      volumeMounts:
      - mountPath: /secrets/jwsVerificationKeys
        name: jws-public-keys
      - mountPath: /jwsSigningKey/
        name: jws-private-key
      - mountPath: /secrets/
        name: tls-secrets
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvl8c
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    initContainerStatuses:
    - containerID: containerd://83563300abc9abb920a58eaf24e65277f540e02f44ef6c2015d991be0c2370da
      image: docker.io/library/redis:5.0.4-alpine
      imageID: docker.io/library/redis@sha256:c8d2a155166857e772e5389a44f2c9cbdabc7e7500123fdb9a04b5181b9756b8
      lastState: {}
      name: wait-for-cache
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://83563300abc9abb920a58eaf24e65277f540e02f44ef6c2015d991be0c2370da
          exitCode: 0
          finishedAt: "2025-06-25T01:36:41Z"
          reason: Completed
          startedAt: "2025-06-25T01:36:41Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wvl8c
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.1.6.182
    podIPs:
    - ip: 10.1.6.182
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 084d934c70b9aa9695978781ed101731bc3dbe409194c4957683f090356fd45f
      prometheus.io/port: "8444"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-25T01:36:39Z"
    generateName: moja-simulator-b89fdcdcc-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/name: simulator
      pod-template-hash: b89fdcdcc
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:prometheus.io/port: {}
            f:prometheus.io/scrape: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cfc56052-138c-41b9-8efc-d72b42463331"}: {}
        f:spec:
          f:containers:
            k:{"name":"simulator"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"BULK_TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"METRICS_DISABLED"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"METRICS_PREFIX"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"METRICS_SERVICENAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"METRICS_TIMEOUT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"MOCK_JWS_SIGNATURE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"PARTIES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"QUOTES_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"TRANSACTION_REQUESTS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"TRANSFERS_CONDITION"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"TRANSFERS_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"TRANSFERS_FULFIL_RESPONSE_DISABLED"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"TRANSFERS_FULFILMENT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
                k:{"name":"TRANSFERS_ILPPACKET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:configMapKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8444,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.202"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:36:56Z"
    name: moja-simulator-b89fdcdcc-rfv7n
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-simulator-b89fdcdcc
      uid: cfc56052-138c-41b9-8efc-d72b42463331
    resourceVersion: "250273432"
    uid: 5a78257d-6a8c-4574-a14e-a75475630e83
  spec:
    containers:
    - command:
      - node
      - src/index.js
      env:
      - name: LOG_LEVEL
        valueFrom:
          configMapKeyRef:
            key: LOG_LEVEL
            name: moja-simulator-config
      - name: PARTIES_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: PARTIES_ENDPOINT
            name: moja-simulator-config
      - name: QUOTES_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: QUOTES_ENDPOINT
            name: moja-simulator-config
      - name: TRANSFERS_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: TRANSFERS_ENDPOINT
            name: moja-simulator-config
      - name: BULK_TRANSFERS_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: BULK_TRANSFERS_ENDPOINT
            name: moja-simulator-config
      - name: TRANSACTION_REQUESTS_ENDPOINT
        valueFrom:
          configMapKeyRef:
            key: TRANSACTION_REQUESTS_ENDPOINT
            name: moja-simulator-config
      - name: TRANSFERS_FULFIL_RESPONSE_DISABLED
        valueFrom:
          configMapKeyRef:
            key: TRANSFERS_FULFIL_RESPONSE_DISABLED
            name: moja-simulator-config
      - name: TRANSFERS_FULFILMENT
        valueFrom:
          configMapKeyRef:
            key: TRANSFERS_FULFILMENT
            name: moja-simulator-config
      - name: TRANSFERS_CONDITION
        valueFrom:
          configMapKeyRef:
            key: TRANSFERS_CONDITION
            name: moja-simulator-config
      - name: TRANSFERS_ILPPACKET
        valueFrom:
          configMapKeyRef:
            key: TRANSFERS_ILPPACKET
            name: moja-simulator-config
      - name: MOCK_JWS_SIGNATURE
        valueFrom:
          configMapKeyRef:
            key: MOCK_JWS_SIGNATURE
            name: moja-simulator-config
      - name: METRICS_DISABLED
        valueFrom:
          configMapKeyRef:
            key: METRICS_DISABLED
            name: moja-simulator-config
      - name: METRICS_PREFIX
        valueFrom:
          configMapKeyRef:
            key: METRICS_PREFIX
            name: moja-simulator-config
      - name: METRICS_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: METRICS_TIMEOUT
            name: moja-simulator-config
      - name: METRICS_SERVICENAME
        valueFrom:
          configMapKeyRef:
            key: METRICS_SERVICENAME
            name: moja-simulator-config
      - name: EVENT_SDK_VENDOR_PREFIX
        value: mojasim
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
        value: "false"
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
        value: log,trace
      - name: EVENT_SDK_TRACEID_PER_VENDOR
        value: "false"
      - name: EVENT_SDK_LOG_FILTER
        value: audit:*, log:warn, log:error
      image: mojaloop/simulator:v12.2.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8444
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: simulator
      ports:
      - containerPort: 8444
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8444
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ws4lh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ws4lh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a242b3613af36245842f9996cdf0948ff0a77380abcb2388372791ebeab23f4c
      image: docker.io/mojaloop/simulator:v12.2.5
      imageID: docker.io/mojaloop/simulator@sha256:58ec53eb280e7537c90cda7f6f8d99a10db8b86e54780dc674d1e8af81b3c20c
      lastState: {}
      name: simulator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:39Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ws4lh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    phase: Running
    podIP: 10.1.5.202
    podIPs:
    - ip: 10.1.5.202
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: e5c0bd9b59708b543fcb078b9bfba6f7fc271b31ebfc1c295878c98ba2c2fa1b
      checksum/secret: 43d9789fffd785cb6be750a122dab60a16a3423e8afd23a78fd9fbd81a8098a2
    creationTimestamp: "2025-06-25T01:36:37Z"
    generateName: moja-transaction-requests-service-79b6c5b987-
    labels:
      app.kubernetes.io/instance: moja
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: transaction-requests-service
      app.kubernetes.io/version: 13.6.0
      helm.sh/chart: transaction-requests-service-13.6.0
      pod-template-hash: 79b6c5b987
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"67b2e011-f050-4cb8-b9be-a238e545c4c9"}: {}
        f:spec:
          f:containers:
            k:{"name":"transaction-requests-service"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSL_LOG_TRANSPORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EVENT_SDK_ASYNC_OVERRIDE_EVENTS"}:
                  .: {}
                  f:name: {}
                k:{"name":"EVENT_SDK_LOG_FILTER"}:
                  .: {}
                  f:name: {}
                k:{"name":"EVENT_SDK_LOG_METADATA_ONLY"}:
                  .: {}
                  f:name: {}
                k:{"name":"EVENT_SDK_TRACEID_PER_VENDOR"}:
                  .: {}
                  f:name: {}
                k:{"name":"EVENT_SDK_TRACESTATE_HEADER_ENABLED"}:
                  .: {}
                  f:name: {}
                k:{"name":"EVENT_SDK_VENDOR_PREFIX"}:
                  .: {}
                  f:name: {}
                k:{"name":"LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":4000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/app/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:topologySpreadConstraints:
            .: {}
            k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
            k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
              .: {}
              f:labelSelector: {}
              f:maxSkew: {}
              f:topologyKey: {}
              f:whenUnsatisfiable: {}
          f:volumes:
            .: {}
            k:{"name":"moja-transaction-requests-service-config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:36:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.198"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:37:09Z"
    name: moja-transaction-requests-service-79b6c5b987-8mhxz
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: moja-transaction-requests-service-79b6c5b987
      uid: 67b2e011-f050-4cb8-b9be-a238e545c4c9
    resourceVersion: "250273523"
    uid: a8aa17ff-b264-426b-b26c-253f74b63507
  spec:
    containers:
    - command:
      - node
      - src/index.js
      - api
      env:
      - name: LOG_LEVEL
        value: info
      - name: CSL_LOG_TRANSPORT
        value: file
      - name: EVENT_SDK_LOG_FILTER
      - name: EVENT_SDK_LOG_METADATA_ONLY
      - name: EVENT_SDK_VENDOR_PREFIX
      - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
      - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
      - name: EVENT_SDK_TRACEID_PER_VENDOR
      image: mojaloop/transaction-requests-service:v14.3.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 4000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: transaction-requests-service
      ports:
      - containerPort: 4000
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 4000
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-transaction-requests-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn4nb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: transaction-requests-service
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          app.kubernetes.io/name: transaction-requests-service
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: default.json
          path: default.json
        name: moja-transaction-requests-service-config
      name: moja-transaction-requests-service-config-volume
    - name: kube-api-access-dn4nb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:37:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:36:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://354578285c51693158007a4e4ee122ff45a4c2ab25c430dfa039ae3015f8f8d6
      image: docker.io/mojaloop/transaction-requests-service:v14.3.9
      imageID: docker.io/mojaloop/transaction-requests-service@sha256:73ba8e9553f5cd6a5bdd0544c8e2324754e9f21eaab030943aae56cb0780421e
      lastState: {}
      name: transaction-requests-service
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:36:38Z"
      volumeMounts:
      - mountPath: /opt/app/config
        name: moja-transaction-requests-service-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn4nb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.198
    podIPs:
    - ip: 10.1.5.198
    qosClass: BestEffort
    startTime: "2025-06-25T01:36:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configuration: 5d7954249577e0fe9680f4582830c69150638fea8e47df77bb4c61cf5163767b
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: mysqldb-
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mysql
      app.kubernetes.io/version: 8.0.36
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: mysqldb-74944f5f75
      helm.sh/chart: mysql-9.19.1
      statefulset.kubernetes.io/pod-name: mysqldb-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/configuration: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"37adfcb2-5e25-49b2-b804-1c031cc5a858"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"mysql"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ACCOUNT_LOOKUP_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ACCOUNT_LOOKUP_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTH_SVC_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"AUTH_SVC_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CENTRAL_LEDGER_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CENTRAL_LEDGER_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONTENT_ORACLE_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONTENT_ORACLE_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MSISDN_ORACLE_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MSISDN_ORACLE_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MYSQL_DATABASE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MYSQL_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MYSQL_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MYSQL_ROOT_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MYSQL_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":3306,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/mysql"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/docker-entrypoint-initdb.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/mysql/conf/my.cnf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"custom-init-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.118"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:44Z"
    name: mysqldb-0
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: mysqldb
      uid: 37adfcb2-5e25-49b2-b804-1c031cc5a858
    resourceVersion: "250271337"
    uid: 11db4f3a-ae87-4c39-943e-a02306c2c6f7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: mysql
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-root-password
            name: mysqldb
      - name: MYSQL_USER
        value: mluser
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mysql-password
            name: mysqldb
      - name: MYSQL_PORT
        value: "3306"
      - name: MYSQL_DATABASE
        value: mldb
      - name: ACCOUNT_LOOKUP_DATABASE
        value: account_lookup
      - name: ACCOUNT_LOOKUP_USER
        value: account_lookup
      - name: CENTRAL_LEDGER_DATABASE
        value: central_ledger
      - name: CENTRAL_LEDGER_USER
        value: central_ledger
      - name: CONTENT_ORACLE_DATABASE
        value: consent_oracle
      - name: CONTENT_ORACLE_USER
        value: consent_oracle
      - name: AUTH_SVC_DATABASE
        value: auth_svc
      - name: AUTH_SVC_USER
        value: auth_svc
      - name: MSISDN_ORACLE_DATABASE
        value: oracle_msisdn
      - name: MSISDN_ORACLE_USER
        value: oracle_msisdn
      image: docker.io/bitnami/mysql:8.0.36-debian-11-r4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -ec
          - |
            password_aux="${MYSQL_ROOT_PASSWORD:-}"
            if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
            fi
            mysqladmin status -uroot -p"${password_aux}"
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: mysql
      ports:
      - containerPort: 3306
        name: mysql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -ec
          - |
            password_aux="${MYSQL_ROOT_PASSWORD:-}"
            if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
            fi
            mysqladmin status -uroot -p"${password_aux}"
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        exec:
          command:
          - /bin/bash
          - -ec
          - |
            password_aux="${MYSQL_ROOT_PASSWORD:-}"
            if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
            fi
            mysqladmin status -uroot -p"${password_aux}"
        failureThreshold: 10
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /bitnami/mysql
        name: data
      - mountPath: /docker-entrypoint-initdb.d
        name: custom-init-scripts
      - mountPath: /opt/bitnami/mysql/conf/my.cnf
        name: config
        subPath: my.cnf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: mysqldb-0
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: mysqldb
    serviceAccountName: mysqldb
    subdomain: mysqldb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: mysqldb
      name: config
    - configMap:
        defaultMode: 420
        name: mysqldb-init-scripts
      name: custom-init-scripts
    - emptyDir: {}
      name: data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8c124bb490b58b416850ea71979c213e7cadea794bf880b06e5bc1e1dde48692
      image: docker.io/bitnami/mysql:8.0.36-debian-11-r4
      imageID: docker.io/bitnami/mysql@sha256:09774e3737d42913aa492e6c2620c1ce1a214a2f7ba6b307029e611fa8acc2fb
      lastState: {}
      name: mysql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:24Z"
      volumeMounts:
      - mountPath: /bitnami/mysql
        name: data
      - mountPath: /docker-entrypoint-initdb.d
        name: custom-init-scripts
      - mountPath: /opt/bitnami/mysql/conf/my.cnf
        name: config
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.118
    podIPs:
    - ip: 10.1.6.118
    qosClass: BestEffort
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5b2024cddd252e4a39c3d080d4f32d34fccdf32f9dd9ce46374c70555a431fa4
      checksum/scripts: bf75b2e137e762ca5d625302704e04256f2c0ec3130773e7ea748467151bac91
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: proxy-cache-redis-
    labels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: proxy-cache-redis
      app.kubernetes.io/version: 7.2.5
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: proxy-cache-redis-5fcd8f6f68
      helm.sh/chart: proxy-cache-redis-10.2.8
      statefulset.kubernetes.io/pod-name: proxy-cache-redis-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"badc2895-b4f0-419e-a60c-6ce661f67c07"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"proxy-cache-redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REDIS_AOF_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_NODES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":16379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/redis/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/redis-default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"default-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:46Z"
    name: proxy-cache-redis-0
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: proxy-cache-redis
      uid: badc2895-b4f0-419e-a60c-6ce661f67c07
    resourceVersion: "250271366"
    uid: fd05c315-6c85-4d14-bdb4-806774bc4122
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: proxy-cache-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        # Backwards compatibility change
        if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
            echo COPYING FILE
            cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
        fi
        pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
        pod_index="${pod_index[-1]}"
        if [[ "$pod_index" == "0" ]]; then
          export REDIS_CLUSTER_CREATOR="yes"
          export REDIS_CLUSTER_REPLICAS="1"
        fi
        /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
      command:
      - /bin/bash
      - -c
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: REDIS_NODES
        value: 'proxy-cache-redis-0.proxy-cache-redis-headless proxy-cache-redis-1.proxy-cache-redis-headless
          proxy-cache-redis-2.proxy-cache-redis-headless proxy-cache-redis-3.proxy-cache-redis-headless
          proxy-cache-redis-4.proxy-cache-redis-headless proxy-cache-redis-5.proxy-cache-redis-headless '
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_AOF_ENABLED
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT_NUMBER
        value: "6379"
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: proxy-cache-redis
      ports:
      - containerPort: 6379
        name: tcp-redis
        protocol: TCP
      - containerPort: 16379
        name: tcp-redis-bus
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
        subPath: redis-default.conf
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: proxy-cache-redis-0
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: proxy-cache-redis
    serviceAccountName: proxy-cache-redis
    subdomain: proxy-cache-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: proxy-cache-redis-scripts
      name: scripts
    - configMap:
        defaultMode: 420
        name: proxy-cache-redis-default
      name: default-config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f4f2f7283630bee18a72f852710968379cb6fcc4eb34b187c075aea8afad3cda
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imageID: docker.io/bitnami/redis-cluster@sha256:f4c641da7cfc4b5ec267ca7f375da9f51f044078c0a12915440ef620f38b7b44
      lastState: {}
      name: proxy-cache-redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.160
    podIPs:
    - ip: 10.1.6.160
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5b2024cddd252e4a39c3d080d4f32d34fccdf32f9dd9ce46374c70555a431fa4
      checksum/scripts: bf75b2e137e762ca5d625302704e04256f2c0ec3130773e7ea748467151bac91
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: proxy-cache-redis-
    labels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: proxy-cache-redis
      app.kubernetes.io/version: 7.2.5
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: proxy-cache-redis-5fcd8f6f68
      helm.sh/chart: proxy-cache-redis-10.2.8
      statefulset.kubernetes.io/pod-name: proxy-cache-redis-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"badc2895-b4f0-419e-a60c-6ce661f67c07"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"proxy-cache-redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REDIS_AOF_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_NODES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":16379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/redis/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/redis-default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"default-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:43Z"
    name: proxy-cache-redis-1
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: proxy-cache-redis
      uid: badc2895-b4f0-419e-a60c-6ce661f67c07
    resourceVersion: "250271319"
    uid: 6d6e51ed-6008-400f-9159-e23ed17342a5
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: proxy-cache-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        # Backwards compatibility change
        if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
            echo COPYING FILE
            cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
        fi
        pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
        pod_index="${pod_index[-1]}"
        if [[ "$pod_index" == "0" ]]; then
          export REDIS_CLUSTER_CREATOR="yes"
          export REDIS_CLUSTER_REPLICAS="1"
        fi
        /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
      command:
      - /bin/bash
      - -c
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: REDIS_NODES
        value: 'proxy-cache-redis-0.proxy-cache-redis-headless proxy-cache-redis-1.proxy-cache-redis-headless
          proxy-cache-redis-2.proxy-cache-redis-headless proxy-cache-redis-3.proxy-cache-redis-headless
          proxy-cache-redis-4.proxy-cache-redis-headless proxy-cache-redis-5.proxy-cache-redis-headless '
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_AOF_ENABLED
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT_NUMBER
        value: "6379"
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: proxy-cache-redis
      ports:
      - containerPort: 6379
        name: tcp-redis
        protocol: TCP
      - containerPort: 16379
        name: tcp-redis-bus
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
        subPath: redis-default.conf
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: proxy-cache-redis-1
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: proxy-cache-redis
    serviceAccountName: proxy-cache-redis
    subdomain: proxy-cache-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: proxy-cache-redis-scripts
      name: scripts
    - configMap:
        defaultMode: 420
        name: proxy-cache-redis-default
      name: default-config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6c51a3808f053825040e8615b71cabe2a29eeba5b60b5a9ba505e105e150755c
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imageID: docker.io/bitnami/redis-cluster@sha256:f4c641da7cfc4b5ec267ca7f375da9f51f044078c0a12915440ef620f38b7b44
      lastState:
        terminated:
          containerID: containerd://dd551d2d61b336c3e95a39be174c6d5b468c5e94667c24ab68c450b2f21ce077
          exitCode: 2
          finishedAt: "2025-06-25T01:33:30Z"
          reason: Error
          startedAt: "2025-06-25T01:33:24Z"
      name: proxy-cache-redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:31Z"
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    phase: Running
    podIP: 10.1.5.78
    podIPs:
    - ip: 10.1.5.78
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5b2024cddd252e4a39c3d080d4f32d34fccdf32f9dd9ce46374c70555a431fa4
      checksum/scripts: bf75b2e137e762ca5d625302704e04256f2c0ec3130773e7ea748467151bac91
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: proxy-cache-redis-
    labels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: proxy-cache-redis
      app.kubernetes.io/version: 7.2.5
      apps.kubernetes.io/pod-index: "2"
      controller-revision-hash: proxy-cache-redis-5fcd8f6f68
      helm.sh/chart: proxy-cache-redis-10.2.8
      statefulset.kubernetes.io/pod-name: proxy-cache-redis-2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"badc2895-b4f0-419e-a60c-6ce661f67c07"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"proxy-cache-redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REDIS_AOF_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_NODES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":16379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/redis/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/redis-default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"default-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.18"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:44Z"
    name: proxy-cache-redis-2
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: proxy-cache-redis
      uid: badc2895-b4f0-419e-a60c-6ce661f67c07
    resourceVersion: "250271330"
    uid: 165f74bf-51ee-4875-8e46-98c5670d0c01
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: proxy-cache-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        # Backwards compatibility change
        if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
            echo COPYING FILE
            cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
        fi
        pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
        pod_index="${pod_index[-1]}"
        if [[ "$pod_index" == "0" ]]; then
          export REDIS_CLUSTER_CREATOR="yes"
          export REDIS_CLUSTER_REPLICAS="1"
        fi
        /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
      command:
      - /bin/bash
      - -c
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: REDIS_NODES
        value: 'proxy-cache-redis-0.proxy-cache-redis-headless proxy-cache-redis-1.proxy-cache-redis-headless
          proxy-cache-redis-2.proxy-cache-redis-headless proxy-cache-redis-3.proxy-cache-redis-headless
          proxy-cache-redis-4.proxy-cache-redis-headless proxy-cache-redis-5.proxy-cache-redis-headless '
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_AOF_ENABLED
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT_NUMBER
        value: "6379"
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: proxy-cache-redis
      ports:
      - containerPort: 6379
        name: tcp-redis
        protocol: TCP
      - containerPort: 16379
        name: tcp-redis-bus
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
        subPath: redis-default.conf
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: proxy-cache-redis-2
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: proxy-cache-redis
    serviceAccountName: proxy-cache-redis
    subdomain: proxy-cache-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: proxy-cache-redis-scripts
      name: scripts
    - configMap:
        defaultMode: 420
        name: proxy-cache-redis-default
      name: default-config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://863ef8c497f20791dccab3ac147f17dac7d40a6618248cfcadb8f2e293a2dda0
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imageID: docker.io/bitnami/redis-cluster@sha256:f4c641da7cfc4b5ec267ca7f375da9f51f044078c0a12915440ef620f38b7b44
      lastState:
        terminated:
          containerID: containerd://539a98a2f331692e103a83db63b6d773dadb670181db78d3fd788bee40d7ba84
          exitCode: 2
          finishedAt: "2025-06-25T01:33:27Z"
          reason: Error
          startedAt: "2025-06-25T01:33:26Z"
      name: proxy-cache-redis
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:27Z"
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.18
    podIPs:
    - ip: 10.1.5.18
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5b2024cddd252e4a39c3d080d4f32d34fccdf32f9dd9ce46374c70555a431fa4
      checksum/scripts: bf75b2e137e762ca5d625302704e04256f2c0ec3130773e7ea748467151bac91
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: proxy-cache-redis-
    labels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: proxy-cache-redis
      app.kubernetes.io/version: 7.2.5
      apps.kubernetes.io/pod-index: "3"
      controller-revision-hash: proxy-cache-redis-5fcd8f6f68
      helm.sh/chart: proxy-cache-redis-10.2.8
      statefulset.kubernetes.io/pod-name: proxy-cache-redis-3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"badc2895-b4f0-419e-a60c-6ce661f67c07"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"proxy-cache-redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REDIS_AOF_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_NODES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":16379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/redis/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/redis-default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"default-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.206"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:41Z"
    name: proxy-cache-redis-3
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: proxy-cache-redis
      uid: badc2895-b4f0-419e-a60c-6ce661f67c07
    resourceVersion: "250271291"
    uid: d5e407d3-ff86-45ef-bc81-dc945c5d5930
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: proxy-cache-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        # Backwards compatibility change
        if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
            echo COPYING FILE
            cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
        fi
        pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
        pod_index="${pod_index[-1]}"
        if [[ "$pod_index" == "0" ]]; then
          export REDIS_CLUSTER_CREATOR="yes"
          export REDIS_CLUSTER_REPLICAS="1"
        fi
        /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
      command:
      - /bin/bash
      - -c
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: REDIS_NODES
        value: 'proxy-cache-redis-0.proxy-cache-redis-headless proxy-cache-redis-1.proxy-cache-redis-headless
          proxy-cache-redis-2.proxy-cache-redis-headless proxy-cache-redis-3.proxy-cache-redis-headless
          proxy-cache-redis-4.proxy-cache-redis-headless proxy-cache-redis-5.proxy-cache-redis-headless '
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_AOF_ENABLED
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT_NUMBER
        value: "6379"
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: proxy-cache-redis
      ports:
      - containerPort: 6379
        name: tcp-redis
        protocol: TCP
      - containerPort: 16379
        name: tcp-redis-bus
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
        subPath: redis-default.conf
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: proxy-cache-redis-3
    nodeName: ip-10-1-6-68.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: proxy-cache-redis
    serviceAccountName: proxy-cache-redis
    subdomain: proxy-cache-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: proxy-cache-redis-scripts
      name: scripts
    - configMap:
        defaultMode: 420
        name: proxy-cache-redis-default
      name: default-config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e2c88c1d22909e8a45a2c55e442a18ec43caf21c23851fc541ba970cf4529727
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imageID: docker.io/bitnami/redis-cluster@sha256:f4c641da7cfc4b5ec267ca7f375da9f51f044078c0a12915440ef620f38b7b44
      lastState: {}
      name: proxy-cache-redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.6.68
    hostIPs:
    - ip: 10.1.6.68
    phase: Running
    podIP: 10.1.6.206
    podIPs:
    - ip: 10.1.6.206
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5b2024cddd252e4a39c3d080d4f32d34fccdf32f9dd9ce46374c70555a431fa4
      checksum/scripts: bf75b2e137e762ca5d625302704e04256f2c0ec3130773e7ea748467151bac91
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: proxy-cache-redis-
    labels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: proxy-cache-redis
      app.kubernetes.io/version: 7.2.5
      apps.kubernetes.io/pod-index: "4"
      controller-revision-hash: proxy-cache-redis-5fcd8f6f68
      helm.sh/chart: proxy-cache-redis-10.2.8
      statefulset.kubernetes.io/pod-name: proxy-cache-redis-4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"badc2895-b4f0-419e-a60c-6ce661f67c07"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"proxy-cache-redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REDIS_AOF_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_NODES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":16379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/redis/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/redis-default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"default-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.105"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:42Z"
    name: proxy-cache-redis-4
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: proxy-cache-redis
      uid: badc2895-b4f0-419e-a60c-6ce661f67c07
    resourceVersion: "250271307"
    uid: a5730fb3-4c3c-42c8-8914-be258169267e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: proxy-cache-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        # Backwards compatibility change
        if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
            echo COPYING FILE
            cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
        fi
        pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
        pod_index="${pod_index[-1]}"
        if [[ "$pod_index" == "0" ]]; then
          export REDIS_CLUSTER_CREATOR="yes"
          export REDIS_CLUSTER_REPLICAS="1"
        fi
        /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
      command:
      - /bin/bash
      - -c
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: REDIS_NODES
        value: 'proxy-cache-redis-0.proxy-cache-redis-headless proxy-cache-redis-1.proxy-cache-redis-headless
          proxy-cache-redis-2.proxy-cache-redis-headless proxy-cache-redis-3.proxy-cache-redis-headless
          proxy-cache-redis-4.proxy-cache-redis-headless proxy-cache-redis-5.proxy-cache-redis-headless '
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_AOF_ENABLED
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT_NUMBER
        value: "6379"
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: proxy-cache-redis
      ports:
      - containerPort: 6379
        name: tcp-redis
        protocol: TCP
      - containerPort: 16379
        name: tcp-redis-bus
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
        subPath: redis-default.conf
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: proxy-cache-redis-4
    nodeName: ip-10-1-5-76.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: proxy-cache-redis
    serviceAccountName: proxy-cache-redis
    subdomain: proxy-cache-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: proxy-cache-redis-scripts
      name: scripts
    - configMap:
        defaultMode: 420
        name: proxy-cache-redis-default
      name: default-config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6660503e116fcc310efd57348d9a79220e448cb2a087fbf8808bab1f022abf15
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imageID: docker.io/bitnami/redis-cluster@sha256:f4c641da7cfc4b5ec267ca7f375da9f51f044078c0a12915440ef620f38b7b44
      lastState: {}
      name: proxy-cache-redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.5.76
    hostIPs:
    - ip: 10.1.5.76
    phase: Running
    podIP: 10.1.5.105
    podIPs:
    - ip: 10.1.5.105
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5b2024cddd252e4a39c3d080d4f32d34fccdf32f9dd9ce46374c70555a431fa4
      checksum/scripts: bf75b2e137e762ca5d625302704e04256f2c0ec3130773e7ea748467151bac91
      checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: proxy-cache-redis-
    labels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: proxy-cache-redis
      app.kubernetes.io/version: 7.2.5
      apps.kubernetes.io/pod-index: "5"
      controller-revision-hash: proxy-cache-redis-5fcd8f6f68
      helm.sh/chart: proxy-cache-redis-10.2.8
      statefulset.kubernetes.io/pod-name: proxy-cache-redis-5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/config: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"badc2895-b4f0-419e-a60c-6ce661f67c07"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"proxy-cache-redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"REDIS_AOF_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_NODES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":16379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/bitnami/redis/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/redis-default.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"default-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.52"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:42Z"
    name: proxy-cache-redis-5
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: proxy-cache-redis
      uid: badc2895-b4f0-419e-a60c-6ce661f67c07
    resourceVersion: "250271300"
    uid: a7614d30-1008-4ab2-8247-32fe3ae64806
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: proxy-cache-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        # Backwards compatibility change
        if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
            echo COPYING FILE
            cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
        fi
        pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
        pod_index="${pod_index[-1]}"
        if [[ "$pod_index" == "0" ]]; then
          export REDIS_CLUSTER_CREATOR="yes"
          export REDIS_CLUSTER_REPLICAS="1"
        fi
        /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
      command:
      - /bin/bash
      - -c
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: REDIS_NODES
        value: 'proxy-cache-redis-0.proxy-cache-redis-headless proxy-cache-redis-1.proxy-cache-redis-headless
          proxy-cache-redis-2.proxy-cache-redis-headless proxy-cache-redis-3.proxy-cache-redis-headless
          proxy-cache-redis-4.proxy-cache-redis-headless proxy-cache-redis-5.proxy-cache-redis-headless '
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_AOF_ENABLED
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT_NUMBER
        value: "6379"
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: proxy-cache-redis
      ports:
      - containerPort: 6379
        name: tcp-redis
        protocol: TCP
      - containerPort: 16379
        name: tcp-redis-bus
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /scripts/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
        subPath: redis-default.conf
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: proxy-cache-redis-5
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: proxy-cache-redis
    serviceAccountName: proxy-cache-redis
    subdomain: proxy-cache-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: proxy-cache-redis-scripts
      name: scripts
    - configMap:
        defaultMode: 420
        name: proxy-cache-redis-default
      name: default-config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://876edbdd36c6143c7727823a797a0dedc5712a4604dcf6002919d1482e2b24e0
      image: docker.io/bitnami/redis-cluster:7.2.5-debian-12-r3
      imageID: docker.io/bitnami/redis-cluster@sha256:f4c641da7cfc4b5ec267ca7f375da9f51f044078c0a12915440ef620f38b7b44
      lastState: {}
      name: proxy-cache-redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:25Z"
      volumeMounts:
      - mountPath: /scripts
        name: scripts
      - mountPath: /bitnami/redis/data
        name: redis-data
      - mountPath: /opt/bitnami/redis/etc/redis-default.conf
        name: default-config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /opt/bitnami/redis/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/redis/logs
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    phase: Running
    podIP: 10.1.6.52
    podIPs:
    - ip: 10.1.6.52
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: ttk-mongodb-5679dc886b-
    labels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ttk-mongodb
      app.kubernetes.io/version: 8.0.6
      helm.sh/chart: ttk-mongodb-16.4.9
      pod-template-hash: 5679dc886b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"61f18360-f76e-4ef8-84bc-1c549755d35b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"mongodb"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_JAVASCRIPT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_DISABLE_SYSTEM_LOG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_DIRECTORY_PER_DB"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_IPV6"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ENABLE_JOURNAL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_EXTRA_DATABASES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_EXTRA_PASSWORDS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MONGODB_EXTRA_USERNAMES"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_PORT_NUMBER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_ROOT_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"MONGODB_ROOT_USER"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MONGODB_SYSTEM_LOG_VERBOSITY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":27017,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/.mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/bitnami/mongodb"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/bitnami/scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/mongodb/conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/mongodb/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/mongodb/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"log-dir"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:privileged: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/opt/bitnami/mongodb/logs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"common-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"datadir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.6.121"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:25Z"
    name: ttk-mongodb-5679dc886b-5tlsk
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ttk-mongodb-5679dc886b
      uid: 61f18360-f76e-4ef8-84bc-1c549755d35b
    resourceVersion: "250271158"
    uid: d71696eb-49e2-44de-a36a-0f38a4b846d7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: mongodb
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: ttk-mongodb
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: MONGODB_EXTRA_USERNAMES
        value: ttk
      - name: MONGODB_EXTRA_DATABASES
        value: ttk
      - name: MONGODB_EXTRA_PASSWORDS
        valueFrom:
          secretKeyRef:
            key: mongodb-passwords
            name: ttk-mongodb
      - name: MONGODB_ROOT_USER
        value: root
      - name: MONGODB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: mongodb-root-password
            name: ttk-mongodb
      - name: ALLOW_EMPTY_PASSWORD
        value: "no"
      - name: MONGODB_SYSTEM_LOG_VERBOSITY
        value: "0"
      - name: MONGODB_DISABLE_SYSTEM_LOG
        value: "no"
      - name: MONGODB_DISABLE_JAVASCRIPT
        value: "no"
      - name: MONGODB_ENABLE_JOURNAL
        value: "yes"
      - name: MONGODB_PORT_NUMBER
        value: "27017"
      - name: MONGODB_ENABLE_IPV6
        value: "no"
      - name: MONGODB_ENABLE_DIRECTORY_PER_DB
        value: "no"
      - name: EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU
        value: "1"
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imagePullPolicy: IfNotPresent
      name: mongodb
      ports:
      - containerPort: 27017
        name: mongodb
        protocol: TCP
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/mongodb/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/mongodb/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /.mongodb
        name: empty-dir
        subPath: mongosh-home
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /bitnami/scripts
        name: common-scripts
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - -ec
      - |
        ln -sf /dev/stdout "/opt/bitnami/mongodb/logs/mongodb.log"
      command:
      - /bin/bash
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imagePullPolicy: IfNotPresent
      name: log-dir
      resources:
        limits:
          cpu: 750m
          ephemeral-storage: 2Gi
          memory: 768Mi
        requests:
          cpu: 500m
          ephemeral-storage: 50Mi
          memory: 512Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
        subPath: app-logs-dir
    nodeName: ip-10-1-6-136.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: ttk-mongodb
    serviceAccountName: ttk-mongodb
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: empty-dir
    - configMap:
        defaultMode: 360
        name: ttk-mongodb-common-scripts
      name: common-scripts
    - emptyDir: {}
      name: datadir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://608452381ad68c11ebcfc3a31097742dd7093591fb8c368cc1f29a8fed91737d
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imageID: docker.io/bitnami/mongodb@sha256:962c731a4c6ea63eadfa40de9805a8ddd7f42319b59a15fe9bda4692c31828ac
      lastState: {}
      name: mongodb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:24Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /opt/bitnami/mongodb/conf
        name: empty-dir
      - mountPath: /opt/bitnami/mongodb/tmp
        name: empty-dir
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
      - mountPath: /.mongodb
        name: empty-dir
      - mountPath: /bitnami/mongodb
        name: datadir
      - mountPath: /bitnami/scripts
        name: common-scripts
    hostIP: 10.1.6.136
    hostIPs:
    - ip: 10.1.6.136
    initContainerStatuses:
    - containerID: containerd://7999bc1615a59bf66483934cb0d0dbcf76903c36d5faea89d183da0d9810dd7b
      image: docker.io/bitnami/mongodb:8.0.6-debian-12-r0
      imageID: docker.io/bitnami/mongodb@sha256:962c731a4c6ea63eadfa40de9805a8ddd7f42319b59a15fe9bda4692c31828ac
      lastState: {}
      name: log-dir
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7999bc1615a59bf66483934cb0d0dbcf76903c36d5faea89d183da0d9810dd7b
          exitCode: 0
          finishedAt: "2025-06-25T01:33:24Z"
          reason: Completed
          startedAt: "2025-06-25T01:33:24Z"
      volumeMounts:
      - mountPath: /opt/bitnami/mongodb/logs
        name: empty-dir
    phase: Running
    podIP: 10.1.6.121
    podIPs:
    - ip: 10.1.6.121
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/configmap: 2a9ab4a5432825504d910f022638674ce88eaefe9f9f595ad8bc107377d104fb
      checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
      checksum/scripts: bdec350b84a1ace7cc118db113a21c9f160bde3425b07714e1c0c1da722621cf
      checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    creationTimestamp: "2025-06-25T01:33:24Z"
    generateName: ttksims-redis-master-
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: backend
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ttksims-redis
      app.kubernetes.io/version: 7.4.2
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: ttksims-redis-master-85cfdcf696
      helm.sh/chart: ttksims-redis-20.11.4
      statefulset.kubernetes.io/pod-name: ttksims-redis-master-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum/configmap: {}
            f:checksum/health: {}
            f:checksum/scripts: {}
            f:checksum/secret: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"354ea130-a779-491b-a352-5fdc7d3c9236"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"redis"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"BITNAMI_DEBUG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_REPLICATION_MODE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"REDIS_TLS_ENABLED"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6379,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:ephemeral-storage: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seLinuxOptions: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/health"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/redis/etc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
                k:{"mountPath":"/opt/bitnami/redis/mounted-etc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/opt/bitnami/scripts/start-scripts"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:fsGroupChangePolicy: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"empty-dir"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"health"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"redis-data"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"start-scripts"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-06-25T01:33:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.1.5.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-06-25T01:33:46Z"
    name: ttksims-redis-master-0
    namespace: moja3
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: ttksims-redis-master
      uid: 354ea130-a779-491b-a352-5fdc7d3c9236
    resourceVersion: "250271352"
    uid: ab813963-93b1-444e-bd79-65bd7760bfe1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: master
                app.kubernetes.io/instance: backend
                app.kubernetes.io/name: ttksims-redis
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - args:
      - -c
      - /opt/bitnami/scripts/start-scripts/start-master.sh
      command:
      - /bin/bash
      env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: REDIS_REPLICATION_MODE
        value: master
      - name: ALLOW_EMPTY_PASSWORD
        value: "yes"
      - name: REDIS_TLS_ENABLED
        value: "no"
      - name: REDIS_PORT
        value: "6379"
      image: docker.io/bitnami/redis:7.4.2-debian-12-r6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_liveness_local.sh 5
        failureThreshold: 5
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 6
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /health/ping_readiness_local.sh 1
        failureThreshold: 5
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 2
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/bitnami/scripts/start-scripts
        name: start-scripts
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/mounted-etc
        name: config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: ttksims-redis-master-0
    nodeName: ip-10-1-5-162.eu-west-2.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: ttksims-redis-master
    serviceAccountName: ttksims-redis-master
    subdomain: ttksims-redis-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 493
        name: ttksims-redis-scripts
      name: start-scripts
    - configMap:
        defaultMode: 493
        name: ttksims-redis-health
      name: health
    - configMap:
        defaultMode: 420
        name: ttksims-redis-configuration
      name: config
    - emptyDir: {}
      name: empty-dir
    - emptyDir: {}
      name: redis-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T01:33:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cbf146a968466b3a821e39320c5877e3597de3c124718cc4eb95858c2ac4ca23
      image: docker.io/bitnami/redis:7.4.2-debian-12-r6
      imageID: docker.io/bitnami/redis@sha256:6a5b1d0b594272835139b5200579228b82e052b03266835667947a6b76b2a92e
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T01:33:24Z"
      volumeMounts:
      - mountPath: /opt/bitnami/scripts/start-scripts
        name: start-scripts
      - mountPath: /health
        name: health
      - mountPath: /data
        name: redis-data
      - mountPath: /opt/bitnami/redis/mounted-etc
        name: config
      - mountPath: /opt/bitnami/redis/etc/
        name: empty-dir
      - mountPath: /tmp
        name: empty-dir
    hostIP: 10.1.5.162
    hostIPs:
    - ip: 10.1.5.162
    phase: Running
    podIP: 10.1.5.150
    podIPs:
    - ip: 10.1.5.150
    qosClass: Burstable
    startTime: "2025-06-25T01:33:24Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
