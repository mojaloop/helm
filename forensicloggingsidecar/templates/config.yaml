{{- $kmsHost := printf "%s-%s" .Release.Name .Values.centralkms.nameOverride -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "forensicloggingsidecar.fullname" . }}
  labels:
    app: {{ template "forensicloggingsidecar.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  ## The name for the sidecar service. Default: TestService
  # sidecar.name: "TestService"
  ## The port the sidecar server will run on. Default: 5678
  sidecar.port: "{{ .Values.service.internalPort }}"
  ## The message batch size. Default: 64
  # sidecar.batch.side: 64
  # The url for the KMS. Default: ws://localhost:8080/sidecar
  # kms.uri: "ws://central-kms:80/sidecar"
  kms.uri: "ws://{{ $kmsHost }}:{{ .Values.centralkms.service.externalPort }}/sidecar"
  ## The time, in milliseconds, between pings to the KMS. Default: 30000
  # kms.ping.interval: 30000
  ## The time, in milliseconds, to timeout a request to the KMS. Default: 30000
  # kms.request.timeout: 30000
  ## The time, in milliseconds, to timeout a connection attempt to the KMS. Default: 60000
  # kms.connect.timeout: 60000
  ## TBC?
  # kms.reconnect.interval: 

  default.json: |
      {{ .Values.config.default_json | replace "$servicePort" (printf "%.0f" .Values.service.internalPort) | replace "$kmsPort" (printf "%.0f" .Values.centralkms.service.externalPort) | replace "$kmsHost" $kmsHost | replace "$serviceName" (include "forensicloggingsidecar.fullname" .) }}

  knexfile.js: |
    'use strict'

    const migrationsDirectory = '/opt/sidecar/migrations'
    const Config = require('/opt/sidecar/src/lib/config')

    module.exports = {
      client: 'pg',
      connection: Config.DATABASE_URI,
      migrations: {
        directory: migrationsDirectory,
        tableName: 'migrations',
        stub: `${migrationsDirectory}/migration.template`
      }
    }
